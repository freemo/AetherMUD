Index: planet_ink/coffee_mud/MOBS/interfaces/MOB.java
===================================================================
--- planet_ink/coffee_mud/MOBS/interfaces/MOB.java	(revision 2354)
+++ planet_ink/coffee_mud/MOBS/interfaces/MOB.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -75,9 +75,6 @@
 	public int rangeToTarget();
 	public boolean mayIFight(MOB mob);
 	public boolean mayPhysicallyAttack(MOB mob);
-	public int adjustedAttackBonus(MOB mob);
-	public int adjustedArmor();
-	public int adjustedDamage(Weapon weapon, MOB target);
 	public long peaceTime();
 	
 	public void resetVectors();
@@ -174,7 +171,6 @@
 
 	public int freeWearPositions(long wornCode, short belowLayer, short layerAttributes);
 	public boolean isMine(Environmental env);
-	public void confirmWearability();
 	public void giveItem(Item thisContainer);
 	public int getWearPositions(long wornCode);
 
Index: planet_ink/coffee_mud/MOBS/StdShopKeeper.java
===================================================================
--- planet_ink/coffee_mud/MOBS/StdShopKeeper.java	(revision 2354)
+++ planet_ink/coffee_mud/MOBS/StdShopKeeper.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -113,35 +113,6 @@
     
     public CoffeeShop getShop(){return shop;}
     
-
-    protected int processVariableEquipment()
-    {
-        int newLastTickedDateTime=super.processVariableEquipment();
-        if(newLastTickedDateTime==0)
-        {
-            Vector rivals=new Vector();
-            for(int v=0;v<shop.getBaseInventory().size();v++)
-            {
-                Environmental E=(Environmental)shop.getBaseInventory().elementAt(v);
-                if((E.baseEnvStats().rejuv()>0)&&(E.baseEnvStats().rejuv()<Integer.MAX_VALUE))
-                    rivals.addElement(E);
-            }
-            for(int r=0;r<rivals.size();r++)
-            {
-                Environmental E=(Environmental)rivals.elementAt(r);
-                if(CMLib.dice().rollPercentage()>E.baseEnvStats().rejuv())
-                    getShop().delAllStoreInventory(E);
-                else
-                {
-                    E.baseEnvStats().setRejuv(0);
-                    E.envStats().setRejuv(0);
-                }
-            }
-        }
-        return newLastTickedDateTime;
-    }
-
-
     public String storeKeeperString(){return CMLib.coffeeShops().storeKeeperString(getShop());}
 	public boolean doISellThis(Environmental thisThang){return CMLib.coffeeShops().doISellThis(thisThang,this);}
     protected Area getStartArea(){
Index: planet_ink/coffee_mud/MOBS/StdMOB.java
===================================================================
--- planet_ink/coffee_mud/MOBS/StdMOB.java	(revision 2354)
+++ planet_ink/coffee_mud/MOBS/StdMOB.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -144,12 +144,9 @@
 	}
 	public int getExpNeededLevel()
 	{
-		if(!isMonster())
-		{
-			if((CMProps.getIntVar(CMProps.SYSTEMI_LASTPLAYERLEVEL)>0)
-			&&(CMProps.getIntVar(CMProps.SYSTEMI_LASTPLAYERLEVEL)<=baseEnvStats().level()))
-				return Integer.MAX_VALUE;
-		}
+		if((CMProps.getIntVar(CMProps.SYSTEMI_LASTPLAYERLEVEL)>0)
+		&&(CMProps.getIntVar(CMProps.SYSTEMI_LASTPLAYERLEVEL)<=baseEnvStats().level()))
+			return Integer.MAX_VALUE;
 		if((CMSecurity.isDisabled("EXPERIENCE"))
 		||(charStats().getCurrentClass().expless())
 		||(charStats().getMyRace().expless()))
@@ -450,8 +447,11 @@
 	public int baseWeight()
 	{
 		if(charStats().getMyRace()==baseCharStats().getMyRace())
-			return baseEnvStats().weight();
-		return charStats().getMyRace().lightestWeight()+charStats().getMyRace().weightVariance();
+			return baseEnvStats().weight() 
+				 + charStats().getStat(CharStats.STAT_WEIGHTADJ);
+		return charStats().getMyRace().lightestWeight()
+		        + charStats().getStat(CharStats.STAT_WEIGHTADJ)
+				+ charStats().getMyRace().weightVariance();
 	}
 
 	public int maxCarry()
@@ -472,7 +472,7 @@
     }
 	public int maxFollowers()
 	{
-		return ((int)Math.round(CMath.div(charStats().getStat(CharStats.STAT_CHARISMA),4.0))+1);
+		return ((int)Math.round(CMath.div(charStats().getStat(CharStats.STAT_CHARISMA)-8,4.0))+1);
 	}
 	public int totalFollowers()
 	{
@@ -927,62 +927,6 @@
 		   return false;
 		return true;
 	}
-	public int adjustedAttackBonus(MOB mob)
-	{
-		double att=(double)(
-				envStats().attackAdjustment()
-				+((charStats().getStat(CharStats.STAT_STRENGTH)-9)*3));
-		if(curState().getHunger()<1) att=att*.9;
-		if(curState().getThirst()<1) att=att*.9;
-		if(curState().getFatigue()>CharState.FATIGUED_MILLIS) att=att*.8;
-		if(mob==null)
-			return (int)Math.round(att);
-	    int diff=envStats().level()-mob.envStats().level();
-		return (diff*CMath.abs(diff))
-			   +(int)Math.round(att);
-	}
-
-	public int adjustedArmor()
-	{
-		double arm=(double)(((charStats().getStat(CharStats.STAT_DEXTERITY)-9)*3)
-							   +50);
-		if((envStats().disposition()&EnvStats.IS_SLEEPING)>0) arm=0.0;
-		if(arm>0.0)
-		{
-			if(curState().getHunger()<1) arm=arm*.85;
-			if(curState().getThirst()<1) arm=arm*.85;
-			if(curState().getFatigue()>CharState.FATIGUED_MILLIS) arm=arm*.85;
-			if((envStats().disposition()&EnvStats.IS_SITTING)>0) arm=arm*.75;
-		}
-		return (int)Math.round(envStats().armor()-arm);
-	}
-
-	public int adjustedDamage(Weapon weapon, MOB target)
-	{
-		double damageAmount=0.0;
-		if(target!=null)
-		{
-			if((weapon!=null)&&((weapon.weaponClassification()==Weapon.CLASS_RANGED)||(weapon.weaponClassification()==Weapon.CLASS_THROWN)))
-				damageAmount = (double)(CMLib.dice().roll(1, weapon.envStats().damage(),1));
-			else
-				damageAmount = (double)(CMLib.dice().roll(1, envStats().damage(), (charStats().getStat(CharStats.STAT_STRENGTH) / 3)-2));
-			if(!CMLib.flags().canBeSeenBy(target,this)) damageAmount *=.5;
-			if(CMLib.flags().isSleeping(target)) damageAmount *=1.5;
-			else
-			if(CMLib.flags().isSitting(target)) damageAmount *=1.2;
-		}
-		else
-		if((weapon!=null)&&((weapon.weaponClassification()==Weapon.CLASS_RANGED)||(weapon.weaponClassification()==Weapon.CLASS_THROWN)))
-			damageAmount = (double)(weapon.envStats().damage()+1);
-		else
-			damageAmount = (double)(envStats().damage()+(charStats().getStat(CharStats.STAT_STRENGTH) / 3)-2);
-		if(curState().getHunger() < 1) damageAmount *= .8;
-		if(curState().getFatigue()>CharState.FATIGUED_MILLIS) damageAmount *=.8;
-		if(curState().getThirst() < 1) damageAmount *= .9;
-		if(damageAmount<1.0) damageAmount=1.0;
-		return (int)Math.round(damageAmount);
-	}
-
 	public void setAtRange(int newRange){atRange=newRange;}
 	public int rangeToTarget(){return atRange;}
 	public int maxRange(){return maxRange(null);}
@@ -2104,7 +2048,9 @@
 						{	chanceToFail=charStats().getSave(c); break;}
 					if(chanceToFail>Integer.MIN_VALUE)
 					{
-						chanceToFail+=(envStats().level()-msg.source().envStats().level());
+				        int diff = (envStats().level()-msg.source().envStats().level());
+				        int diffSign = diff < 0 ? -1 : 1;
+						chanceToFail+=(diffSign * (diff * diff));
 						if(chanceToFail<5)
 							chanceToFail=5;
 						else
@@ -2433,7 +2379,8 @@
 			{
 				if((msg.targetMinor()==CMMsg.TYP_SPEAK)
 				 &&(msg.source()!=null)
-				 &&(playerStats()!=null))
+				 &&(playerStats()!=null)
+				 &&(!msg.source().isMonster()))
 					playerStats().setReplyTo(msg.source(),PlayerStats.REPLY_SAY);
 				tell(msg.source(),msg.target(),msg.tool(),msg.targetMessage());
 			}
@@ -2554,93 +2501,6 @@
 
 	public void affectCharStats(MOB affectedMob, CharStats affectableStats){}
 
-	protected int processVariableEquipment()
-	{
-		int newLastTickedDateTime=0;
-		for(int i=0;i<location().numInhabitants();i++)
-		{
-			MOB M=location().fetchInhabitant(i);
-			if((M!=null)&&(!M.isMonster())&&(CMSecurity.isAllowed(M,location(),"CMDMOBS")))
-			{ newLastTickedDateTime=-1; break;}
-		}
-		if(newLastTickedDateTime==0)
-		{
-			Vector rivals=new Vector();
-			for(int i=0;i<inventorySize();i++)
-			{
-				Item I=fetchInventory(i);
-				if((I!=null)&&(I.baseEnvStats().rejuv()>0)&&(I.baseEnvStats().rejuv()<Integer.MAX_VALUE))
-				{
-					Vector V=null;
-					for(int r=0;r<rivals.size();r++)
-					{
-						Vector V2=(Vector)rivals.elementAt(r);
-						Item I2=(Item)V2.firstElement();
-						if(I2.rawWornCode()==I.rawWornCode())
-						{ V=V2; break;}
-					}
-					if(V==null){ V=new Vector(); rivals.addElement(V);}
-					V.addElement(I);
-				}
-			}
-			for(int i=0;i<rivals.size();i++)
-			{
-				Vector V=(Vector)rivals.elementAt(i);
-				if((V.size()==1)||(((Item)V.firstElement()).rawWornCode()==0))
-				{
-					for(int r=0;r<V.size();r++)
-					{
-						Item I=(Item)V.elementAt(r);
-						if(CMLib.dice().rollPercentage()<I.baseEnvStats().rejuv())
-							delInventory(I);
-						else
-						{
-							I.baseEnvStats().setRejuv(0);
-							I.envStats().setRejuv(0);
-						}
-					}
-				}
-				else
-				{
-					int totalChance=0;
-					for(int r=0;r<V.size();r++)
-					{
-						Item I=(Item)V.elementAt(r);
-						totalChance+=I.baseEnvStats().rejuv();
-					}
-					int chosenChance=CMLib.dice().roll(1,totalChance,0);
-					totalChance=0;
-					Item chosenI=null;
-					for(int r=0;r<V.size();r++)
-					{
-						Item I=(Item)V.elementAt(r);
-						if(chosenChance<=(totalChance+I.baseEnvStats().rejuv()))
-						{
-							chosenI=I;
-							break;
-						}
-						totalChance+=I.baseEnvStats().rejuv();
-					}
-					for(int r=0;r<V.size();r++)
-					{
-						Item I=(Item)V.elementAt(r);
-						if(chosenI!=I)
-							delInventory(I);
-						else
-						{
-							I.baseEnvStats().setRejuv(0);
-							I.envStats().setRejuv(0);
-						}
-					}
-				}
-			}
-			recoverEnvStats();
-			recoverCharStats();
-			recoverMaxState();
-		}
-		return newLastTickedDateTime;
-	}
-
 	public long getTickStatus(){return tickStatus;}
 
 	public boolean tick(Tickable ticking, int tickID)
@@ -2689,7 +2549,7 @@
                 &&(location().getArea().getAreaState()<Area.STATE_FROZEN))
 				{
 					if(lastTickedDateTime==-1)
-						lastTickedDateTime=processVariableEquipment();
+						lastTickedDateTime=CMLib.utensils().processVariableEquipment(this);
 					else
 						lastTickedDateTime++;
 				}
@@ -2744,11 +2604,11 @@
                      	}
 				        if((curState().getFatigue()>(CharState.FATIGUED_EXHAUSTED_MILLIS))
 						&&(!isMonster())
-                     	&&(CMLib.dice().rollPercentage()==1)
-                     	&&(!CMSecurity.isDisabled("AUTODISEASE")))
+                     	&&(CMLib.dice().rollPercentage()==1))
                      	{
-                        	Ability sleep = CMClass.getAbility("Spell_Sleep");
-                        	if(sleep!=null) sleep.invoke(this, this, true,0);
+							location().show(this,null,CMMsg.MSG_OK_ACTION,"<S-NAME> fall(s) asleep from exhaustion!!");
+							baseEnvStats().setDisposition(EnvStats.IS_SLEEPING);
+							envStats().setDisposition(EnvStats.IS_SLEEPING);
                      	}
 					}
 				}
@@ -2900,60 +2760,6 @@
 
 	public int compareTo(CMObject o){ return CMClass.classID(this).compareToIgnoreCase(CMClass.classID(o));}
 
-	public void confirmWearability()
-	{
-		Race R=charStats().getMyRace();
-		DVector reWearSet=new DVector(2);
-		Item item=null;
-		for(int i=0;i<inventorySize();i++)
-		{
-			item=fetchInventory(i);
-			if((item!=null)&&(!item.amWearingAt(Item.IN_INVENTORY)))
-			{
-				Long oldCode=new Long(item.rawWornCode());
-				item.unWear();
-				if(reWearSet.size()==0)
-					reWearSet.addElement(item,oldCode);
-				else
-				{
-					short layer=(item instanceof Armor)?((Armor)item).getClothingLayer():0;
-					int d=0;
-					for(;d<reWearSet.size();d++)
-						if(reWearSet.elementAt(d,1) instanceof Armor)
-						{
-							if(((Armor)reWearSet.elementAt(d,1)).getClothingLayer()>layer)
-								break;
-						}
-						else
-						if(0>layer)
-							break;
-					if(d>=reWearSet.size())
-						reWearSet.addElement(item,oldCode);
-					else
-						reWearSet.insertElementAt(d,item,oldCode);
-				}
-
-			}
-		}
-		for(int r=0;r<reWearSet.size();r++)
-		{
-			item=(Item)reWearSet.elementAt(r,1);
-			long oldCode=((Long)reWearSet.elementAt(r,2)).longValue();
-			int msgCode=CMMsg.MSG_WEAR;
-			if((oldCode&Item.WORN_WIELD)>0)
-				msgCode=CMMsg.MSG_WIELD;
-			else
-			if((oldCode&Item.WORN_HELD)>0)
-				msgCode=CMMsg.MSG_HOLD;
-			CMMsg msg=CMClass.getMsg(this,item,null,CMMsg.NO_EFFECT,null,msgCode,null,CMMsg.NO_EFFECT,null);
-			if((R.okMessage(this,msg))
-			&&(item.okMessage(item,msg))
-            &&((charStats().getWearableRestrictionsBitmap()&oldCode)==0)
-			&&(item.canWear(this,oldCode)))
-			   item.wearAt(oldCode);
-		}
-	}
-
 	public void addInventory(Item item)
 	{
 		item.setOwner(this);
@@ -3388,18 +3194,36 @@
 		return null;
 	}
 
-
+	private void clearExpertiseCache()
+	{
+		Ability A=null;
+		for(int a=0;a<numAbilities();a++)
+		{
+			A=fetchAbility(a);
+			if(A!=null) A.clearExpertiseCache();
+		}
+		for(int a=0;a<numEffects();a++)
+		{
+			A=fetchEffect(a);
+			if(A!=null) A.clearExpertiseCache();
+		}
+	}
+	
 	/** Manipulation of the expertise list */
 	public void addExpertise(String of)
 	{
 		if(expertises==null) expertises=new Vector();
-		if(fetchExpertise(of)==null) expertises.addElement(of);
+		if(fetchExpertise(of)==null) {
+			expertises.addElement(of);
+			clearExpertiseCache();
+		}
 	}
 	public void delExpertise(String of)
 	{
 		of=fetchExpertise(of);
 		if(of!=null){
 		    expertises.removeElement(of);
+			clearExpertiseCache();
 		}
 	}
 	public int numExpertises(){return (expertises==null)?0:expertises.size();}
@@ -3610,9 +3434,9 @@
     }
     public int fetchFaction(String which)
     {
-		which=which.toUpperCase();
-        if(!factions.containsKey(which)) return Integer.MAX_VALUE;
-        return ((Faction.FactionData)factions.get(which)).value();
+    	Faction.FactionData data=(Faction.FactionData)factions.get(which.toUpperCase());
+    	if(data == null)  return Integer.MAX_VALUE;
+    	return data.value();
     }
     public void removeFaction(String which)
     {
Index: planet_ink/coffee_mud/MOBS/StdDeity.java
===================================================================
--- planet_ink/coffee_mud/MOBS/StdDeity.java	(revision 2354)
+++ planet_ink/coffee_mud/MOBS/StdDeity.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -145,59 +145,59 @@
 			switch(DT.triggerCode)
 			{
 			case TRIGGER_SAY:
-				buf.append("the player says '"+DT.parm1.toLowerCase()+"'");
+				buf.append("the player should say '"+DT.parm1.toLowerCase()+"'");
 				break;
 			case TRIGGER_READING:
 				if(DT.parm1.equals("0"))
-					buf.append("the player reads something");
+					buf.append("the player should read something");
 				else
-					buf.append("the player reads '"+DT.parm1.toLowerCase()+"'");
+					buf.append("the player should read '"+DT.parm1.toLowerCase()+"'");
 				break;
 			case TRIGGER_TIME:
 				buf.append("the hour of the day is "+DT.parm1.toLowerCase()+"");
 				break;
 			case TRIGGER_PUTTHING:
-				buf.append("the player puts "+DT.parm1.toLowerCase()+" in "+DT.parm2.toLowerCase());
+				buf.append("the player should put "+DT.parm1.toLowerCase()+" in "+DT.parm2.toLowerCase());
 				break;
 			case TRIGGER_BURNTHING:
-				buf.append("the player burns "+DT.parm1.toLowerCase());
+				buf.append("the player should burn "+DT.parm1.toLowerCase());
 				break;
 			case TRIGGER_DRINK:
-				buf.append("the player drinks from "+DT.parm1.toLowerCase());
+				buf.append("the player should drink "+DT.parm1.toLowerCase());
 				break;
 			case TRIGGER_EAT:
-				buf.append("the player eats "+DT.parm1.toLowerCase());
+				buf.append("the player should eat "+DT.parm1.toLowerCase());
 				break;
 			case TRIGGER_INROOM:
 				{
                 if(DT.parm1.equalsIgnoreCase("holy")
                 ||DT.parm1.equalsIgnoreCase("unholy")
                 ||DT.parm1.equalsIgnoreCase("balance"))
-                    buf.append("the player is in the deities room of infused "+DT.parm1.toLowerCase()+"-ness.");
+                    buf.append("the player should be in the deities room of infused "+DT.parm1.toLowerCase()+"-ness.");
                 else
                 {
     				Room R=CMLib.map().getRoom(DT.parm1);
     				if(R==null)
-    					buf.append("the player is in some unknown place");
+    					buf.append("the player should be in some unknown place");
     				else
-    					buf.append("the player is in '"+R.roomTitle(null)+"'");
+    					buf.append("the player should be in '"+R.roomTitle(null)+"'");
                 }
 				}
 				break;
 			case TRIGGER_RIDING:
-				buf.append("the player is on "+DT.parm1.toLowerCase());
+				buf.append("the player should be on "+DT.parm1.toLowerCase());
 				break;
 			case TRIGGER_CAST:
 				{
 				Ability A=CMClass.findAbility(DT.parm1);
 				if(A==null)
-					buf.append("the player casts '"+DT.parm1+"'");
+					buf.append("the player should cast '"+DT.parm1+"'");
 				else
-					buf.append("the player casts '"+A.name()+"'");
+					buf.append("the player should cast '"+A.name()+"'");
 				}
 				break;
 			case TRIGGER_EMOTE:
-				buf.append("the player emotes '"+DT.parm1.toLowerCase()+"'");
+				buf.append("the player should emote '"+DT.parm1.toLowerCase()+"'");
 				break;
 			case TRIGGER_RANDOM:
 				buf.append(DT.parm1+"% of the time");
@@ -206,7 +206,7 @@
                 buf.append("wait "+((CMath.s_int(DT.parm1)*Tickable.TIME_TICK)/1000)+" seconds");
                 break;
             case TRIGGER_YOUSAY:
-                buf.append("then you will say '"+DT.parm1.toLowerCase()+"'");
+                buf.append("then you will automatically say '"+DT.parm1.toLowerCase()+"'");
                 break;
             case TRIGGER_OTHERSAY:
                 buf.append("then all others will say '"+DT.parm1.toLowerCase()+"'");
@@ -218,7 +218,7 @@
 				buf.append(CMLib.masking().maskDesc(DT.parm1));
 				break;
 			case TRIGGER_PUTVALUE:
-				buf.append("the player puts an item worth at least "+DT.parm1.toLowerCase()+" in "+DT.parm2.toLowerCase());
+				buf.append("the player should put an item worth at least "+DT.parm1.toLowerCase()+" in "+DT.parm2.toLowerCase());
 				break;
 			case TRIGGER_PUTMATERIAL:
 				{
@@ -245,20 +245,20 @@
 					if(((t&RawMaterial.RESOURCE_MASK)>0)
 					&&((t&RawMaterial.RESOURCE_MASK)<RawMaterial.RESOURCE_DESCS.length))
 						material=RawMaterial.RESOURCE_DESCS[t&RawMaterial.RESOURCE_MASK].toLowerCase();
-					buf.append("the player burns an item made of "+material);
+					buf.append("the player should burn an item made of "+material);
 				}
 				break;
 			case TRIGGER_BURNVALUE:
-				buf.append("the player burns an item worth at least "+DT.parm1.toLowerCase());
+				buf.append("the player should burn an item worth at least "+DT.parm1.toLowerCase());
 				break;
 			case TRIGGER_SITTING:
-				buf.append("the player sits down");
+				buf.append("the player should sit down");
 				break;
 			case TRIGGER_STANDING:
-				buf.append("the player stands up");
+				buf.append("the player should stand up");
 				break;
 			case TRIGGER_SLEEPING:
-				buf.append("the player goes to sleep");
+				buf.append("the player should go to sleep");
 				break;
 			}
 		}
Index: planet_ink/coffee_mud/Items/ClanItems/StdClanItem.java
===================================================================
--- planet_ink/coffee_mud/Items/ClanItems/StdClanItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/ClanItems/StdClanItem.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -229,7 +229,7 @@
 
 	public static boolean stdOkMessageMOBS(MOB giver, MOB targetMOB, Item myHost)
 	{
-		if(targetMOB.isMonster())
+		if((targetMOB != null)&&(targetMOB.isMonster()))
 		{
 			Item alreadyHasOne=null;
 			for(int i=0;i<targetMOB.inventorySize();i++)
@@ -301,52 +301,57 @@
 		}
 		else
 		if((msg.amITarget(myHost)||(msg.target()==((ClanItem)myHost).ultimateContainer()))
-        &&(((ClanItem)myHost).clanID().length()>0)
-        &&((msg.targetMinor()==CMMsg.TYP_GET)||(msg.targetMinor()==CMMsg.TYP_CAST_SPELL)))
+        &&(((ClanItem)myHost).clanID().length()>0))
 		{
-			if(msg.source().getClanID().length()==0)
+	        if((msg.targetMinor()==CMMsg.TYP_GET)
+	        ||(msg.targetMinor()==CMMsg.TYP_PUSH)
+	        ||(msg.targetMinor()==CMMsg.TYP_PULL)
+	        ||(msg.targetMinor()==CMMsg.TYP_CAST_SPELL))
 			{
-				msg.source().tell("You must belong to a clan to take a clan item.");
-				return false;
-			}
-			else
-			if((msg.targetMinor()==CMMsg.TYP_GET)
-			&&(!stdOkMessageMOBS(null,msg.source(),(Item)myHost)))
-				return false;
-			else
-			if((!msg.source().getClanID().equals(((ClanItem)myHost).clanID()))
-			&&(((ClanItem)myHost).ciType()!=ClanItem.CI_PROPAGANDA))
-			{
-				Clan C=CMLib.clans().getClan(msg.source().getClanID());
-				int relation=-1;
-				if(C!=null)
-					relation=C.getClanRelations(((ClanItem)myHost).clanID());
+				if(msg.source().getClanID().length()==0)
+				{
+					msg.source().tell("You must belong to a clan to do that to a clan item.");
+					return false;
+				}
 				else
+				if((msg.targetMinor()!=CMMsg.TYP_CAST_SPELL)
+				&&(!stdOkMessageMOBS(null,msg.source(),(Item)myHost)))
+					return false;
+				else
+				if((!msg.source().getClanID().equals(((ClanItem)myHost).clanID()))
+				&&(((ClanItem)myHost).ciType()!=ClanItem.CI_PROPAGANDA))
 				{
-					C=CMLib.clans().getClan(((ClanItem)myHost).clanID());
+					Clan C=CMLib.clans().getClan(msg.source().getClanID());
+					int relation=-1;
 					if(C!=null)
-						relation=C.getClanRelations(msg.source().getClanID());
+						relation=C.getClanRelations(((ClanItem)myHost).clanID());
+					else
+					{
+						C=CMLib.clans().getClan(((ClanItem)myHost).clanID());
+						if(C!=null)
+							relation=C.getClanRelations(msg.source().getClanID());
+					}
+					if(relation!=Clan.REL_WAR)
+					{
+						msg.source().tell("You must be at war with this clan to take one of their items.");
+						return false;
+					}
+	                Room room=msg.source().location();
+	                if((room!=null)&&(room.getArea()!=null))
+	                {
+	                    LegalBehavior theLaw=CMLib.law().getLegalBehavior(room.getArea());
+	                    if((theLaw!=null)&&(theLaw.rulingOrganization()!=null)&&(theLaw.rulingOrganization().equals(((ClanItem)myHost).clanID())))
+	                    {
+	                        msg.source().tell("You'll need to conquer this area to do that.");
+	                        return false;
+	                    }
+	                    if((theLaw!=null)&&(!theLaw.isFullyControlled()))
+	                    {
+	                        msg.source().tell("Your clan does not yet fully control the area.");
+	                        return false;
+	                    }
+	                }
 				}
-				if(relation!=Clan.REL_WAR)
-				{
-					msg.source().tell("You must be at war with this clan to take one of their items.");
-					return false;
-				}
-                Room room=msg.source().location();
-                if((room!=null)&&(room.getArea()!=null))
-                {
-                    LegalBehavior theLaw=CMLib.law().getLegalBehavior(room.getArea());
-                    if((theLaw!=null)&&(theLaw.rulingOrganization()!=null)&&(theLaw.rulingOrganization().equals(((ClanItem)myHost).clanID())))
-                    {
-                        msg.source().tell("You'll need to conquer this area to do that.");
-                        return false;
-                    }
-                    if((theLaw!=null)&&(!theLaw.isFullyControlled()))
-                    {
-                        msg.source().tell("Your clan does not yet fully control the area.");
-                        return false;
-                    }
-                }
 			}
         }
 		return true;
Index: planet_ink/coffee_mud/Items/Armor/StdArmor.java
===================================================================
--- planet_ink/coffee_mud/Items/Armor/StdArmor.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Armor/StdArmor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -532,10 +532,10 @@
 			if(envStats().armor()!=0)
 			{
 				if(amWearingAt(Item.WORN_TORSO))
-					affectableStats.setArmor(affectableStats.armor()-(envStats().ability()*10));
+					affectableStats.setArmor(affectableStats.armor()-(envStats().ability()*5));
 				else
 				if((amWearingAt(Item.WORN_HEAD))||(this.amWearingAt(Item.WORN_HELD)))
-					affectableStats.setArmor(affectableStats.armor()-(envStats().ability()*5));
+					affectableStats.setArmor(affectableStats.armor()-(envStats().ability()*2));
 				else
 				if(!amWearingAt(Item.WORN_FLOATING_NEARBY))
 					affectableStats.setArmor(affectableStats.armor()-envStats().ability());
Index: planet_ink/coffee_mud/Items/Basic/GenCaged.java
===================================================================
--- planet_ink/coffee_mud/Items/Basic/GenCaged.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Basic/GenCaged.java	(revision 2574)
@@ -18,7 +18,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -81,9 +81,9 @@
     
 	public void executeMsg(Environmental myHost, CMMsg msg)
 	{
-		if(msg.amITarget(this)
-			||((msg.tool()==this)&&(msg.target()==container())&&(container()!=null))
-		&&(baseEnvStats().ability()==0)
+		if((msg.amITarget(this)
+			||((msg.tool()==this)&&(msg.target()==container())&&(container()!=null)))
+		&&((baseEnvStats().ability()&ABILITY_MOBPROGRAMMATICALLY)==0)
 		&&((msg.targetMinor()==CMMsg.TYP_GET)||(msg.targetMinor()==CMMsg.TYP_DROP)))
 		{
 			MOB M=unCageMe();
Index: planet_ink/coffee_mud/Items/Basic/StdFood.java
===================================================================
--- planet_ink/coffee_mud/Items/Basic/StdFood.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Basic/StdFood.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -112,7 +112,7 @@
 				boolean hungry=mob.curState().getHunger()<=0;
 			    if((!hungry)
 			    &&(mob.curState().getHunger()>=mob.maxState().maxHunger(mob.baseWeight()))
-				&&(CMLib.dice().roll(1,500,0)==1)
+				&&(CMLib.dice().roll(1,100,0)==1)
 				&&(!CMLib.flags().isGolem(msg.source()))
 				&&(msg.source().fetchEffect("Disease_Obesity")==null)
 				&&(!CMSecurity.isDisabled("AUTODISEASE")))
Index: planet_ink/coffee_mud/Items/Basic/StdItem.java
===================================================================
--- planet_ink/coffee_mud/Items/Basic/StdItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Basic/StdItem.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -1150,7 +1150,7 @@
 			if((aff!=null)&&(!(aff.ID().equals("ItemRejuv"))))
             {
 				aff.unInvoke();
-                aff.delEffect(aff);
+                delEffect(aff);
             }
 		}
 		for(int b=numBehaviors()-1;b>=0;b--)
Index: planet_ink/coffee_mud/Items/Basic/LightSource.java
===================================================================
--- planet_ink/coffee_mud/Items/Basic/LightSource.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Basic/LightSource.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -165,8 +165,7 @@
             return true;
         if((!CMLib.flags().isFlying(mob))
         &&(mob.riding()==null)
-        &&((room.domainType()==Room.DOMAIN_OUTDOORS_WATERSURFACE)
-		   ||(room.domainType()==Room.DOMAIN_INDOORS_WATERSURFACE)))
+        &&(CMLib.flags().isSwimmingInWater(mob)))
             return true;
         return false;
 	}
Index: planet_ink/coffee_mud/Items/Basic/StdSmokable.java
===================================================================
--- planet_ink/coffee_mud/Items/Basic/StdSmokable.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Basic/StdSmokable.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -179,22 +179,6 @@
 		return false;
 	}
 
-	public static boolean inTheRain(Room room)
-	{
-		if(room==null) return false;
-		return (((room.domainType()&Room.INDOORS)==0)
-				&&((room.getArea().getClimateObj().weatherType(room)==Climate.WEATHER_RAIN)
-				   ||(room.getArea().getClimateObj().weatherType(room)==Climate.WEATHER_THUNDERSTORM)));
-	}
-	public static boolean inTheWater(Room room)
-	{
-		if(room==null) return false;
-		return (room.domainType()==Room.DOMAIN_OUTDOORS_UNDERWATER)
-			   ||(room.domainType()==Room.DOMAIN_OUTDOORS_WATERSURFACE)
-			   ||(room.domainType()==Room.DOMAIN_INDOORS_UNDERWATER)
-			   ||(room.domainType()==Room.DOMAIN_INDOORS_WATERSURFACE);
-	}
-
     public void getAddictedTo(MOB mob, Item item)
     {
         Ability A=mob.fetchEffect("Addictions");
Index: planet_ink/coffee_mud/Items/Basic/Corpse.java
===================================================================
--- planet_ink/coffee_mud/Items/Basic/Corpse.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/Basic/Corpse.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -79,7 +79,7 @@
 		charStats=newStats;
 		if(charStats!=null) charStats=(CharStats)charStats.copyOf();
 	}
-
+	
 	public void setSecretIdentity(String newIdentity)
 	{
 		if(newIdentity.indexOf("/")>0)
Index: planet_ink/coffee_mud/Items/interfaces/CagedAnimal.java
===================================================================
--- planet_ink/coffee_mud/Items/interfaces/CagedAnimal.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/interfaces/CagedAnimal.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -30,6 +30,9 @@
 */
 public interface CagedAnimal extends Environmental
 {
+	public static final int ABILITY_MOBONPICKUP=0;
+	public static final int ABILITY_MOBPROGRAMMATICALLY=1;
+	
 	public boolean cageMe(MOB M);
 	public MOB unCageMe();
 	public String cageText();
Index: planet_ink/coffee_mud/Items/interfaces/RawMaterial.java
===================================================================
--- planet_ink/coffee_mud/Items/interfaces/RawMaterial.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/interfaces/RawMaterial.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -476,7 +476,7 @@
 	{RESOURCE_COPPER,		10,	10,	5,	8900}, 
 	{RESOURCE_TIN,			10,	10,	4,	7300}, 
 	{RESOURCE_MITHRIL,		200,1,	9,	3990}, 
-	{RESOURCE_ADAMANTITE,	500,1,	10,	4500}, 
+	{RESOURCE_ADAMANTITE,	300,1,	10,	4500}, 
 	{RESOURCE_STEEL,		150,0,	8,	7840}, 
 	{RESOURCE_BRASS,		120,0,	6,	8500}, 
 	{RESOURCE_WOOD,			2,	10,	3,	920}, 
@@ -501,10 +501,10 @@
 	{RESOURCE_PAPER,		10,	0,	0,	920},
 	{RESOURCE_CLAY,			1,	50,	1,	1750}, 
 	{RESOURCE_CHINA,		30,	0,	3,	2400}, 
-	{RESOURCE_DIAMOND,	  5000,	1,	9,	3510}, 
+	{RESOURCE_DIAMOND,	    500,1,	9,	3510}, 
 	{RESOURCE_CRYSTAL,		10,	5,	3,	2200}, 
 	{RESOURCE_GEM,			100,1,	3,	3500}, 
-	{RESOURCE_PEARL,	  1000,	1,	4,	2000}, 
+	{RESOURCE_PEARL,	    380,1,	4,	2000}, 
 	{RESOURCE_PLATINUM,		80,	1,	6,	21450}, 
 	{RESOURCE_MILK,			2,	10,	0,	1020}, 
 	{RESOURCE_EGGS,			2,	10,	0,	1120}, 
@@ -592,10 +592,10 @@
 	{RESOURCE_CATFISH,		6,	1,	1,	1000},	
 	{RESOURCE_BAMBOO,		15,	10,	4,	120},	
 	{RESOURCE_SOAP,			1,	0,	1,	430}, 
-	{RESOURCE_SPIDERSTEEL,	250,0,	2,	630}, 
+	{RESOURCE_SPIDERSTEEL,	350,0,	2,	630}, 
 	{RESOURCE_ASH,			1,	0,	0,	50}, 
 	{RESOURCE_PERFUME,		1,	1,	1,	1000},
-	{RESOURCE_ATLANTEANSTEEL,1500,1,6,	850},
+	{RESOURCE_ATLANTEANSTEEL,500,1,6,	850},
 	{RESOURCE_CHEESE,		25,	0,	1,	640}, 
 	{RESOURCE_BEANS,		1,	15,	1,	750}, 
     {RESOURCE_CRANBERRIES,  10, 1,  1,  750},
Index: planet_ink/coffee_mud/Items/MiscMagic/GenSuperPill.java
===================================================================
--- planet_ink/coffee_mud/Items/MiscMagic/GenSuperPill.java	(revision 2354)
+++ planet_ink/coffee_mud/Items/MiscMagic/GenSuperPill.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -174,7 +174,7 @@
 		mob.recoverCharStats();
 		mob.recoverEnvStats();
 		mob.recoverMaxState();
-		if(redress)	mob.confirmWearability();
+		if(redress)	CMLib.utensils().confirmWearability(mob);
 	}
 
 	public void executeMsg(Environmental myHost, CMMsg msg)
Index: planet_ink/coffee_mud/Commands/CharGen.java
===================================================================
--- planet_ink/coffee_mud/Commands/CharGen.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/CharGen.java	(revision 2574)
@@ -1,4 +1,4 @@
-package com.planet_ink.coffee_mud.Commands;
+ package com.planet_ink.coffee_mud.Commands;
 import com.planet_ink.coffee_mud.core.interfaces.*;
 import com.planet_ink.coffee_mud.core.*;
 import com.planet_ink.coffee_mud.Abilities.interfaces.*;
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -38,6 +38,106 @@
 	private String[] access={"CHARGEN"};
 	public String[] getAccessWords(){return access;}
 
+	protected void equipPlayer(MOB M)
+	{
+		int level = M.baseEnvStats().level();
+		CharClass C=M.baseCharStats().getCurrentClass();
+		for(int pos=0;pos<Item.WORN_CODES.length;pos++)
+		{
+			long wornCode=Item.WORN_CODES[pos];
+			if((wornCode == Item.IN_INVENTORY) 
+			|| (wornCode == Item.WORN_HELD)
+			|| (wornCode == Item.WORN_MOUTH)) 
+			 	continue;
+			if(wornCode==Item.WORN_WIELD)
+			{
+				Weapon W=CMClass.getWeapon("GenWeapon");
+				W.setWeaponClassification(Weapon.CLASS_SWORD);
+				W.setWeaponType(Weapon.TYPE_SLASHING);
+				W.setMaterial(RawMaterial.RESOURCE_STEEL);
+				W.setRawProperLocationBitmap(Item.WORN_WIELD|Item.WORN_HELD);
+				W.setRawLogicalAnd(true);
+				switch(C.allowedWeaponLevel())
+				{
+				case CharClass.WEAPONS_EVILCLERIC:
+					CMLib.factions().setAlignment(M,Faction.ALIGN_EVIL);
+				case CharClass.WEAPONS_THIEFLIKE:
+				case CharClass.WEAPONS_BURGLAR:
+				case CharClass.WEAPONS_ANY:
+				case CharClass.WEAPONS_NEUTRALCLERIC:
+					break;
+				case CharClass.WEAPONS_DAGGERONLY:
+					W.setWeaponClassification(Weapon.CLASS_DAGGER);
+					W.setWeaponType(Weapon.TYPE_PIERCING);
+					break;
+				case CharClass.WEAPONS_NATURAL:
+					W.setMaterial(RawMaterial.RESOURCE_OAK);
+					break;
+				case CharClass.WEAPONS_ROCKY:
+					W.setMaterial(RawMaterial.RESOURCE_STONE);
+					break;
+				case CharClass.WEAPONS_GOODCLERIC:
+					CMLib.factions().setAlignment(M,Faction.ALIGN_GOOD);
+				case CharClass.WEAPONS_MAGELIKE:
+					W.setMaterial(RawMaterial.RESOURCE_OAK);
+					W.setWeaponClassification(Weapon.CLASS_STAFF);
+					W.setWeaponType(Weapon.TYPE_BASHING);
+					break;
+				case CharClass.WEAPONS_ALLCLERIC:
+					if(CMLib.flags().isGood(M))
+					{
+						W.setMaterial(RawMaterial.RESOURCE_OAK);
+						W.setWeaponClassification(Weapon.CLASS_STAFF);
+						W.setWeaponType(Weapon.TYPE_BASHING);
+					}
+					break;
+				case CharClass.WEAPONS_FLAILONLY:
+					W.setWeaponClassification(Weapon.CLASS_FLAILED);
+					W.setWeaponType(Weapon.TYPE_BASHING);
+					break;
+				}
+				W.baseEnvStats().setLevel(level);
+				W.baseEnvStats().setWeight(8);
+				W.recoverEnvStats();
+				CMLib.itemBuilder().balanceItemByLevel(W);
+				M.addInventory(W);
+				W.wearIfPossible(M);
+			}
+			else
+			if(wornCode != Item.WORN_FLOATING_NEARBY)
+			{
+				Armor A=CMClass.getArmor("GenArmor");
+				A.setRawProperLocationBitmap(wornCode);
+				A.setMaterial(RawMaterial.RESOURCE_STEEL);
+				if((CharClass.ARMOR_WEARMASK & wornCode) > 0)
+				switch(C.allowedArmorLevel())
+				{
+				case CharClass.ARMOR_ANY:
+				case CharClass.ARMOR_METALONLY:
+					break;
+				case CharClass.ARMOR_CLOTH:
+					A.setMaterial(RawMaterial.RESOURCE_COTTON);
+					break;
+				case CharClass.ARMOR_LEATHER:
+					A.setMaterial(RawMaterial.RESOURCE_LEATHER);
+					break;
+				case CharClass.ARMOR_NONMETAL:
+				case CharClass.ARMOR_VEGAN:
+				case CharClass.ARMOR_OREONLY:
+					A.setMaterial(RawMaterial.RESOURCE_OAK);
+					break;
+				}
+				A.baseEnvStats().setLevel(level);
+				A.baseEnvStats().setWeight(8);
+				A.recoverEnvStats();
+				CMLib.itemBuilder().balanceItemByLevel(A);
+				M.addInventory(A);
+				A.wearIfPossible(M);
+			}
+		}
+	}
+	
+	
 	protected MOB levelMOBup(int level, CharClass C)
 	{
 		MOB mob=CMClass.getMOB("StdMOB");
@@ -53,51 +153,39 @@
 		mob.baseCharStats().setStat(CharStats.STAT_CHARISMA,10);
 		mob.baseCharStats().setCurrentClass(C);
 		mob.baseCharStats().setClassLevel(C,1);
-		mob.baseEnvStats().setArmor(50);
+		mob.baseEnvStats().setArmor(100);
 		mob.baseEnvStats().setLevel(1);
 		mob.baseEnvStats().setSensesMask(0);
 		mob.baseState().setHitPoints(20);
 		mob.baseState().setMovement(100);
 		mob.baseState().setMana(100);
 		mob.baseCharStats().getMyRace().startRacing(mob,false);
-		CMLib.utensils().outfit(mob,mob.baseCharStats().getMyRace().outfit(mob));
 		mob.recoverCharStats();
 		mob.recoverEnvStats();
 		mob.recoverMaxState();
-		mob.resetToMaxState();
 		mob.baseCharStats().getCurrentClass().startCharacter(mob,false,false);
 
 		int max=CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT);
 		for(int lvl=1;lvl<level;lvl++)
 		{
-			switch(lvl % 6)
+			if((lvl % 3)==0)
 			{
-			case 0:
-				if(mob.baseCharStats().getStat(CharStats.STAT_STRENGTH)<(max+mob.baseCharStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ)+5))
-					mob.baseCharStats().setStat(CharStats.STAT_STRENGTH,mob.baseCharStats().getStat(CharStats.STAT_STRENGTH)+1);
-				break;
-			case 1:
-				if(mob.baseCharStats().getStat(CharStats.STAT_DEXTERITY)<(max+mob.baseCharStats().getStat(CharStats.STAT_MAX_DEXTERITY_ADJ)+5))
-					mob.baseCharStats().setStat(CharStats.STAT_DEXTERITY,mob.baseCharStats().getStat(CharStats.STAT_DEXTERITY)+1);
-				break;
-			case 2:
-				if(mob.baseCharStats().getStat(CharStats.STAT_INTELLIGENCE)<(max+mob.baseCharStats().getStat(CharStats.STAT_MAX_INTELLIGENCE_ADJ)))
-					mob.baseCharStats().setStat(CharStats.STAT_INTELLIGENCE,mob.baseCharStats().getStat(CharStats.STAT_INTELLIGENCE)+1);
-				break;
-			case 3:
-				if(mob.baseCharStats().getStat(CharStats.STAT_CONSTITUTION)<(max+mob.baseCharStats().getStat(CharStats.STAT_MAX_CONSTITUTION_ADJ)))
-					mob.baseCharStats().setStat(CharStats.STAT_CONSTITUTION,mob.baseCharStats().getStat(CharStats.STAT_CONSTITUTION)+1);
-				break;
-			case 4:
-				if(mob.baseCharStats().getStat(CharStats.STAT_CHARISMA)<(max+mob.baseCharStats().getStat(CharStats.STAT_MAX_CHARISMA_ADJ)))
-					mob.baseCharStats().setStat(CharStats.STAT_CHARISMA,mob.baseCharStats().getStat(CharStats.STAT_CHARISMA)+1);
-				break;
-			case 5:
-				if(mob.baseCharStats().getStat(CharStats.STAT_WISDOM)<(max+mob.baseCharStats().getStat(CharStats.STAT_MAX_WISDOM_ADJ)))
-					mob.baseCharStats().setStat(CharStats.STAT_WISDOM,mob.baseCharStats().getStat(CharStats.STAT_WISDOM)+1);
-				break;
+				int stat=-1;
+				int bestDiff=0;
+				for(int i=0;i<CharStats.NUM_BASE_STATS;i++)
+				{
+					int base = max + mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ + i);
+					int diff = base - mob.baseCharStats().getStat(i);
+					if(diff >= bestDiff)
+					{
+						stat=i;
+						bestDiff = diff;
+					}
+				}
+				if(stat>=0)
+				if(mob.baseCharStats().getStat(stat)<(max+mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ + stat)))
+					mob.baseCharStats().setStat(stat,mob.baseCharStats().getStat(stat)+1);
 			}
-			int oldattack=mob.baseEnvStats().attackAdjustment();
 			if(mob.getExpNeededLevel()==Integer.MAX_VALUE)
 				CMLib.leveler().level(mob);
 			else
@@ -105,12 +193,16 @@
 			mob.recoverEnvStats();
 			mob.recoverCharStats();
 			mob.recoverMaxState();
-			int newAttack=mob.baseEnvStats().attackAdjustment()-oldattack;
-			mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-newAttack);
-			mob.recoverEnvStats();
-			mob.recoverCharStats();
-			mob.recoverMaxState();
 		}
+        equipPlayer(mob);
+        for(int a=0;a<mob.numAbilities();a++)
+        	mob.fetchAbility(a).setProficiency(100);
+        for(int a=0;a<mob.numEffects();a++)
+        	mob.fetchEffect(a).setProficiency(100);
+		mob.recoverCharStats();
+		mob.recoverEnvStats();
+		mob.recoverMaxState();
+		mob.resetToMaxState();
 		return mob;
 	}
 
@@ -157,12 +249,12 @@
 		int tries=0;
 		for(;tries<numTries;tries++)
 		{
-			if((tries % 20)==0)
+			if(((tries % 20)==0)&&(mob!=null))
 				mob.session().print(".");
 			MOB mob2=levelMOBup(level,C);
 			addHimIn(avgMob,mob2);
 		}
-		averageout(avgMob,tries);
+		averageout(avgMob,tries+1);
 		return avgMob;
 	}
 
@@ -195,15 +287,28 @@
 		return avgMob;
 	}
 
-	public void combatRun(MOB mob, Vector commands) {
+	private class CombatStats
+	{
 	    int levelStart=1;
 	    int levelEnd=91;
+	    int TOTAL_ITERATIONS=100;
+	    int skipLevels=0;
+        int[][][] allData=null;//new int[classSet.size()][levelEnd-levelStart+1][17];
+        String[][][] allSkills=null;//new String[classSet.size()][levelEnd-levelStart+1][4];
+        Area A=null;
+        MOB mob=null;
+	    DVector classSet=new DVector(2);
+	    Hashtable failSkillCheck=null;
+	}
+	
+	public void combatRun(MOB mob, Vector commands) {
+		CombatStats c=new CombatStats();
+		c.mob=mob;
 	    if(commands.size()==0)
 	    {
-	        mob.tell("USAGE: CHARGEN COMBAT ([CHARCLASS(S)]...) (FAILCHECK) (ITERATIONS=[X])([START LEVEL]) ([END LEVEL])");
+	        mob.tell("USAGE: CHARGEN COMBAT ([CHARCLASS(S)]...) (EXPORT=FILENAME) (FAILCHECK) (ITERATIONS=[X]) (SKIPLEVELS=[X]) ([START LEVEL]) ([END LEVEL])");
 	        return;
 	    }
-	    Hashtable failSkillCheck=null;
 	    String[][] CAMATCH={
 	            {"Commoner","CombatAbilities"},
 	            {"Bard","Bardness"},
@@ -213,9 +318,7 @@
                 {"Thief","Thiefness"},
                 {"Fighter","Fighterness"},
 	    };
-	    int TOTAL_ITERATIONS=1000;
 	    
-	    DVector classSet=new DVector(2);
 	    for(Enumeration e=CMClass.charClasses();e.hasMoreElements();)
 	    {
 	        CharClass C=(CharClass)e.nextElement();
@@ -225,16 +328,17 @@
 	        &&(!CMath.bset(C.availabilityCode(),Area.THEME_SKILLONLYMASK)))
 	        {
 	            String behav="CombatAbilities";
-	            for(int c=0;c<CAMATCH.length;c++)
-	                if(C.baseClass().equalsIgnoreCase(CAMATCH[c][0]))
-	                    behav=CAMATCH[c][1];
-	            classSet.addElement(C,behav);
+	            for(int x=0;x<CAMATCH.length;x++)
+	                if(C.baseClass().equalsIgnoreCase(CAMATCH[x][0]))
+	                    behav=CAMATCH[x][1];
+	            c.classSet.addElement(C,behav);
 	        }
 	    }
 	    
 	    // set the parameters
 	    boolean classCleared=false;
 	    boolean nextLevel=false;
+	    String fileExp=null;
 	    for(int i=0;i<commands.size();i++)
 	    {
 	        String s=(String)commands.elementAt(i);
@@ -243,13 +347,13 @@
 	            int x=CMath.s_int(s);
 	            if(x>=0)
 	            {
-	                if((nextLevel)&&(x>=levelStart))
-	                    levelEnd=x;
+	                if((nextLevel)&&(x>=c.levelStart))
+	                	c.levelEnd=x;
 	                else
 	                if(!nextLevel)
 	                {
-	                    levelStart=x;
-	                    levelEnd=x;
+	                	c.levelStart=x;
+	                	c.levelEnd=x;
 	                    nextLevel=true;
 	                }
 	            }
@@ -259,8 +363,17 @@
             {
                 s=s.substring("ITERATIONS=".length());
                 if(CMath.isInteger(s))
-                    TOTAL_ITERATIONS=CMath.s_int(s);
+                	c.TOTAL_ITERATIONS=CMath.s_int(s);
             }
+	        else
+            if(s.toUpperCase().startsWith("EXPORT="))
+            	fileExp=s.substring("EXPORT=".length());
+	        else
+            if(s.toUpperCase().startsWith("SKIPLEVELS="))
+            {
+            	c.skipLevels=CMath.s_int(s.substring("SKIPLEVELS=".length()));
+            	if(c.skipLevels<1) c.skipLevels=1;
+            }
             else
 	        if(CMClass.findCharClass(s)!=null)
 	        {
@@ -268,13 +381,13 @@
 	            if(!classCleared)
 	            {
 	                classCleared=true;
-	                classSet=new DVector(2);
+	                c.classSet=new DVector(2);
 	            }
 	            String behav="CombatAbilities";
-                for(int c=0;c<CAMATCH.length;c++)
-                    if(CAMATCH[c][1].equalsIgnoreCase(CAMATCH[c][0]))
-                        behav=CAMATCH[c][1];
-                classSet.addElement(C,behav);
+                for(int x=0;x<CAMATCH.length;x++)
+                    if(C.baseClass().equalsIgnoreCase(CAMATCH[x][0]))
+                        behav=CAMATCH[x][1];
+                c.classSet.addElement(C,behav);
 	        }
             else
             if(s.endsWith("s"))
@@ -287,240 +400,546 @@
                         ||CMath.bset(C.availabilityCode(),Area.THEME_HEROIC)
                         ||CMath.bset(C.availabilityCode(),Area.THEME_TECHNOLOGY))
                     &&(!CMath.bset(C.availabilityCode(),Area.THEME_SKILLONLYMASK))
-                    &&(C.baseClass().equalsIgnoreCase(s)))
+                    &&(C.baseClass().equalsIgnoreCase(s)||(s.equalsIgnoreCase("charclasse"))))
                     {
                         if(!classCleared)
                         {
                             classCleared=true;
-                            classSet=new DVector(2);
+                            c.classSet=new DVector(2);
                         }
                         String behav="CombatAbilities";
-                        for(int c=0;c<CAMATCH.length;c++)
-                            if(C.baseClass().equalsIgnoreCase(CAMATCH[c][0]))
-                                behav=CAMATCH[c][1];
-                        classSet.addElement(C,behav);
+                        for(int x=0;x<CAMATCH.length;x++)
+                            if(C.baseClass().equalsIgnoreCase(CAMATCH[x][0]))
+                                behav=CAMATCH[x][1];
+                        c.classSet.addElement(C,behav);
                     }
                 }
             }
 	        else
 	        if(s.equalsIgnoreCase("FAILCHECK"))
-	            failSkillCheck=new Hashtable();
+	            c.failSkillCheck=new Hashtable();
 	    }
 	    
-        Area A=CMClass.getAreaType("StdArea");
-        A.setName("UNKNOWNAREA");
-        CMLib.map().addArea(A);
+	    if(c.skipLevels<=0)
+	    {
+	    	c.skipLevels=1;
+	    	if((c.levelStart==1)&&(c.levelEnd==91))
+	    		c.skipLevels=15;
+	    }
+	    
+	    
+	    	
+	    
+        c.A=CMClass.getAreaType("StdArea");
+        c.A.setName("UNKNOWNAREA");
+        CMLib.map().addArea(c.A);
+        c.allData=new int[c.classSet.size()][c.levelEnd-c.levelStart+1][17];
+        c.allSkills=new String[c.classSet.size()][c.levelEnd-c.levelStart+1][4];
         
-        /*final int DATUM_CLASS=0; 
-        final int DATUM_LEVEL=1;
-        final int DATUM_BESTSINGLEHITSCORE=2;
-        final int DATUM_BESTSINGLEHITSKILL=3;
-        final int DATUM_BESTHITSCORE=4;
-        final int DATUM_BESTHITSKILLS=5;
-        final int DATUM_BESTITERSCORE=6;
-        final int DATUM_BESTITERSKILLS=7;
-        final int DATUM_LOSSES=8;
+        final String[] allDataHeader={
+    		"BestIterScore",//0
+    		"BestHitScore",//1
+    		"BestSingleHitScore",//2
+    		"BestSingleHitPhys",//3
+    		"Losses",//4
+    		"MedScore",//5
+    		"MedHitPct",//6
+    		"LossIters",//7
+    		"MedWinIters",//8
+    		"MedPhysDone",//9
+    		"MedPhysTaken",//10
+    		"MedIsHitPct",//11
+    		"LostRounds",//12
+    		"PlayerArmor",//13
+    		"PlayerAttack",//15
+    		"PlayerDamPct",//16
+    		"PlayerManaPct",//17
+    		"BestIterSkill",//18
+    		"BestHitSkill",//19
+    		"BestSingleHitSkill",//20
+        };
         
-        DVector datum=new DVector(9);*/
         
-        for(int charClassDex=0;charClassDex<classSet.size();charClassDex++)
+        boolean[] aborted = new boolean[1];
+        aborted[0]=false;
+    	final Random r = new Random(System.currentTimeMillis());
+        for(int charClassDex=0;charClassDex<c.classSet.size();charClassDex++)
         {
-            CharClass C=(CharClass)classSet.elementAt(charClassDex,1);
-    	    for(int level=levelStart;level<=levelEnd;level++)
-    	    {
-                mob.tell(C.ID()+": "+level);
-                int roomRobin=0;
-                Room R=null;
-                
-                int[] bestSingleHitScore=new int[]{0};
-                String[] bestSingleHitSkill=new String[]{""};
-                int[] bestHitScore=new int[]{0};
-                String[] bestHitSkill=new String[]{""};
-                int[] bestIterScore=new int[]{Integer.MAX_VALUE};
-                String[] bestIterSkill=new String[]{""};
-                int[] losses=new int[]{0};
-                long[] avgHits=new long[]{0};
-                int[] avgIters=new int[]{0};
-                
-                /*datum.addElements(new Object[]{
-                        C,
-                        new Integer(level),
-                        bestSingleHitScore,
-                        bestSingleHitSkill,
-                        bestHitScore,
-                        bestHitSkill,
-                        bestIterScore,
-                        bestIterSkill,
-                        losses
-                });*/
-	            for(int tries=0;tries<TOTAL_ITERATIONS;tries++)
-	            {
-	                Behavior B=CMClass.getBehavior((String)classSet.elementAt(charClassDex,2));
-                    B.setParms(C.ID());
-	                switch(roomRobin)
+            java.util.concurrent.CountDownLatch latch = new java.util.concurrent.CountDownLatch(1);
+            new Thread() {
+            	CombatStats c;
+            	int charClassDex;
+            	String fileExp;
+            	java.util.concurrent.CountDownLatch latch = null;
+            	boolean[] aborted;
+            	public void start(CombatStats c, int charClassDex, String fileExp, java.util.concurrent.CountDownLatch latch, boolean[] aborted){
+            		this.c=c;
+            		this.charClassDex=charClassDex;
+            		this.fileExp=fileExp;
+            		this.latch=latch;
+            		this.aborted=aborted;
+            		this.start();
+            	}
+            	public void run() 
+            	{
+            		MOB mob=c.mob;
+            		int[][][] allData = c.allData;
+            		String[][][] allSkills=c.allSkills;
+            		DVector classSet=c.classSet;
+            		int levelStart=c.levelStart;
+		    	    for(int level=c.levelStart;level<=c.levelEnd;level+=c.skipLevels)
+		    	    {
+		                CharClass C=(CharClass)c.classSet.elementAt(charClassDex,1);
+		                mob.tell(C.ID()+": "+level);
+		                int roomRobin=0;
+		                Room R=null;
+		                
+		                int[] bestSingleHitScore=new int[]{0};
+		                String[] bestSingleHitSkill=new String[]{""};
+		                int[] bestSingleHitPhys=new int[]{0};
+		                int[] bestHitScore=new int[]{0};
+		                String[] bestHitSkill=new String[]{""};
+		                int[] bestIterScore=new int[]{Integer.MAX_VALUE};
+		                String[] bestIterSkill=new String[]{""};
+		                
+		                int[] losses=new int[]{0};
+		                
+		                Vector medScore=new Vector();
+		                Vector medWinIters=new Vector();
+		                Vector medPhysDone=new Vector();
+		                Vector medHitPct=new Vector();
+		                Vector medIsHitPct=new Vector();
+		                Vector medPhysTaken=new Vector();
+		                Vector medLossIters=new Vector();
+		                Vector medPlayerDamPct = new Vector();
+		                Vector medPlayerManaPct = new Vector();
+		                
+		                int H1=0;
+		                int H2=0;
+		                boolean playerExampleShown=false;
+		                int lastPct=0;
+		                int playerArmor=0;
+		                int playerAttack=0;
+			            for(int tries=0;tries<c.TOTAL_ITERATIONS;tries++)
+			            {
+			            	if((CMath.div(tries,c.TOTAL_ITERATIONS)*100.0)>=lastPct+5)
+			            	{
+			            		lastPct+=5;
+			                    if(mob.session()!=null) mob.session().print(".");
+			            	}
+			                Behavior B1=CMClass.getBehavior((String)classSet.elementAt(charClassDex,2));
+		                    B1.setParms(C.ID());
+			                switch(roomRobin)
+			                {
+			                case 0: R=CMClass.getLocale("Woods"); break; 
+		                    case 1: R=CMClass.getLocale("CaveRoom"); break; 
+		                    case 2: R=CMClass.getLocale("CityStreet"); break; 
+			                }
+			                if((++roomRobin)>2) roomRobin=0;
+			                R.addNonUninvokableEffect(CMClass.getAbility("Spell_Light"));
+			                R.setRoomID(c.A.name()+"#"+r.nextInt(Integer.MAX_VALUE));
+			                R.setArea(c.A);
+			                R.recoverEnvStats();
+			                c.A.getTimeObj().setTimeOfDay(CMLib.dice().roll(1,c.A.getTimeObj().getHoursInDay(),-1));
+			                
+			                //Session S=(Session)CMClass.getCommon("FakeSession");
+			                //S.initializeSession(null,"MEMORY");
+			                MOB M1=null;
+			                if(C.ID().equalsIgnoreCase("StdCharClass"))
+			                {
+			                    M1=CMClass.getMOB("StdMOB");  // MOB stat
+			                    Behavior B2=CMClass.getBehavior("CombatAbilities");
+			                    M1.baseCharStats().setMyRace(CMClass.getRace("Human"));
+			                    M1.baseEnvStats().setLevel(level);
+			                    M1.setName("GOODGUY");
+			                    M1.recoverCharStats();
+			                    M1.recoverEnvStats();
+			                    M1.setLocation(R);
+			                    M1.baseCharStats().getMyRace().setHeightWeight(M1.baseEnvStats(),(char)M1.baseCharStats().getStat(CharStats.STAT_GENDER));
+			                    M1.baseEnvStats().setAbility(11);
+			                    M1.recoverCharStats();
+			                    M1.recoverEnvStats();
+			                    M1.recoverMaxState();
+			                    M1.resetToMaxState();
+			                    M1.addBehavior(B2);
+			                    M1.bringToLife(R,true);
+				                CMLib.threads().deleteTick(M1,Tickable.TICKID_MOB);
+			                    M1.baseCharStats().getCurrentClass().fillOutMOB(M1,level);
+			                    //int hp=M1.baseCharStats().getCurrentClass().getLevelPlayerHP(M1);
+			                    M1.setWimpHitPoint(0);
+			                    M1.recoverMaxState();
+			                    M1.recoverCharStats();
+			                    M1.recoverEnvStats();
+			                }
+			                else
+			                {
+				                M1=AverageClassMOB(null,level,C,1);
+			                    M1.baseCharStats().setMyRace(CMClass.getRace("Human"));
+				                M1.setName("GOODGUY");
+				                M1.recoverCharStats();
+			                    M1.recoverEnvStats();
+			                    M1.setLocation(R);
+				                M1.baseCharStats().getMyRace().setHeightWeight(M1.baseEnvStats(),(char)M1.baseCharStats().getStat(CharStats.STAT_GENDER));
+				                M1.recoverCharStats();
+				                M1.recoverEnvStats();
+				                M1.recoverMaxState();
+				                M1.resetToMaxState();
+				                M1.bringToLife(M1.location(),true);
+				                CMLib.threads().deleteTick(M1,Tickable.TICKID_MOB);
+				                M1.setWimpHitPoint(0);
+				                M1.recoverMaxState();
+				                M1.recoverCharStats();
+				                M1.recoverEnvStats();
+				                M1.resetToMaxState();
+			                    B1.setStat("PRECAST","1");
+				                M1.addBehavior(B1);
+				                equipPlayer(M1);
+				                M1.recoverMaxState();
+				                M1.recoverCharStats();
+				                M1.recoverEnvStats();
+			                    B1.setStat("RECORD"," ");
+			                    B1.setStat("PROF","true");
+			                    B1.setStat("LASTSPELL","");
+			                    B1.setStat("PRECAST","1");
+			                    for(int i=0;i<20;i++) // give some pre-cast ticks
+			                    	M1.tick(M1,Tickable.TICKID_MOB);
+			                }
+			                M1.resetToMaxState();
+			                playerArmor=CMLib.combat().adjustedArmor(M1);
+			                playerAttack=CMLib.combat().adjustedAttackBonus(M1,null);
+			                
+		                    MOB M2=CMClass.getMOB("StdMOB");  // MOB stat
+		                    Behavior B2=CMClass.getBehavior("CombatAbilities");
+		                    M2.baseCharStats().setMyRace(CMClass.getRace("Human"));
+		                    M2.baseEnvStats().setLevel(level);
+		                    M2.setName("BADGUY");
+		                    M2.recoverCharStats();
+		                    M2.recoverEnvStats();
+		                    M2.setLocation(R);
+		                    M2.baseCharStats().getMyRace().setHeightWeight(M2.baseEnvStats(),(char)M2.baseCharStats().getStat(CharStats.STAT_GENDER));
+		                    M2.baseEnvStats().setAbility(11);
+		                    M2.recoverCharStats();
+		                    M2.recoverEnvStats();
+		                    M2.recoverMaxState();
+		                    M2.resetToMaxState();
+		                    M2.addBehavior(B2);
+		                    M2.bringToLife(M2.location(),true);
+			                CMLib.threads().deleteTick(M2,Tickable.TICKID_MOB);
+		                    M2.baseCharStats().getCurrentClass().fillOutMOB(M2,level);
+		                    int hp=M2.baseCharStats().getCurrentClass().getLevelPlayerHP(M2);
+		                    if(hp>M2.baseState().getHitPoints())
+		                        M2.baseState().setHitPoints(hp);
+		                    M2.setWimpHitPoint(0);
+		                    M2.recoverMaxState();
+		                    M2.recoverCharStats();
+		                    M2.recoverEnvStats();
+		                    M2.resetToMaxState();
+		                    
+		                    M1.setVictim(M2);
+		                    M2.setVictim(M1);
+			                
+		                    
+		                    if(!playerExampleShown)
+		                    {
+		                    	playerExampleShown=true;
+		                    	/*
+		            			StringBuffer msg=CMLib.commands().getScore(M1);
+		            			if(!mob.isMonster())
+		            				mob.session().wraplessPrintln(msg.toString());
+		                        if(mob.session()!=null)
+		                        {
+			            			mob.session().println(M1.name()+" has "+B1.ID()+" behavior for "+M1.numAbilities()+" abilities.");
+		                        	mob.session().print("Working..");
+		                        }
+		                        */
+		                    }
+		                    
+		                    H1=M1.curState().getHitPoints();
+		                    H2=M2.curState().getHitPoints();
+		                    
+		                    int iterations=0;
+		                    int cumScore=0;
+		                    int hits = 0;
+		                    int ishits = 0;
+		                    B1.setStat("PHYSDAMTAKEN","0");
+		                    B2.setStat("PHYSDAMTAKEN","0");
+		                    int zeroCheck=0;
+		                    //MOB[] ZEROMOBS=null;
+		                    String ZEROSKILL1=null;
+		                    String ZEROSKILL2=null;
+		                    String ALMOSTZEROSKILL=null;
+		                    int l1=0, l2=0;
+		                    
+		                    
+		                    //chargen combat charclasses export=test.tab iterations=100 skiplevels=20 1 91
+		                    while((M1.getVictim()==M2)
+		                         &&(M2.getVictim()==M1)
+		                         &&(!M1.amDead())
+		                         &&(!M2.amDead())
+		                         &&(M1.location()==M2.location())
+		                         &&(iterations<1000))
+		                    {
+		                    	if(aborted[0])
+		                    	{
+		                    		latch.countDown();
+		                    		return;
+		                    	}
+		                        iterations++;
+		                        ALMOSTZEROSKILL=B1.getStat("LASTSPELL");
+		                        int h1=M1.curState().getHitPoints();
+		                        int h2=M2.curState().getHitPoints();
+		                        int L1=l1;
+		                        int L2=l2;
+		                        l1=CMath.s_int(B2.getStat("PHYSDAMTAKEN"));
+		                        l2=CMath.s_int(B1.getStat("PHYSDAMTAKEN"));
+		                        if(l1>L1) hits++;
+		                        if(l2>L2) ishits++;
+		                        try {
+			                    	CMLib.commands().postStand(M1,true);
+			                    	CMLib.commands().postStand(M2,true);
+			                        M1.tick(M1,Tickable.TICKID_MOB);
+			                        M2.tick(M2,Tickable.TICKID_MOB);
+		                        } catch(Throwable t) {
+		                        	Log.errOut("CharGen",t);
+		                        }
+		                        
+		                        int h=h2-(M2.amDead()?0:M2.curState().getHitPoints());
+		                        h=h-(h1-(M1.amDead()?0:M1.curState().getHitPoints()));
+		                        if((h==0)&&((!M1.amDead())&&(!M2.amDead())))
+		                        {
+		                        	zeroCheck++;
+		                        	if(zeroCheck==1)
+		                        	{
+		                        		//ZEROMOBS=new MOB[]{(MOB)M1.copyOf(),(MOB)M2.copyOf()};
+		                        		ZEROSKILL1=ALMOSTZEROSKILL;
+		                        		ZEROSKILL2=B1.getStat("LASTSPELL");
+		                        	}
+		                        	else
+		                            if(zeroCheck==20)
+		                            	Log.errOut("CharGen","Stale combat warning: "+ZEROSKILL1+"/"+ZEROSKILL2);
+		                            else
+		                            if(zeroCheck==100)
+		                            {
+		                            	
+		                                Log.errOut("CharGen","Stale Combat Abort: "+level+"/"+tries+"/"+iterations+"/"+ZEROSKILL1+"/"+ZEROSKILL2);
+		                                //Log.errOut("CharGen",S.afkMessage());
+		                                break;
+		                            }
+		                        }
+		                        else
+		                        	zeroCheck=0;
+		                        if(h>bestSingleHitScore[0])
+		                        {
+		                            bestSingleHitScore[0]=h;
+		                            bestSingleHitPhys[0]=CMath.s_int(B2.getStat("PHYSDAMTAKEN"))-l1;
+		                            bestSingleHitSkill[0]=B1.getStat("LASTSPELL");
+		                        }
+		                        cumScore+=h;
+		                    }
+		                    if(iterations>=1000)
+		                        Log.errOut("CharGen","Stale Combat Abort: "+level+"/"+tries+"/"+ZEROSKILL1+"/"+ZEROSKILL2);
+		                    else
+		                    if(M1.amDead()||M2.amDead())
+		                    {
+		                    	if(M1.amDead())
+		                            losses[0]++;
+		                        medScore.addElement(Integer.valueOf(cumScore));
+		                        medPhysDone.addElement(Integer.valueOf(CMath.s_int(B2.getStat("PHYSDAMTAKEN"))));
+		                        medPhysTaken.addElement(Integer.valueOf(CMath.s_int(B1.getStat("PHYSDAMTAKEN"))));
+		                        medHitPct.addElement(Double.valueOf((CMath.div(hits,iterations)*100)));
+		                        medIsHitPct.addElement(Double.valueOf((CMath.div(ishits,iterations)*100)));
+		                        medPlayerDamPct.addElement(Double.valueOf(100-(CMath.div(M1.curState().getHitPoints(),H1)*100.0)));
+		                        medPlayerManaPct.addElement(Double.valueOf(100-(CMath.div(M1.curState().getMana(),M1.maxState().getMana())*100.0)));
+		                        if(M1.amDead())
+		                        	medLossIters.addElement(Integer.valueOf(iterations));
+		                        else
+			                        medWinIters.addElement(Integer.valueOf(iterations));
+		                        if(cumScore>bestHitScore[0])
+		                        {
+		                            bestHitScore[0]=cumScore;
+		                            bestHitSkill[0]=B1.getStat("RECORD");
+		                        }
+		                        if(M2.amDead())
+		                        {
+		                        	if(!M1.amDead())
+			                        if(iterations<bestIterScore[0])
+			                        {
+			                            bestIterScore[0]=iterations;
+			                            bestIterSkill[0]=B1.getStat("RECORD");
+			                        }
+		                        }
+		                        if(c.failSkillCheck!=null)
+		                        {
+		                            Vector V=CMParms.parseSemicolons(B1.getStat("RECORD"),true);
+		                            for(int v=0;v<V.size();v++)
+		                            {
+		                                String s=((String)V.elementAt(v)).trim();
+		                                boolean failed=false;
+		                                if(s.startsWith("!"))
+		                                {
+		                                    failed=true;
+		                                    s=s.substring(1);
+		                                }
+		                                int[] times=(int[])c.failSkillCheck.get(s);
+		                                if(times==null)
+		                                {
+		                                    times=new int[2];
+		                                    c.failSkillCheck.put(s,times);
+		                                }
+		                                times[0]++;
+		                                if(failed)
+		                                    times[1]++;
+		                            }
+		                        }
+		                    }
+		                    M1.destroy();
+		                    M2.destroy();
+		                    c.A.delProperRoom(R);
+			                R.destroy();
+			            }
+			            CMParms.sortVector(medScore);
+			            CMParms.sortVector(medHitPct);
+			            CMParms.sortVector(medLossIters);
+			            CMParms.sortVector(medWinIters);
+			            CMParms.sortVector(medPhysDone);
+			            CMParms.sortVector(medPhysTaken);
+			            CMParms.sortVector(medIsHitPct);
+			            CMParms.sortVector(medPlayerDamPct);
+			            CMParms.sortVector(medPlayerManaPct);
+		                allData[charClassDex][level-levelStart][0]=bestIterScore[0];
+		                allData[charClassDex][level-levelStart][1]=bestHitScore[0];
+		                allData[charClassDex][level-levelStart][2]=bestSingleHitScore[0];
+		                allData[charClassDex][level-levelStart][3]=bestSingleHitPhys[0];
+		                allData[charClassDex][level-levelStart][4]=losses[0];
+		                if(medScore.size()>0)
+			                allData[charClassDex][level-levelStart][5]=((Integer)medScore.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medScore.size()))))).intValue();
+		                if(medHitPct.size()>0)
+			                allData[charClassDex][level-levelStart][6]=((Double)medHitPct.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medHitPct.size()))))).intValue();
+		                if(medLossIters.size()>0)
+			                allData[charClassDex][level-levelStart][7]=((Integer)medLossIters.elementAt((int)Math.round(Math.floor(CMath.mul(0.75,medLossIters.size()))))).intValue();
+		                if(medWinIters.size()>0)
+			                allData[charClassDex][level-levelStart][8]=((Integer)medWinIters.elementAt((int)Math.round(Math.floor(CMath.mul(0.25,medWinIters.size()))))).intValue();
+		                if(medPhysDone.size()>0)
+			                allData[charClassDex][level-levelStart][9]=((Integer)medPhysDone.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medPhysDone.size()))))).intValue();
+		                if(medPhysTaken.size()>0)
+			                allData[charClassDex][level-levelStart][10]=((Integer)medPhysTaken.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medPhysTaken.size()))))).intValue();
+		                if(medIsHitPct.size()>0)
+			                allData[charClassDex][level-levelStart][11]=((Double)medIsHitPct.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medIsHitPct.size()))))).intValue();
+		                allData[charClassDex][level-levelStart][12]=losses[0];
+		                allData[charClassDex][level-levelStart][13]=playerArmor;
+		                allData[charClassDex][level-levelStart][14]=playerAttack;
+		                if(medPlayerDamPct.size()>0)
+			                allData[charClassDex][level-levelStart][15]=((Double)medPlayerDamPct.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medPlayerDamPct.size()))))).intValue();
+		                if(medPlayerManaPct.size()>0)
+			                allData[charClassDex][level-levelStart][16]=((Double)medPlayerManaPct.elementAt((int)Math.round(Math.floor(CMath.mul(0.5,medPlayerManaPct.size()))))).intValue();
+		                
+		                allSkills[charClassDex][level-levelStart][0]=bestIterSkill[0];
+		                allSkills[charClassDex][level-levelStart][1]=bestHitSkill[0];
+		                allSkills[charClassDex][level-levelStart][2]=bestSingleHitSkill[0];
+		                if(mob.session()!=null) mob.session().println("!");
+		                if(fileExp==null)
+		                {
+			                mob.tell("HITPOINTS: "+H1+" vs "+H2);
+			                mob.tell("QUICKEST : "+bestIterScore[0]+": "+bestIterSkill[0]);
+			                mob.tell("MOST DAM : "+bestHitScore[0]+": "+bestHitSkill[0]);
+			                mob.tell("BEST HIT : "+bestSingleHitScore[0]+", Phys: "+bestSingleHitPhys[0]+", Skill: "+bestSingleHitSkill[0]);
+			                mob.tell("MEDIANS  : HITS: "+allData[charClassDex][level-levelStart][5]+" ("+allData[charClassDex][level-levelStart][6]+"%), LOSS ITERS: "+allData[charClassDex][level-levelStart][7]+", WIN ITERS: "+allData[charClassDex][level-levelStart][8]);
+			                mob.tell("MEDIANS  : PHYS DONE: "+allData[charClassDex][level-levelStart][9]+", PHYS TAKEN: "+allData[charClassDex][level-levelStart][10]+" ("+allData[charClassDex][level-levelStart][11]+"%)");
+			                mob.tell("LOSSES   : "+losses[0]);
+			                if((c.failSkillCheck!=null)&&(c.failSkillCheck.size()>0))
+			                {
+			                    StringBuffer fails=new StringBuffer("SKILLFAILS: ");
+			                    for(Enumeration i=c.failSkillCheck.keys();i.hasMoreElements();)
+			                    {
+			                        String s=(String)i.nextElement();
+			                        int[] times=(int[])c.failSkillCheck.get(s);
+			                        if(times[1]>0) {
+			                            int pct=(int)Math.round(100.0*CMath.div(times[1],times[0]));
+			                            if(pct>20)
+			                                fails.append(s+"("+pct+"%) ");
+			                        }
+			                        
+			                    }
+			                    if(fileExp==null)
+				                    mob.tell(fails.toString());
+			                    c.failSkillCheck.clear();
+			                }
+		                }
+			        }
+	                latch.countDown();
+            	}
+            }.start(c,charClassDex,fileExp,latch,aborted);
+            try {
+            	latch.await();
+            } catch(Exception e) {
+            	aborted[0]=true;
+            	return;
+            }
+	    }
+        mob.tell("");
+        if(fileExp!=null)
+        {
+        	CMFile file=new CMFile(fileExp,mob,false);
+        	if(file.canWrite())
+        	{
+        		StringBuffer buf=new StringBuffer("");
+        		Vector baseClasses=new Vector();
+                for(int charClassDex=0;charClassDex<c.classSet.size();charClassDex++)
+                {
+                    CharClass C=(CharClass)c.classSet.elementAt(charClassDex,1);
+                    if(!baseClasses.contains(C.baseClass()))
+                    	baseClasses.addElement(C.baseClass());
+                }
+    	    	for(int d=0;d<c.allData[0][0].length;d++)
+    	    	{
+    	    		buf.append(allDataHeader[d]).append("\t\t");
+            	    for(int level=c.levelStart;level<=c.levelEnd;level+=c.skipLevels)
+            	    	buf.append(level).append('\t');
+    	    		buf.append("\n\r");
+	                for(int charClassDex=0;charClassDex<c.classSet.size();charClassDex++)
 	                {
-	                case 0: R=CMClass.getLocale("Woods"); break; 
-                    case 1: R=CMClass.getLocale("CaveRoom"); break; 
-                    case 2: R=CMClass.getLocale("CityStreet"); break; 
+	                    CharClass C=(CharClass)c.classSet.elementAt(charClassDex,1);
+	        	    	buf.append(C.ID()).append("\t").append(C.baseClass()).append("\t");
+	            	    for(int level=c.levelStart;level<=c.levelEnd;level+=c.skipLevels)
+	            	    {
+                	    	buf.append(c.allData[charClassDex][level-c.levelStart][d]).append('\t');
+	            	    	//for(int i=0;i<allSkills[charClassDex][level-levelStart].length;i++)
+	                	    //	buf.append(allSkills[charClassDex][level-levelStart][i]).append('\t');
+	            	    }
+        	    		buf.append("\n\r");
 	                }
-	                if((++roomRobin)>2) roomRobin=0;
-	                R.setRoomID("UNKNOWNAREA#0");
-	                R.setArea(A);
-	                A.getTimeObj().setTimeOfDay(CMLib.dice().roll(1,A.getTimeObj().getHoursInDay(),-1));
-	                
-	                MOB M1=CMClass.getMOB("StdMOB");
-	                M1.baseEnvStats().setLevel(level);
-                    M1.baseCharStats().setMyRace(CMClass.getRace("Human"));
-	                M1.setName("GOODGUY");
-	                M1.recoverCharStats();
-                    M1.recoverEnvStats();
-                    M1.setLocation(R);
-	                M1.addBehavior(B);
-	                M1.baseCharStats().getMyRace().setHeightWeight(M1.baseEnvStats(),(char)M1.baseCharStats().getStat(CharStats.STAT_GENDER));
-	                M1.recoverCharStats();
-	                M1.recoverEnvStats();
-	                M1.recoverMaxState();
-	                M1.resetToMaxState();
-	                M1.bringToLife(M1.location(),true);
-	                C.fillOutMOB(M1,level);
-	                M1.baseState().setHitPoints(C.getLevelPlayerHP(M1));
-	                M1.setWimpHitPoint(0);
-	                M1.recoverMaxState();
-	                M1.recoverCharStats();
-	                M1.recoverEnvStats();
-	                M1.resetToMaxState();
-                    B.setStat("RECORD"," ");
-                    B.setStat("PROF","true");
-                    B.setStat("LASTSPELL","");
-	                
-                    MOB M2=CMClass.getMOB("StdMOB");
-                    M2.baseCharStats().setMyRace(CMClass.getRace("Human"));
-                    M2.baseEnvStats().setLevel(level);
-                    M2.setName("BADGUY");
-                    M2.recoverCharStats();
-                    M2.recoverEnvStats();
-                    M2.setLocation(R);
-                    M2.baseCharStats().getMyRace().setHeightWeight(M2.baseEnvStats(),(char)M2.baseCharStats().getStat(CharStats.STAT_GENDER));
-                    M2.recoverCharStats();
-                    M2.recoverEnvStats();
-                    M2.recoverMaxState();
-                    M2.resetToMaxState();
-                    M2.bringToLife(M2.location(),true);
-                    M2.baseCharStats().getCurrentClass().fillOutMOB(M1,level);
-                    int hp=M2.baseCharStats().getCurrentClass().getLevelPlayerHP(M1);
-                    if(hp>M2.baseState().getHitPoints())
-                        M2.baseState().setHitPoints(hp);
-                    M2.setWimpHitPoint(0);
-                    M2.recoverMaxState();
-                    M2.recoverCharStats();
-                    M2.recoverEnvStats();
-                    M2.resetToMaxState();
-                    
-                    M1.setVictim(M2);
-                    M2.setVictim(M1);
-	                
-                    int iterations=0;
-                    int cumScore=0;
-                    long t1=System.currentTimeMillis();
-                    while((M1.getVictim()==M2)
-                         &&(M2.getVictim()==M1)
-                         &&(!M1.amDead())
-                         &&(!M2.amDead())
-                         &&(M1.location()==M2.location())
-                         &&((System.currentTimeMillis()-t1)<20000))
-                    {
-                        iterations++;
-                        int h1=M1.curState().getHitPoints();
-                        int h2=M2.curState().getHitPoints();
-                        CMLib.threads().tickAllTickers(R);
-                        
-                        int h=h2-(M2.amDead()?0:M2.curState().getHitPoints());
-                        h=h-(h1-(M1.amDead()?0:M1.curState().getHitPoints()));
-                        if(h>bestSingleHitScore[0])
-                        {
-                            bestSingleHitScore[0]=h;
-                            bestSingleHitSkill[0]=B.getStat("LASTSPELL");
-                        }
-                        cumScore+=h;
-                    }
-                    if((System.currentTimeMillis()-t1)>=20000)
-                        Log.errOut("CharGen",level+"/"+tries+"/"+iterations+"/"+B.getStat("LASTSPELL"));
-                    else
-                    if(M1.amDead())
-                        losses[0]++;
-                    else
-                    if(M2.amDead())
-                    {
-                        avgHits[0]+=cumScore;
-                        avgIters[0]+=iterations;
-                        if(cumScore>bestHitScore[0])
-                        {
-                            bestHitScore[0]=cumScore;
-                            bestHitSkill[0]=B.getStat("RECORD");
-                        }
-                        if(iterations<bestIterScore[0])
-                        {
-                            bestIterScore[0]=iterations;
-                            bestIterSkill[0]=B.getStat("RECORD");
-                        }
-                        if(failSkillCheck!=null)
-                        {
-                            Vector V=CMParms.parseSemicolons(B.getStat("RECORD"),true);
-                            for(int v=0;v<V.size();v++)
-                            {
-                                String s=((String)V.elementAt(v)).trim();
-                                boolean failed=false;
-                                if(s.startsWith("!"))
-                                {
-                                    failed=true;
-                                    s=s.substring(1);
-                                }
-                                int[] times=(int[])failSkillCheck.get(s);
-                                if(times==null)
-                                {
-                                    times=new int[2];
-                                    failSkillCheck.put(s,times);
-                                }
-                                times[0]++;
-                                if(failed)
-                                    times[1]++;
-                            }
-                        }
-                    }
-                    M1.destroy();
-                    M2.destroy();
-	                A.delProperRoom(R);
-	                R.destroy();
-	            }
-                avgHits[0]/=TOTAL_ITERATIONS;
-                avgIters[0]/=TOTAL_ITERATIONS;
-                mob.tell("BEST ITER: "+bestIterScore[0]+": "+bestIterSkill[0]);
-                mob.tell("BEST HITS: "+bestHitScore[0]+": "+bestHitSkill[0]);
-                mob.tell("BEST ONE : "+bestSingleHitScore[0]+": "+bestSingleHitSkill[0]);
-                mob.tell("AVERAGES : HITS: "+avgHits[0]+", ITERS: "+avgIters[0]);
-                mob.tell("LOSSES   : "+losses[0]+"/"+TOTAL_ITERATIONS);
-                if((failSkillCheck!=null)&&(failSkillCheck.size()>0))
-                {
-                    StringBuffer fails=new StringBuffer("SKILLFAILS: ");
-                    for(Enumeration i=failSkillCheck.keys();i.hasMoreElements();)
-                    {
-                        String s=(String)i.nextElement();
-                        int[] times=(int[])failSkillCheck.get(s);
-                        if(times[1]>0) {
-                            int pct=(int)Math.round(100.0*CMath.div(times[1],times[0]));
-                            if(pct>20)
-                                fails.append(s+"("+pct+"%) ");
-                        }
-                        
-                    }
-                    mob.tell(fails.toString());
-                    failSkillCheck.clear();
-                }
-                mob.tell("");
-	        }
-	    }
-        CMLib.map().delArea(A);
-        A.destroy();
+    	    		buf.append("\n\r");
+    	    		buf.append(allDataHeader[d]).append("\t*****\t");
+            	    for(int level=c.levelStart;level<=c.levelEnd;level+=c.skipLevels)
+            	    	buf.append(level).append('\t');
+    	    		buf.append("\n\r");
+    	    		for(int b=0;b<baseClasses.size();b++)
+    	    		{
+    	    			String baseClass=(String)baseClasses.elementAt(b);
+    	    			int[] levels=new int[c.levelEnd+1];
+    	    			double ct=0;
+    	                for(int charClassDex=0;charClassDex<c.classSet.size();charClassDex++)
+    	                    if(((CharClass)c.classSet.elementAt(charClassDex,1)).baseClass().equalsIgnoreCase(baseClass))
+    	                    {
+    	                    	ct+=1.0;
+	    	            	    for(int level=c.levelStart;level<=c.levelEnd;level+=c.skipLevels)
+	    	            	    	levels[level]+=c.allData[charClassDex][level-c.levelStart][d];
+    	                    }
+    	                if(ct>0)
+    	                {
+		        	    	buf.append(baseClass).append("\t").append(baseClass).append("\t");
+		            	    for(int level=c.levelStart;level<=c.levelEnd;level+=c.skipLevels)
+	                	    	buf.append(Math.round(Integer.valueOf(levels[level]).doubleValue()/ct*100.0)/100).append('\t');
+	        	    		buf.append("\n\r");
+    	                }
+    	    		}
+    	    		buf.append("\n\r");
+    	    	}
+                file.saveText(buf);
+        	}
+        }
+        CMLib.map().delArea(c.A);
+        c.A.destroy();
 	}
 
 	public boolean execute(MOB mob, Vector commands, int metaFlags)
@@ -529,6 +948,7 @@
 		if(mob.isMonster())
 			return false;
 		commands.removeElementAt(0);
+		boolean createNewOnly=false;
 		if(commands.size()>0)
 		{
 		    if(((String)commands.firstElement()).equalsIgnoreCase("COMBAT"))
@@ -537,6 +957,12 @@
 		        combatRun(mob,commands);
 		        return true;
 		    }
+		    
+		    if(((String)commands.firstElement()).equalsIgnoreCase("NEW"))
+		    {
+		        commands.removeElementAt(0);
+		        createNewOnly=true;
+		    }
 		}
 		CharClass C=null;
 		int level=-1;
@@ -548,7 +974,7 @@
 			level=CMath.s_int(CMParms.combine(commands,1));
 		}
 
-		if((C==null)&&(ClassName.toUpperCase().indexOf("ALL")<0))
+		if((C==null)&&(createNewOnly||(ClassName.toUpperCase().indexOf("ALL")<0)))
 		{
 			mob.tell("Enter 'ALL' for all classes.");
 			try
@@ -558,7 +984,7 @@
 			catch(Exception e){return false;}
 
 			C=CMClass.findCharClass(ClassName);
-			if((C==null)&&(ClassName.toUpperCase().indexOf("ALL")<0))
+			if((C==null)&&(createNewOnly||(ClassName.toUpperCase().indexOf("ALL")<0)))
 				return false;
 		}
 
@@ -566,7 +992,7 @@
 		{
 			try
 			{
-				level=CMath.s_int(mob.session().prompt("Enter a level (1-25): "));
+				level=CMath.s_int(mob.session().prompt("Enter a level (1-"+CMProps.getIntVar(CMProps.SYSTEMI_LASTPLAYERLEVEL)+"): "));
 			}
 			catch(Exception e){return false;}
 			if(level<=0)
@@ -580,7 +1006,7 @@
 
 		MOB avgMob=null;
 		if(C!=null)
-			avgMob=AverageClassMOB(mob, level,C, 100);
+			avgMob=AverageClassMOB(mob, level,C, createNewOnly?1:100);
 		else
 			avgMob=AverageAllClassMOB(mob,level, 20, 40);
 
@@ -588,11 +1014,16 @@
 
 		if(avgMob!=null)
 		{
-			StringBuffer msg=CMLib.commands().getScore(avgMob);
-			if(!mob.isMonster())
-				mob.session().wraplessPrintln(msg.toString());
+			if(createNewOnly)
+				avgMob.bringToLife(mob.location(),true);
+			else
+			{
+				StringBuffer msg=CMLib.commands().getScore(avgMob);
+				if(!mob.isMonster())
+					mob.session().wraplessPrintln(msg.toString());
+		        avgMob.destroy();
+			}
 		}
-        avgMob.destroy();
 		return false;
 	}
 	
Index: planet_ink/coffee_mud/Commands/Import.java
===================================================================
--- planet_ink/coffee_mud/Commands/Import.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Import.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.io.IOException;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -693,7 +693,7 @@
 		return R2;
 	}
 
-    protected static int getBitMask(String str, int which)
+    protected static long getBitMask(String str, int which)
 	{
 		String s=CMParms.getCleanBit(str,which);
 		if(s.length()==0)
@@ -702,7 +702,7 @@
 		if((x<0)&&(s.length()>0)&&(CMath.s_int(s)==0))
 		{
 			boolean otherStyle=true;
-			int num=0;
+			long num=0;
 			for(int z=0;z<s.length();z++)
 				if(!Character.isLetter(s.charAt(z)))
 				{
@@ -720,7 +720,7 @@
 				return num;
 		}
 
-		int num=0;
+		long num=0;
 		while(x>0)
 		{
 			num=num|CMath.s_int(s.substring(0,x));
@@ -2053,8 +2053,8 @@
 			}
 			if(mobName.length()==0)
 				mobName="Unknown";
-			int actFlag=getBitMask(codeStr1,0);
-			int affFlag=getBitMask(codeStr1,1);
+			long actFlag=getBitMask(codeStr1,0);
+			long affFlag=getBitMask(codeStr1,1);
 			int aliFlag=CMath.s_int(CMParms.getBit(codeStr1,2));
 			MOB M=CMClass.getMOB("GenMob");
 			String checkName=mobName.trim().toUpperCase();
@@ -2371,9 +2371,9 @@
 
 			if(circleFormat)
 			{
-				int off=getBitMask(codeStr3,0);
-				int imm=getBitMask(codeStr3,1);
-				int res=getBitMask(codeStr3,2);
+				long off=getBitMask(codeStr3,0);
+				long imm=getBitMask(codeStr3,1);
+				long res=getBitMask(codeStr3,2);
 				int size=CMath.s_int(CMParms.getCleanBit(codeStr5,2));
 				switch(size)
 				{
@@ -3051,8 +3051,8 @@
 						break;
 					}
 			}
-			int extraFlag=getBitMask(codeStr1,1);
-			int wearFlag=getBitMask(codeStr1,2);
+			long extraFlag=getBitMask(codeStr1,1);
+			long wearFlag=getBitMask(codeStr1,2);
 
 			Ability adjuster=CMClass.getAbility("Prop_HaveAdjuster");
 			switch(objType)
@@ -3090,10 +3090,10 @@
 			String str2=CMParms.getBit(codeStr2,1);
 			String str3=CMParms.getBit(codeStr2,2);
 			String str4=CMParms.getBit(codeStr2,3);
-			int val1=getBitMask(codeStr2,0);
-			int val2=getBitMask(codeStr2,1);
-			int val3=getBitMask(codeStr2,2);
-			int val4=getBitMask(codeStr2,3);
+			int val1=(int)getBitMask(codeStr2,0);
+			int val2=(int)getBitMask(codeStr2,1);
+			int val3=(int)getBitMask(codeStr2,2);
+			int val4=(int)getBitMask(codeStr2,3);
 			Item I=null;
 			switch(objType)
 			{
@@ -3679,8 +3679,8 @@
 						String codeType=CMParms.getBit(codesLine,0);
 						if(codeType.equals("V"))
 						{
-							int res=getBitMask(codesLine,3);
-							int imm=getBitMask(codesLine,3);
+							long res=getBitMask(codesLine,3);
+							long imm=getBitMask(codesLine,3);
 							String[] resistances={
 								" teleport",
 								" mind",
@@ -3715,7 +3715,7 @@
 						{
 							int dis=0;
 							int sense=0;
-							int codeBits=getBitMask(codesLine,3);
+							long codeBits=getBitMask(codesLine,3);
 							if(CMath.isSet(codeBits,0))
 								sense=sense|EnvStats.CAN_NOT_SEE;
 							if(CMath.isSet(codeBits,1))
@@ -3786,8 +3786,8 @@
 						}
 						else
 						{
-							int res=getBitMask(codesLine,3);
-							int imm=getBitMask(codesLine,3);
+							long res=getBitMask(codesLine,3);
+							long imm=getBitMask(codesLine,3);
 							String[] resistances={
 								" teleport",
 								" mind",
@@ -4639,7 +4639,8 @@
 				if((!R.roomID().startsWith("#"))
 				||(R.displayText().length()==0)
 				||(CMParms.numBits(codeLine)<2)
-				||(CMParms.numBits(codeLine)>3))
+				||(CMParms.numBits(codeLine)>6)
+				||(CMParms.numBits(codeLine)==4))
 				{
 					returnAnError(session,"Malformed room! Aborting this room "+R.roomID()+", display="+R.displayText()+", description="+R.description()+", numBits="+CMParms.numBits(codeLine)+", area="+areaName,compileErrors,commands);
 					continue;
@@ -4647,8 +4648,8 @@
                 
 				R.setRoomID(areaName+R.roomID());
 				R.setArea(A);
-				int codeBits=getBitMask(codeLine,0);
-				int sectorType=getBitMask(codeLine,1);
+				long codeBits=getBitMask(codeLine,0);
+				int sectorType=(int)getBitMask(codeLine,1);
 				final String[][] secTypes={
 				{ "inside",		"0"},
 				{ "city",		"1"},
@@ -4656,17 +4657,32 @@
 				{ "forest",		"3"},
 				{ "hills",		"4"},
 				{ "mountain",	"5"},
-				{ "swim",		"6"},
-				{ "noswim",		"7"},
+				{ "swim",		"6"}, // means it is swimmable
+				{ "noswim",		"7"}, // means it requires a boat
 				{ "unused",		"8"},
 				{ "air",		"9"},
 				{ "desert",		"10"}};
-
+				boolean circleFormat=false;
+				if(CMParms.numBits(codeLine)==6) // wierd circlemud exception
+				{
+					codeBits=(getBitMask(codeLine,2)<<16)|getBitMask(codeLine,1); // ignoring 3 & 4
+					sectorType=CMath.s_int(CMParms.getBit(codeLine,5));
+					circleFormat=true;
+				}
+				else
+				if(CMParms.numBits(codeLine)==5) // wierd circlemud exception
+				{
+					codeBits=sectorType;
+					codeBits=(getBitMask(codeLine,2)<<16)|getBitMask(codeLine,1); // ignoring 3
+					sectorType=CMath.s_int(CMParms.getBit(codeLine,4));
+					circleFormat=true;
+				}
+				else
 				if(CMParms.numBits(codeLine)==3)
 				{
 					codeBits=sectorType;
 					String secType=CMParms.getBit(codeLine,2);
-					sectorType=getBitMask(codeLine,2);
+					sectorType=(int)getBitMask(codeLine,2);
 					for(int st=0;st<secTypes.length;st++)
 						if(secType.equalsIgnoreCase(secTypes[st][0]))
 						{
@@ -4674,6 +4690,26 @@
 							break;
 						}
 				}
+				if(circleFormat)
+				{
+					switch(sectorType)
+					{
+					case 0:	R=changeRoomClass(R,"StoneRoom"); break;
+					case 1:	R=changeRoomClass(R,"CityStreet"); break;
+					case 2:	R=changeRoomClass(R,"Plains"); break;
+					case 3:	R=changeRoomClass(R,"Woods"); break;
+					case 4:	R=changeRoomClass(R,"Hills"); break;
+					case 5:	R=changeRoomClass(R,"Mountains"); break;
+					case 6:	R=changeRoomClass(R,"ShallowWater"); break;
+					case 7:	R=changeRoomClass(R,"WaterSurface"); break;
+					case 8:	R=changeRoomClass(R,"UnderWater"); break;
+					case 9:	R=changeRoomClass(R,"InTheAir"); break;
+					case 10: R=changeRoomClass(R,"Desert"); break;
+					case 11: R=changeRoomClass(R,"FrozenPlains"); break;
+					case 12: R=changeRoomClass(R,"FrozenMountains"); break;
+					}
+				}
+				else
 				if((codeBits&8)==0)
 				{
 					switch(sectorType)
@@ -4736,87 +4772,156 @@
 
 				if(CMath.isSet(codeBits,21)) // underwater room
 					R=changeRoomClass(R,"UnderWater");
-
-				//if(CMath.isSet(codeBits,1)) //BANKS are forked up in the ROM files, who knows WHAT this is...
-
+				
+				if(CMath.isSet(codeBits,3)) // indoors
+					R=changeRoomClass(R,"StoneRoom");
+				
 				if(CMath.isSet(codeBits,0)) // dark room
 					R.addNonUninvokableEffect(CMClass.getAbility("Prop_RoomDark"));
 
+				//if(CMath.isSet(codeBits,1)) //BANKS are forked up in the ROM files, who knows WHAT this is...
+				// circlemud says this is a death trap -- well, homie dont play dat either
+				
 				if(CMath.isSet(codeBits,2)) // no mobs room
 					R.addNonUninvokableEffect(CMClass.getAbility("Prop_ReqNoMOB"));
+				
+				// 3 is a room type change, so above
 
-				if(CMath.isSet(codeBits,4)) // no summon out room
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoSummon"));
-
-				if(CMath.isSet(codeBits,9)) // two people only room
+				if(circleFormat)
 				{
-					prop_RoomCapacity.setMiscText("2");
-					if(R.fetchEffect(prop_RoomCapacity.ID())==null)
-						R.addNonUninvokableEffect(prop_RoomCapacity);
+					if(CMath.isSet(codeBits,4)) // circle says no violence
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_Peacemaker"));
+					
+					if(CMath.isSet(codeBits,5)) // circle says quiet
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoChannel"));
+					
+					//if(CMath.isSet(codeBits,6)) // circle says no tracking
+					
+					if(CMath.isSet(codeBits,7)) // circle says no magic
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_MagicFreedom"));
+					
+					if(CMath.isSet(codeBits,8)) // solitaire room
+					{
+						prop_RoomCapacity.setMiscText("1");
+						if(R.fetchEffect(prop_RoomCapacity.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomCapacity);
+					}
+					
+					if(CMath.isSet(codeBits,9)) // no teleport in
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoTeleport"));
+					
+					if(CMath.isSet(codeBits,10))
+					{
+						prop_RoomLevels.setMiscText("SYSOP");
+						if(R.fetchEffect(prop_RoomLevels.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomLevels);
+					}
+					// 11 is a house
+					// 12 is a savable house
+					// 13 is an atrium
+					// 14 is an olc
+					// 15 is an marked
+					
+					if(CMath.isSet(codeBits,16))
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_reqPKill"));
+					
+					if(CMath.isSet(codeBits,17))
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoRecall"));
+	
+					// 18 = guarded
+					// 19 pulse damage
+					// 20 no ooc
+					// 21 can fish
+					// 22 can fish
+					// 23 nodig
+					// 24 nobury
+					// 25 twnhs
+					// 26 customhs
+					// 27 requires vehicle
+					// 28 below ground
+					// 29 rooms moves with random currents?!
+					// 30 timed death trap
+					// 31 word map style maps here
+					// 32 mining
+					// 33 mining+10
+					// 34 mining+25
+					// 35 healing/xp bonus
 				}
-				if(CMath.isSet(codeBits,10)) // no fighting
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_PeaceMaker"));
-
-				if(CMath.isSet(codeBits,11)) // solitaire room
-				{
-					prop_RoomCapacity.setMiscText("1");
-					if(R.fetchEffect(prop_RoomCapacity.ID())==null)
-						R.addNonUninvokableEffect(prop_RoomCapacity);
-				}
-				if(CMath.isSet(codeBits,12))
-					petShops.put(R,R);
 				else
-				if((lastRoom!=null)&&(petShops.get(lastRoom)!=null)&&(petShops.get(lastRoom)==lastRoom))
 				{
-					petShops.remove(lastRoom);
-					petShops.put(R,lastRoom); // now ready to plop stuff!
+					if(CMath.isSet(codeBits,4)) // no summon out room
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoSummon"));
+					
+					if(CMath.isSet(codeBits,9)) // two people only room
+					{
+						prop_RoomCapacity.setMiscText("2");
+						if(R.fetchEffect(prop_RoomCapacity.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomCapacity);
+					}
+					if(CMath.isSet(codeBits,10)) // no fighting
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_PeaceMaker"));
+	
+					if(CMath.isSet(codeBits,11)) // solitaire room
+					{
+						prop_RoomCapacity.setMiscText("1");
+						if(R.fetchEffect(prop_RoomCapacity.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomCapacity);
+					}
+					if(CMath.isSet(codeBits,12))
+						petShops.put(R,R);
+					else
+					if((lastRoom!=null)&&(petShops.get(lastRoom)!=null)&&(petShops.get(lastRoom)==lastRoom))
+					{
+						petShops.remove(lastRoom);
+						petShops.put(R,lastRoom); // now ready to plop stuff!
+					}
+	
+					if(CMath.isSet(codeBits,13))
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoRecall"));
+	
+					if(CMath.isSet(codeBits,14))
+					{
+						prop_RoomLevels.setMiscText("SYSOP");
+						if(R.fetchEffect(prop_RoomLevels.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomLevels);
+					}
+					if(CMath.isSet(codeBits,15))
+					{
+						prop_RoomLevels.setMiscText(">=93");
+						if(R.fetchEffect(prop_RoomLevels.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomLevels);
+					}
+					if(CMath.isSet(codeBits,16))
+					{
+						prop_RoomLevels.setMiscText(">=91");
+						if(R.fetchEffect(prop_RoomLevels.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomLevels);
+					}
+					if(CMath.isSet(codeBits,17))
+					{
+						prop_RoomLevels.setMiscText("<=5");
+						if(R.fetchEffect(prop_RoomLevels.ID())==null)
+							R.addNonUninvokableEffect(prop_RoomLevels);
+					}
+	
+					if(CMath.isSet(codeBits,18))
+					{
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoSummon"));
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoCharm"));
+					}
+	
+					if(CMath.isSet(codeBits,19))
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_reqPKill"));
+	
+					if(CMath.isSet(codeBits,20))
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoTeleportOut"));
+	
+					// if(CMath.isSet(codeBits,23)) No "dirt" in CoffeeMud, so this doesn't matter
+	
+					if(CMath.isSet(codeBits,24))
+						R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoChannel"));
 				}
 
-				if(CMath.isSet(codeBits,13))
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoRecall"));
-
-				if(CMath.isSet(codeBits,14))
-				{
-					prop_RoomLevels.setMiscText("SYSOP");
-					if(R.fetchEffect(prop_RoomLevels.ID())==null)
-						R.addNonUninvokableEffect(prop_RoomLevels);
-				}
-				if(CMath.isSet(codeBits,15))
-				{
-					prop_RoomLevels.setMiscText(">=93");
-					if(R.fetchEffect(prop_RoomLevels.ID())==null)
-						R.addNonUninvokableEffect(prop_RoomLevels);
-				}
-				if(CMath.isSet(codeBits,16))
-				{
-					prop_RoomLevels.setMiscText(">=91");
-					if(R.fetchEffect(prop_RoomLevels.ID())==null)
-						R.addNonUninvokableEffect(prop_RoomLevels);
-				}
-				if(CMath.isSet(codeBits,17))
-				{
-					prop_RoomLevels.setMiscText("<=5");
-					if(R.fetchEffect(prop_RoomLevels.ID())==null)
-						R.addNonUninvokableEffect(prop_RoomLevels);
-				}
-
-				if(CMath.isSet(codeBits,18))
-				{
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoSummon"));
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoCharm"));
-				}
-
-				if(CMath.isSet(codeBits,19))
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_reqPKill"));
-
-				if(CMath.isSet(codeBits,20))
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoTeleportOut"));
-
-				// if(CMath.isSet(codeBits,23)) No "dirt" in CoffeeMud, so this doesn't matter
-
-				if(CMath.isSet(codeBits,24))
-					R.addNonUninvokableEffect(CMClass.getAbility("Prop_NoChannel"));
-
 				roomV.insertElementAt(R.roomID(),0);
 				newRooms.addElement(R);
 				if(plainRoomID.startsWith("#"))
@@ -4914,11 +5019,6 @@
 							returnAnError(session,"Room: "+R.roomID()+", Unknown direction code: "+dirCode+", aborting exit, area="+areaName,compileErrors,commands);
 							continue;
 						}
-						if(CMParms.numBits(codeStr)!=3)
-						{
-							returnAnError(session,"Room: "+R.roomID()+", Malformed exit codeStr "+codeStr+".  Aborting exit, area="+areaName,compileErrors,commands);
-							continue;
-						}
 						if((R.getRawExit(dirCode)!=null)||(R.rawDoors()[dirCode]!=null))
 						{
 							returnAnError(session,"Room: "+R.roomID()+", Redundant exit codeStr "+nextLine+"/"+codeStr+", dircode="+dirCode+".  Aborting exit, area="+areaName,compileErrors,commands);
@@ -4927,6 +5027,14 @@
 						int exitFlag=( CMath.s_int(CMParms.getCleanBit(codeStr,0)) & 31);
 						int doorState=CMath.s_int(CMParms.getCleanBit(codeStr,1));
 						int linkRoomID=CMath.s_int(CMParms.getCleanBit(codeStr,2));
+						if(CMParms.numBits(codeStr)==11) // wierd circle format
+						{ /* all is well */}
+						else
+						if(CMParms.numBits(codeStr)!=3)
+						{
+							returnAnError(session,"Room: "+R.roomID()+", Malformed exit codeStr "+codeStr+".  Aborting exit, area="+areaName,compileErrors,commands);
+							continue;
+						}
 						Exit E=CMClass.getExit("GenExit");
 						Room linkRoom=CMLib.map().getRoom(doneRooms,areaName,""+linkRoomID);
 						if(linkRoomID>=0)
@@ -5387,7 +5495,7 @@
 				if(s.startsWith("D "))
 				{
 					String roomID=CMParms.getCleanBit(s,2);
-					int dirCode=getBitMask(s,3);
+					int dirCode=(int)getBitMask(s,3);
 					R=CMLib.map().getRoom(doneRooms,areaName,roomID);
 					if(R==null)
 					{
@@ -5428,7 +5536,7 @@
 								returnAnError(session,"Room: "+R.roomID()+", Unknown exit in dir: "+dirCode+" very confusing!, area="+areaName,compileErrors,commands);
 							else
 							{
-								int lockBit=getBitMask(s,4);
+								int lockBit=(int)getBitMask(s,4);
 								boolean HasDoor=E.hasADoor();
 								boolean HasLock=E.hasALock();
 								boolean DefaultsClosed=E.defaultsClosed();
Index: planet_ink/coffee_mud/Commands/WillQualify.java
===================================================================
--- planet_ink/coffee_mud/Commands/WillQualify.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/WillQualify.java	(revision 2574)
@@ -56,7 +56,7 @@
 		for (int l = 0; l <= highestLevel; l++) 
 		{
 			StringBuffer thisLine = new StringBuffer("");
-			for (Enumeration a = CMLib.ableMapper().getClassAbles(Class); a.hasMoreElements(); ) 
+			for (Enumeration a = CMLib.ableMapper().getClassAbles(Class,true); a.hasMoreElements(); ) 
 			{
 				AbilityMapper.AbilityMapping cimable=(AbilityMapper.AbilityMapping)a.nextElement();
 				if((cimable.qualLevel ==l)&&(!cimable.isSecret))
Index: planet_ink/coffee_mud/Commands/Consider.java
===================================================================
--- planet_ink/coffee_mud/Commands/Consider.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Consider.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -42,10 +42,10 @@
 	public int relativeLevelDiff(MOB mob1, MOB mob2)
 	{
 		if((mob1==null)||(mob2==null)) return 0;
-		int mob2Armor=mob2.adjustedArmor();
-		int mob1Armor=mob1.adjustedArmor();
-		double mob1Attack=(double)mob1.adjustedAttackBonus(mob2);
-        double mob2Attack=(double)mob2.adjustedAttackBonus(mob1);
+		int mob2Armor=CMLib.combat().adjustedArmor(mob2);
+		int mob1Armor=CMLib.combat().adjustedArmor(mob1);
+		double mob1Attack=(double)CMLib.combat().adjustedAttackBonus(mob1,mob2);
+        double mob2Attack=(double)CMLib.combat().adjustedAttackBonus(mob2,mob1);
 		int mob2Dmg=mob2.envStats().damage();
 		int mob1Dmg=mob1.envStats().damage();
 		int mob2Hp=mob2.baseState().getHitPoints();
Index: planet_ink/coffee_mud/Commands/ClanList.java
===================================================================
--- planet_ink/coffee_mud/Commands/ClanList.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/ClanList.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -43,9 +43,9 @@
 	    boolean trophySystemActive=CMLib.clans().trophySystemActive();
 		StringBuffer head=new StringBuffer("");
 		head.append("^x[");
-		head.append(CMStrings.padRight("Clan Name",24)+" | ");
-		head.append(CMStrings.padRight("Type",13)+" | ");
-		head.append(CMStrings.padRight("Status",8)+" | ");
+		head.append(CMStrings.padRight("Clan Name",30)+"| ");
+		head.append(CMStrings.padRight("Type",10)+"| ");
+		head.append(CMStrings.padRight("Status",7)+"| ");
 		head.append(CMStrings.padRight("Members",7));
 		if(trophySystemActive)
 			head.append(" | "+CMStrings.padRight("Trophies",8));
@@ -65,8 +65,8 @@
                 continue;
             
 			msg.append(" ");
-			msg.append(CMStrings.padRight("^<CLAN^>"+CMStrings.removeColors(thisClan.clanID())+"^</CLAN^>",24)+"   ");
-			msg.append(CMStrings.padRight(thisClan.typeName(),13)+"   ");
+			msg.append("^<CLAN^>"+CMStrings.padRight(CMStrings.removeColors(thisClan.clanID()),30)+"^</CLAN^>  ");
+			msg.append(CMStrings.padRight(thisClan.typeName(),10)+"  ");
 			boolean war=false;
 			for(Enumeration e2=CMLib.clans().clans();e2.hasMoreElements();)
 			{
@@ -86,7 +86,7 @@
 				status="Pending";
 				break;
 			}
-			msg.append(CMStrings.padRight(status,8)+"   ");
+			msg.append(CMStrings.padRight(status,7)+"  ");
 			msg.append(CMStrings.padRight(Integer.toString(thisClan.getSize()),7)+"   ");
 	        msg.append(trophySet);
 			msg.append("\n\r");
Index: planet_ink/coffee_mud/Commands/Catalog.java
===================================================================
--- planet_ink/coffee_mud/Commands/Catalog.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Catalog.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -93,17 +93,41 @@
 		if(exactOnly) return (Environmental)data[0];
 		if((data[0]==null)&&((whatKind==0)||(whatKind==1)))
 		{
-			String[] names=CMLib.catalog().getCatalogMobNames();
+			String[] names=(String[])CMLib.catalog().getCatalogMobNames().clone();
 			for(int x=0;x<names.length;x++)
 				if(CMLib.english().containsString(names[x], ID))
 				{	data[0]=CMLib.catalog().getCatalogMob(names[x]); data[1]=Integer.valueOf(1); break;}
+			if(data[0] == null)
+			{
+				for(int s=0;s<names.length;s++)
+					names[s] = CMStrings.removeColors(names[s]);
+				for(int x=0;x<names.length;x++)
+					if(ID.equalsIgnoreCase(names[x]))
+					{	data[0]=CMLib.catalog().getCatalogMob(names[x]); data[1]=Integer.valueOf(1); break;}
+				if(data[0] == null)
+				for(int x=0;x<names.length;x++)
+					if(CMLib.english().containsString(names[x], ID))
+					{	data[0]=CMLib.catalog().getCatalogMob(names[x]); data[1]=Integer.valueOf(1); break;}
+			}
 		}
 		if((data[0]==null)&&((whatKind==0)||(whatKind==2)))
 		{
-			String[] names=CMLib.catalog().getCatalogItemNames();
+			String[] names=(String[])CMLib.catalog().getCatalogItemNames().clone();
 			for(int x=0;x<names.length;x++)
 				if(CMLib.english().containsString(names[x], ID))
 				{	data[0]=CMLib.catalog().getCatalogItem(names[x]); data[1]=Integer.valueOf(2); break;}
+			if(data[0] == null)
+			{
+				for(int s=0;s<names.length;s++)
+					names[s] = CMStrings.removeColors(names[s]);
+				for(int x=0;x<names.length;x++)
+					if(ID.equalsIgnoreCase(names[x]))
+					{	data[0]=CMLib.catalog().getCatalogItem(names[x]); data[1]=Integer.valueOf(2); break;}
+				if(data[0] == null)
+				for(int x=0;x<names.length;x++)
+					if(CMLib.english().containsString(names[x], ID))
+					{	data[0]=CMLib.catalog().getCatalogItem(names[x]); data[1]=Integer.valueOf(2); break;}
+			}
 		}
 		return (Environmental)data[0];
 	}
@@ -365,15 +389,25 @@
                 {
                     if(mob.session()!=null)
                     {
-                        String newRate=mob.session().prompt("Enter a new Drop Rate or 0% to disable ("+CMath.toPct(data.getRate())+"): ", CMath.toPct(data.getRate()));
-                        if(!CMath.isPct(newRate))
-                            return false;
-                        data.setRate(CMath.s_pct(newRate));
+                    	Double newPct=null;
+                    	while(newPct == null)
+                    	{
+	                        String newRate=mob.session().prompt("Enter a new Drop Rate or 0% to disable ("+CMath.toPct(data.getRate())+"): ", CMath.toPct(data.getRate()));
+	                        if(newRate.trim().length()==0)
+	                        	return false;
+	                        else
+	                        if(CMath.isPct(newRate))
+	                        	newPct=Double.valueOf(CMath.s_pct(newRate));
+	                        else
+	                        	mob.tell("'"+newRate+"' is not a valid percentage value.  Try something like 10%");
+                    	}
+                        data.setRate(newPct.doubleValue());
                         if(data.getRate()<=0.0)
                         {
                             data.setMaskStr("");
                             data.setRate(0.0);
                             CMLib.database().DBUpdateItem("CATALOG_ITEMS",(Item)E);
+                            Log.sysOut("Catalog",mob.Name()+" modified catalog item "+E.Name());
                             mob.tell("No drop item.");
                             return false;
                         }
@@ -397,6 +431,7 @@
                             data.setMaskStr(newMask);
                         }
                         CMLib.database().DBUpdateItem("CATALOG_ITEMS",(Item)E);
+                        Log.sysOut("Catalog",mob.Name()+" modified catalog item "+E.Name());
                         mob.tell("Item '"+E.Name()+" has been updated.");
                     }
                 }
Index: planet_ink/coffee_mud/Commands/TrailTo.java
===================================================================
--- planet_ink/coffee_mud/Commands/TrailTo.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/TrailTo.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -43,7 +43,7 @@
 	public String trailTo(Room R1, Vector commands)
 	{
 		int radius=Integer.MAX_VALUE;
-        HashSet ignoreRooms=null;
+        HashSet<Room> ignoreRooms=null;
         TrackingLibrary.TrackingFlags flags = new TrackingLibrary.TrackingFlags();
         for(int c=0;c<commands.size();c++)
         {
@@ -100,7 +100,7 @@
 			where=where.substring(0,where.length()-9).trim();
 			confirm=true;
 		}
-		Vector set=new Vector();
+		Vector<Room> set=new Vector<Room>();
 		CMLib.tracking().getRadiantRooms(R1,set,flags,null,radius,ignoreRooms);
 		if(where.equalsIgnoreCase("everyarea"))
 		{
@@ -108,7 +108,8 @@
 			for(Enumeration a=CMLib.map().sortedAreas();a.hasMoreElements();)
 			{
 				Area A=(Area)a.nextElement();
-				str.append(CMStrings.padRightPreserve(A.name(),30)+": "+trailTo(R1,set,A.name(),areaNames,confirm,radius,ignoreRooms)+"\n\r");
+				String trail = CMLib.tracking().getTrailToDescription(R1,set,A.name(),areaNames,confirm,radius,ignoreRooms,5);
+				str.append(CMStrings.padRightPreserve(A.name(),30)+": "+trail+"\n\r");
 			}
 			if(confirm) Log.rawSysOut(str.toString());
 			return str.toString();
@@ -123,7 +124,10 @@
 				{
 					Room R=(Room)r.nextElement();
 					if((R!=R1)&&(R.roomID().length()>0))
-						str.append(CMStrings.padRightPreserve(R.roomID(),30)+": "+trailTo(R1,set,R.roomID(),areaNames,confirm,radius,ignoreRooms)+"\n\r");
+					{
+						String trail = CMLib.tracking().getTrailToDescription(R1,set,R.roomID(),areaNames,confirm,radius,ignoreRooms,5);
+						str.append(CMStrings.padRightPreserve(R.roomID(),30)+": "+trail+"\n\r");
+					}
 				}
 		    }catch(NoSuchElementException nse){}
 			if(confirm) Log.rawSysOut(str.toString());
@@ -131,163 +135,13 @@
 		}
 		else
 		{
-			String str=trailTo(R1,set,where,areaNames,confirm,radius,ignoreRooms);
+			String str=CMLib.tracking().getTrailToDescription(R1,set,where,areaNames,confirm,radius,ignoreRooms,5);
 			if(!justTheFacts)str=CMStrings.padRightPreserve(where,30)+": "+str;
 			if(confirm) Log.rawSysOut(str);
 			return str;
 		}
 	}
-	protected int getRoomDirection(Room R, Room toRoom, Vector ignore)
-	{
-		for(int d=Directions.NUM_DIRECTIONS()-1;d>=0;d--)
-			if((R.getRoomInDir(d)==toRoom)
-			&&(R!=toRoom)
-			&&(!ignore.contains(R)))
-				return d;
-		return -1;
-	}
-	public String trailTo(Room R1, Vector set, String where, boolean areaNames, boolean confirm, int radius, HashSet ignoreRooms)
-	{
-		Room R2=CMLib.map().getRoom(where);
-		if(R2==null)
-			for(Enumeration a=CMLib.map().sortedAreas();a.hasMoreElements();)
-			{
-				Area A=(Area)a.nextElement();
-				if(A.name().equalsIgnoreCase(where))
-				{
-					if(set.size()==0)
-					{
-						int lowest=Integer.MAX_VALUE;
-						for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
-						{
-							Room R=(Room)r.nextElement();
-							int x=R.roomID().indexOf("#");
-							if((x>=0)&&(CMath.s_int(R.roomID().substring(x+1))<lowest))
-								lowest=CMath.s_int(R.roomID().substring(x+1));
-						}
-						if(lowest<Integer.MAX_VALUE)
-							R2=CMLib.map().getRoom(A.name()+"#"+lowest);
-					}
-					else
-					{
-						for(int i=0;i<set.size();i++)
-						{
-							Room R=(Room)set.elementAt(i);
-							if(R.getArea()==A)
-							{
-								R2=R;
-								break;
-							}
-						}
-					}
-					break;
-				}
-			}
-		if(R2==null) return "Unable to determine '"+where+"'.";
-		TrackingLibrary.TrackingFlags flags = new TrackingLibrary.TrackingFlags()
-											.add(TrackingLibrary.TrackingFlag.NOEMPTYGRIDS);
-		if(set.size()==0)
-			CMLib.tracking().getRadiantRooms(R1,set,flags,R2,radius,ignoreRooms);
-		int foundAt=-1;
-		for(int i=0;i<set.size();i++)
-		{
-			Room R=(Room)set.elementAt(i);
-			if(R==R2){ foundAt=i; break;}
-		}
-		if(foundAt<0) return "You can't get to '"+R2.roomID()+"' from here.";
-		Room checkR=R2;
-		Vector trailV=new Vector();
-		trailV.addElement(R2);
-        HashSet areasDone=new HashSet();
-		boolean didSomething=false;
-		while(checkR!=R1)
-		{
-			didSomething=false;
-			for(int r=0;r<foundAt;r++)
-			{
-				Room R=(Room)set.elementAt(r);
-				if(getRoomDirection(R,checkR,trailV)>=0)
-				{
-					trailV.addElement(R);
-                    if(!areasDone.contains(R.getArea()))
-                        areasDone.add(R.getArea());
-					foundAt=r;
-					checkR=R;
-					didSomething=true;
-					break;
-				}
-			}
-			if(!didSomething)
-				return "No trail was found?!";
-		}
-		Vector theDirTrail=new Vector();
-		Vector empty=new Vector();
-		for(int s=trailV.size()-1;s>=1;s--)
-		{
-			Room R=(Room)trailV.elementAt(s);
-			Room RA=(Room)trailV.elementAt(s-1);
-			theDirTrail.addElement(Character.toString(Directions.getDirectionName(getRoomDirection(R,RA,empty)).charAt(0))+" ");
-		}
-		StringBuffer theTrail=new StringBuffer("");
-		if(confirm)	theTrail.append("\n\r"+CMStrings.padRight("Trail",30)+": ");
-		char lastDir='\0';
-		int lastNum=0;
-		while(theDirTrail.size()>0)
-		{
-			String s=(String)theDirTrail.elementAt(0);
-			if(lastNum==0)
-			{
-				lastDir=s.charAt(0);
-				lastNum=1;
-			}
-			else
-			if(s.charAt(0)==lastDir)
-				lastNum++;
-			else
-			{
-				if(lastNum==1)
-					theTrail.append(Character.toString(lastDir)+" ");
-				else
-					theTrail.append(Integer.toString(lastNum)+Character.toString(lastDir)+" ");
-				lastDir=s.charAt(0);
-				lastNum=1;
-			}
-			theDirTrail.removeElementAt(0);
-		}
-		if(lastNum==1)
-			theTrail.append(Character.toString(lastDir));
-		else
-		if(lastNum>0)
-			theTrail.append(Integer.toString(lastNum)+Character.toString(lastDir));
-
-		if((confirm)&&(trailV.size()>1))
-		{
-			for(int i=0;i<trailV.size();i++)
-			{
-				Room R=(Room)trailV.elementAt(i);
-				if(R.roomID().length()==0)
-				{
-					theTrail.append("*");
-					break;
-				}
-			}
-			Room R=(Room)trailV.elementAt(1);
-			theTrail.append("\n\r"+CMStrings.padRight("From",30)+": "+Directions.getDirectionName(getRoomDirection(R,R2,empty))+" <- "+R.roomID());
-			theTrail.append("\n\r"+CMStrings.padRight("Room",30)+": "+R.displayText()+"/"+R.description());
-			theTrail.append("\n\r\n\r");
-		}
-        if((areaNames)&&(areasDone.size()>0))
-        {
-            theTrail.append("\n\r"+CMStrings.padRight("Areas",30)+":");
-            for(Iterator i=areasDone.iterator();i.hasNext();)
-            {
-                Area A=(Area)i.next();
-                theTrail.append(" \""+A.name()+"\",");
-            }
-        }
-		return theTrail.toString();
-	}
-
+	
 	public boolean execute(MOB mob, Vector commands, int metaFlags)
 		throws java.io.IOException
 	{
Index: planet_ink/coffee_mud/Commands/Link.java
===================================================================
--- planet_ink/coffee_mud/Commands/Link.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Link.java	(revision 2574)
@@ -17,7 +17,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,7 +64,7 @@
 		thisRoom=CMLib.map().getRoom(RoomID);
 		if(thisRoom==null)
 		{
-			thisRoom=CMLib.map().findWorldRoomLiberally(mob,RoomID,"R",100);
+			thisRoom=CMLib.map().findWorldRoomLiberally(mob,RoomID,"R",100,120);
 			if(thisRoom==null)
 			{
 				mob.tell("Room \""+RoomID+"\" is unknown.  Try again.");
Index: planet_ink/coffee_mud/Commands/Deviations.java
===================================================================
--- planet_ink/coffee_mud/Commands/Deviations.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Deviations.java	(revision 2574)
@@ -230,7 +230,7 @@
 				if(I instanceof Weapon)
 					W=(Weapon)I;
 				Hashtable vals=CMLib.itemBuilder().timsItemAdjustments(
-								I,I.envStats().level(),I.material(),I.baseEnvStats().weight(),
+								I,I.envStats().level(),I.material(),
 								I.rawLogicalAnd()?2:1,
 								(W==null)?0:W.weaponClassification(),
 								I.maxRange(),
Index: planet_ink/coffee_mud/Commands/At.java
===================================================================
--- planet_ink/coffee_mud/Commands/At.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/At.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -49,7 +49,7 @@
 		}
 		String cmd=(String)commands.firstElement();
 		commands.removeElementAt(0);
-		Room room=CMLib.map().findWorldRoomLiberally(mob,cmd,"APMIR",100);
+		Room room=CMLib.map().findWorldRoomLiberally(mob,cmd,"APMIR",100,120);
 		if(room==null)
 		{
 			if(CMSecurity.isAllowedAnywhere(mob,"AT"))
Index: planet_ink/coffee_mud/Commands/Goto.java
===================================================================
--- planet_ink/coffee_mud/Commands/Goto.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Goto.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -69,7 +69,7 @@
 			}
 		}
 		else
-			room=CMLib.map().findWorldRoomLiberally(mob,cmd.toString(),"RIPMA",100);
+			room=CMLib.map().findWorldRoomLiberally(mob,cmd.toString(),"RIPMA",100,120);
 
 		if(room==null)
 		{
Index: planet_ink/coffee_mud/Commands/Score.java
===================================================================
--- planet_ink/coffee_mud/Commands/Score.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Score.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -42,9 +42,6 @@
     public StringBuffer getScore(MOB mob){return getScore(mob,"");}
 	public StringBuffer getScore(MOB mob, String parm)
 	{
-		int adjustedAttack=mob.adjustedAttackBonus(null);
-		int adjustedArmor=(-mob.adjustedArmor())+50;
-
 		StringBuffer msg=new StringBuffer("^N");
 
 		int classLevel=mob.charStats().getClassLevel(mob.charStats().getCurrentClass());
@@ -137,11 +134,12 @@
 				msg.append("You are "+role+" of the ^H"+mob.getClanID()+"^?^. Clan.\n\r");
 			}
 		}
-        msg.append("\n\r^NYour stats are: \n\r^!");
+        msg.append("\n\r^NYour stats are: ");
+        msg.append(CMProps.mxpImage(mob," ALIGN=RIGHT H=70 W=70"));
+        msg.append("\n\r");
         int max=CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT);
         CharStats CT=mob.charStats();
         if(parm.equalsIgnoreCase("BASE")) CT=mob.baseCharStats();
-        msg.append(CMProps.mxpImage(mob," ALIGN=RIGHT H=70 W=70"));
         msg.append("^N^!");
         msg.append(CMStrings.padRight("^<HELP^>Strength^</HELP^>",15)+": "+CMStrings.padRight(Integer.toString(CT.getStat(CharStats.STAT_STRENGTH)),2)+"/"+(max+CT.getStat(CharStats.STAT_MAX_STRENGTH_ADJ))+"\n\r");
         msg.append(CMStrings.padRight("^<HELP^>Intelligence^</HELP^>",15)+": "+CMStrings.padRight(Integer.toString(CT.getStat(CharStats.STAT_INTELLIGENCE)),2)+"/"+(max+CT.getStat(CharStats.STAT_MAX_INTELLIGENCE_ADJ))+"\n\r");
@@ -193,8 +191,8 @@
     	            msg.append("Your "+CMStrings.padRight("^<HELP^>"+F.name()+"^</HELP^> is",18)+": ^H"+FR.name()+"^?.\n\r");
 		    }
 		}
-		msg.append("Your ^<HELP^>armored defence^</HELP^> is: ^H"+CMLib.combat().armorStr(adjustedArmor)+"^?.\n\r");
-		msg.append("Your ^<HELP^>combat prowess^</HELP^> is : ^H"+CMLib.combat().fightingProwessStr(adjustedAttack)+"^?.\n\r");
+		msg.append("Your ^<HELP^>armored defence^</HELP^> is: ^H"+CMLib.combat().armorStr(mob)+"^?.\n\r");
+		msg.append("Your ^<HELP^>combat prowess^</HELP^> is : ^H"+CMLib.combat().fightingProwessStr(mob)+"^?.\n\r");
 		//if(CMLib.flags().canSeeHidden(mob))
 		//	msg.append("Your ^<HELP^>observation score^</HELP^> : ^H"+CMLib.flags().getDetectScore(mob)+"^?.\n\r");
 		msg.append("Wimpy is set to ^!"+mob.getWimpHitPoint()+"^? hit points.\n\r");
Index: planet_ink/coffee_mud/Commands/Reset.java
===================================================================
--- planet_ink/coffee_mud/Commands/Reset.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Reset.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -226,12 +226,37 @@
 			&&(((DeadBody)I).playerCorpse()))
 				warning.append("A player corpse, '"+I.Name()+"' is in "+CMLib.map().getExtendedRoomID(R)+"\n\r");
 		}
+		if(R instanceof GridLocale)
+		{
+			Vector rooms=((GridLocale)R).getAllRooms();
+			for(int r=0;r<rooms.size();r++)
+			{
+				String s=resetWarning(mob,(Room)rooms.elementAt(r));
+				if(s!=null) warning.append(s);
+			}
+		}
 		if(warning.length()==0) return null;
 		return warning.toString();
 	}
 	
+	public boolean fixMob(MOB M)
+	{
+		MOB M2=M.baseCharStats().getCurrentClass().fillOutMOB(null,M.baseEnvStats().level());
+		if((M.baseEnvStats().attackAdjustment() != M2.baseEnvStats().attackAdjustment())
+		||(M.baseEnvStats().armor() != M2.baseEnvStats().armor())
+		||(M.baseEnvStats().damage() != M2.baseEnvStats().damage())
+		||(M.baseEnvStats().speed() != M2.baseEnvStats().speed()))
+		{
+			M.baseEnvStats().setAttackAdjustment(M2.baseEnvStats().attackAdjustment());
+			M.baseEnvStats().setArmor(M2.baseEnvStats().armor());
+			M.baseEnvStats().setDamage(M2.baseEnvStats().damage());
+			M.baseEnvStats().setSpeed(M2.baseEnvStats().speed());
+			M.recoverEnvStats();
+			return true;
+		}
+		return false;
+	}
 	
-	
 	public boolean execute(MOB mob, Vector commands, int metaFlags)
 		throws java.io.IOException
 	{
@@ -408,6 +433,39 @@
             }
         }
         else
+		if(s.equalsIgnoreCase("racestatgains"))
+		{
+		    for(Enumeration e=CMClass.races();e.hasMoreElements();)
+		    {
+		        Race R=(Race)e.nextElement();
+		        if(R.isGeneric())
+		        {
+		            CharStats ADJSTAT1=(CharStats)CMClass.getCommon("DefaultCharStats");
+		            ADJSTAT1.setAllValues(0);
+		            CMLib.coffeeMaker().setCharStats(ADJSTAT1,R.getStat("ASTATS"));
+		            boolean save=false;
+		    		for(int i=0;i<CharStats.NUM_STATS;i++)
+		    		{
+		    			if(i<CharStats.NUM_BASE_STATS)
+		    			{
+		    				if(ADJSTAT1.getStat(i)>5)
+		    				{
+		    					ADJSTAT1.setStat(i,5);
+		    					save=true;
+		    				}
+		    			}
+		    		}
+		    		if(save)
+		    		{
+			    		R.setStat("ASTATS",CMLib.coffeeMaker().getCharStatsStr(ADJSTAT1));
+			    		mob.tell("Modified "+R.ID());
+			    		CMLib.database().DBDeleteRace(R.ID());
+			    		CMLib.database().DBCreateRace(R.ID(),R.racialParms());
+		    		}
+		        }
+		    }
+		}
+		else
 		if(s.equalsIgnoreCase("genraceagingcharts"))
 		{
 		    for(Enumeration e=CMClass.races();e.hasMoreElements();)
@@ -545,6 +603,16 @@
 			    		for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
 							rooms.addElement(r.nextElement());
 			    	}
+			    	MOB[] mobs=CMLib.catalog().getCatalogMobs();
+			    	for(int m=0;m<mobs.length;m++)
+			    	{
+			    		MOB M=mobs[m];
+			    		if(fixMob(M))
+			    		{
+							mob.tell("Catalog mob "+M.Name()+" done.");
+			    			CMLib.catalog().updateCatalog(M);
+			    		}
+			    	}
 			    }catch(NoSuchElementException nse){}
 			}
 			else
@@ -566,15 +634,9 @@
 					{
 						MOB M=R.fetchInhabitant(m);
 						if((M.savable())
+						&&(!CMLib.flags().isCataloged(M))
 						&&(M.getStartRoom()==R))
-						{
-							MOB M2=M.baseCharStats().getCurrentClass().fillOutMOB(null,M.baseEnvStats().level());
-							M.baseEnvStats().setAttackAdjustment(M2.baseEnvStats().attackAdjustment());
-							M.baseEnvStats().setArmor(M2.baseEnvStats().armor());
-							M.baseEnvStats().setDamage(M2.baseEnvStats().damage());
-							M.recoverEnvStats();
-							somethingDone=true;
-						}
+							somethingDone=fixMob(M) || somethingDone;
 					}
 					if(somethingDone)
 					{
@@ -833,19 +895,42 @@
 			mob.session().println("done!");
 		}
 		else
-		if(s.equalsIgnoreCase("worldvaluefixer"))
+		if(s.equalsIgnoreCase("worlditemfixer"))
 		{
 			if(mob.session()==null) return false;
 			mob.session().print("working...");
+			StringBuffer recordedChanges=null;
+			boolean nosave=false;
+			for(int i=1;i<commands.size();i++)
+				if(((String)commands.elementAt(i)).equalsIgnoreCase("NOSAVE"))
+				{
+					nosave=true;
+					recordedChanges=new StringBuffer("");
+				}
+			
 			for(Enumeration a=CMLib.map().areas();a.hasMoreElements();)
 			{
+				if((recordedChanges!=null)&&(recordedChanges.length()>0))
+				{
+					mob.session().rawOut(recordedChanges.toString());
+					recordedChanges=new StringBuffer("");
+				}
 				Area A=(Area)a.nextElement();
+				boolean skip=false;
+				for(int i=1;i<commands.size();i++)
+					if(((String)commands.elementAt(i)).equalsIgnoreCase(A.Name())||rest.equalsIgnoreCase(A.Name()))
+						skip=true;
+				if(skip) continue;
 				A.setAreaState(Area.STATE_FROZEN);
 				for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
 				{
 					Room R=(Room)r.nextElement();
 					if(R.roomID().length()>0)
 					{
+						for(int i=1;i<commands.size();i++)
+							if(((String)commands.elementAt(i)).equalsIgnoreCase(R.roomID())||rest.equalsIgnoreCase(R.roomID()))
+								skip=true;
+						if(skip) continue;
 				    	synchronized(("SYNC"+R.roomID()).intern())
 				    	{
 				    		R=CMLib.map().getRoom(R);
@@ -855,18 +940,22 @@
 							for(int i=0;i<R.numItems();i++)
 							{
 								Item I=R.fetchItem(i);
-								if(CMLib.itemBuilder().itemFix(I))
+								if(CMLib.itemBuilder().itemFix(I,-1,recordedChanges))
 									changedItems=true;
 							}
 							for(int m=0;m<R.numInhabitants();m++)
 							{
 								MOB M=R.fetchInhabitant(m);
-								if(M==mob) continue;
+								if((M==mob)||(!M.isMonster())) continue;
 								if(!M.savable()) continue;
 								for(int i=0;i<M.inventorySize();i++)
 								{
 									Item I=M.fetchInventory(i);
-									if(CMLib.itemBuilder().itemFix(I))
+									int lvl=-1;
+									if((I.baseEnvStats().level()>M.baseEnvStats().level())
+									||((I.baseEnvStats().level()>91)&&((I.baseEnvStats().level() + (I.baseEnvStats().level()/10))<M.baseEnvStats().level())))
+										lvl=M.baseEnvStats().level();
+									if(CMLib.itemBuilder().itemFix(I,lvl,recordedChanges))
 										changedMOBS=true;
 								}
 								ShopKeeper SK=CMLib.coffeeShops().getShopKeeper(M);
@@ -880,7 +969,7 @@
 										{
 											Item I=(Item)E;
 											boolean didSomething=false;
-											didSomething=CMLib.itemBuilder().itemFix(I);
+											didSomething=CMLib.itemBuilder().itemFix(I,-1,recordedChanges);
 											changedMOBS=changedMOBS||didSomething;
 											if(didSomething)
 											{
@@ -893,9 +982,9 @@
 									}
 								}
 							}
-							if(changedItems)
+							if((changedItems)&&(!nosave))
 								CMLib.database().DBUpdateItems(R);
-							if(changedMOBS)
+							if((changedMOBS)&&(!nosave))
 								CMLib.database().DBUpdateMOBs(R);
 							mob.session().print(".");
 				    	}
@@ -906,79 +995,6 @@
 			mob.session().println("done!");
 		}
         else
-        if(s.equalsIgnoreCase("worldvaluefixer"))
-        {
-            if(mob.session()==null) return false;
-            mob.session().print("working...");
-            for(Enumeration a=CMLib.map().areas();a.hasMoreElements();)
-            {
-                Area A=(Area)a.nextElement();
-                A.setAreaState(Area.STATE_FROZEN);
-                for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
-                {
-                    Room R=(Room)r.nextElement();
-                    if(R.roomID().length()>0)
-                    {
-                        synchronized(("SYNC"+R.roomID()).intern())
-                        {
-                            R=CMLib.map().getRoom(R);
-                            CMLib.map().resetRoom(R);
-                            boolean changedMOBS=false;
-                            boolean changedItems=false;
-                            for(int i=0;i<R.numItems();i++)
-                            {
-                                Item I=R.fetchItem(i);
-                                if(CMLib.itemBuilder().toneDownValue(I))
-                                    changedItems=true;
-                            }
-                            for(int m=0;m<R.numInhabitants();m++)
-                            {
-                                MOB M=R.fetchInhabitant(m);
-                                if(M==mob) continue;
-                                if(!M.savable()) continue;
-                                for(int i=0;i<M.inventorySize();i++)
-                                {
-                                    Item I=M.fetchInventory(i);
-                                    if(CMLib.itemBuilder().toneDownValue(I))
-                                        changedMOBS=true;
-                                }
-                                ShopKeeper SK=CMLib.coffeeShops().getShopKeeper(M);
-                                if(SK!=null)
-                                {
-                                    Vector V=SK.getShop().getStoreInventory();
-                                    for(int i=V.size()-1;i>=0;i--)
-                                    {
-                                        Environmental E=(Environmental)V.elementAt(i);
-                                        if(E instanceof Item)
-                                        {
-                                            Item I=(Item)E;
-                                            boolean didSomething=false;
-                                            didSomething=CMLib.itemBuilder().toneDownValue(I);
-                                            changedMOBS=changedMOBS||didSomething;
-                                            if(didSomething)
-                                            {
-                                                int numInStock=SK.getShop().numberInStock(I);
-                                                int stockPrice=SK.getShop().stockPrice(I);
-                                                SK.getShop().delAllStoreInventory(I);
-                                                SK.getShop().addStoreInventory(I,numInStock,stockPrice);
-                                            }
-                                        }
-                                    }
-                                }
-                            }
-                            if(changedItems)
-                                CMLib.database().DBUpdateItems(R);
-                            if(changedMOBS)
-                                CMLib.database().DBUpdateMOBs(R);
-                            mob.session().print(".");
-                        }
-                    }
-                }
-                if(A.getAreaState()>Area.STATE_ACTIVE) A.setAreaState(Area.STATE_ACTIVE);
-            }
-            mob.session().println("done!");
-        }
-        else
 		if(s.startsWith("clantick"))
 			CMLib.clans().tickAllClans();
         else
Index: planet_ink/coffee_mud/Commands/Deities.java
===================================================================
--- planet_ink/coffee_mud/Commands/Deities.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Deities.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -35,11 +35,77 @@
 {
 	public Deities(){}
 
-	private String[] access={"DEITIES","GODS"};
+	private String[] access={"DEITIES","GODS","DEITY"};
 	public String[] getAccessWords(){return access;}
+
+	public String getDeityInformation(MOB mob, Deity D)
+	{
+		StringBuffer msg = new StringBuffer("");
+		msg.append("\n\r^x"+D.name()+"^.^?\n\r");
+		msg.append(D.description()+"\n\r\n\r");
+        if((mob==null)||(CMSecurity.isASysOp(mob)))
+        {
+            msg.append(D.getClericRequirementsDesc()+"\n\r\n\r");
+            msg.append(D.getWorshipRequirementsDesc()+"\n\r");
+        }
+        else
+        if(mob.charStats().getCurrentClass().baseClass().equals("Cleric"))
+			msg.append(D.getClericRequirementsDesc()+"\n\r");
+        else
+            msg.append(D.getWorshipRequirementsDesc()+"\n\r");
+		if(D.numBlessings()>0)
+		{
+			msg.append("\n\r^HBlessings: ^N");
+			for(int b=0;b<D.numBlessings();b++)
+			{
+				msg.append(D.fetchBlessing(b).name());
+                if(D.fetchBlessingCleric(b))
+                    msg.append(" (Clerics only)");
+				if(b<D.numBlessings()-1)
+					msg.append(", ");
+			}
+			msg.append("\n\r^HBlessing Instructions: ^N");
+            if((mob==null)||(CMSecurity.isASysOp(mob)))
+            {
+                msg.append(D.getClericTriggerDesc()+"\n\r");
+                msg.append(D.getWorshipTriggerDesc()+"\n\r");
+            }
+            else
+            if(mob.charStats().getCurrentClass().baseClass().equals("Cleric"))
+                msg.append(D.getClericTriggerDesc()+"\n\r");
+            else
+                msg.append(D.getWorshipTriggerDesc()+"\n\r");
+		}
+        if((mob==null)||CMSecurity.isASysOp(mob)||mob.charStats().getCurrentClass().baseClass().equals("Cleric"))
+        {
+			if(D.numPowers()>0)
+			{
+				msg.append("\n\r^HGranted Powers: ^N");
+				for(int b=0;b<D.numPowers();b++)
+				{
+					msg.append(D.fetchPower(b).name());
+					if(b<D.numPowers()-1)
+						msg.append(", ");
+				}
+				msg.append("\n\r^HPowers Instructions: ^N");
+				msg.append(D.getClericPowerupDesc()+"\n\r");
+			}
+			msg.append("\n\r^HService Instructions: ^N");
+            msg.append(D.getServiceTriggerDesc()+"\n\r");
+        }
+        return msg.toString();
+	}
+	
 	public boolean execute(MOB mob, Vector commands, int metaFlags)
 		throws java.io.IOException
 	{
+		if((commands.size()>1)&&(commands.elementAt(1) instanceof Deity))
+		{
+			Deity D=(Deity)commands.elementAt(1);
+			commands.clear();
+			commands.addElement(this.getDeityInformation(mob, D));
+		}
+		
 		String str=CMParms.combine(commands,1).toUpperCase();
 		StringBuffer msg=new StringBuffer("");
 		if(str.length()==0)
@@ -51,59 +117,7 @@
 		{
 			Deity D=(Deity)d.nextElement();
 			if((str.length()>0)&&(CMLib.english().containsString(D.name(),str)))
-			{
-				msg.append("\n\r^x"+D.name()+"^.^?\n\r");
-				msg.append(D.description()+"\n\r");
-                if((mob==null)||(CMSecurity.isASysOp(mob)))
-                {
-                    msg.append(D.getClericRequirementsDesc()+"\n\r");
-                    msg.append(D.getWorshipRequirementsDesc()+"\n\r");
-                }
-                else
-                if(mob.charStats().getCurrentClass().baseClass().equals("Cleric"))
-    				msg.append(D.getClericRequirementsDesc()+"\n\r");
-                else
-                    msg.append(D.getWorshipRequirementsDesc()+"\n\r");
-				if(D.numBlessings()>0)
-				{
-					msg.append("\n\rBlessings: ");
-					for(int b=0;b<D.numBlessings();b++)
-					{
-						msg.append(D.fetchBlessing(b).name());
-                        if(D.fetchBlessingCleric(b))
-                            msg.append(" (Clerics only)");
-						if(b<D.numBlessings()-1)
-							msg.append(", ");
-					}
-					msg.append("\n\r");
-                    if((mob==null)||(CMSecurity.isASysOp(mob)))
-                    {
-                        msg.append(D.getClericTriggerDesc()+"\n\r");
-                        msg.append(D.getWorshipTriggerDesc()+"\n\r");
-                    }
-                    else
-                    if(mob.charStats().getCurrentClass().baseClass().equals("Cleric"))
-                        msg.append(D.getClericTriggerDesc()+"\n\r");
-                    else
-                        msg.append(D.getWorshipTriggerDesc()+"\n\r");
-				}
-                if((mob==null)||CMSecurity.isASysOp(mob)||mob.charStats().getCurrentClass().baseClass().equals("Cleric"))
-                {
-    				if(D.numPowers()>0)
-    				{
-    					msg.append("\n\rGranted Powers: ");
-    					for(int b=0;b<D.numPowers();b++)
-    					{
-    						msg.append(D.fetchPower(b).name());
-    						if(b<D.numPowers()-1)
-    							msg.append(", ");
-    					}
-    					msg.append("\n\r");
-    					msg.append(D.getClericPowerupDesc()+"\n\r");
-    				}
-                    msg.append(D.getServiceTriggerDesc()+"\n\r");
-                }
-			}
+				msg.append(this.getDeityInformation(mob, D));
 			else
 			if(str.length()==0)
 			{
Index: planet_ink/coffee_mud/Commands/Shell.java
===================================================================
--- planet_ink/coffee_mud/Commands/Shell.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Shell.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,7 +45,7 @@
             {">","COPY","CP"},
             {".","CHANGEDIRECTORY","CD","GO"},
             {"-","DELETE","RM","RD"},
-            {"\\","TYPE","TP"},
+            {"\\","TYPE","CAT","TP"},
             {"+","MAKEDIRECTORY","MKDIR","MD"},
             {"*","FINDFILE","FF"},
             {"&","SEARCHTEXT","GREP","ST"},
Index: planet_ink/coffee_mud/Commands/List.java
===================================================================
--- planet_ink/coffee_mud/Commands/List.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/List.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -1548,6 +1548,11 @@
                     i++;
                     end=CMath.s_int(s);
                 }
+                else
+                {
+                	mob.tell("Bad "+s+" parameter format after.");
+                	return;
+                }
             }
             else
             if((s.equalsIgnoreCase("back")||(s.equalsIgnoreCase("last"))||(s.equalsIgnoreCase("tail")))
@@ -1559,6 +1564,11 @@
                     i++;
                     start=(end-CMath.s_int(s))-1;
                 }
+                else
+                {
+                	mob.tell("Bad "+s+" parameter format after.");
+                	return;
+                }
             }
             else
             if(s.equalsIgnoreCase("skip")
@@ -1570,6 +1580,11 @@
                     i++;
                     start=start+CMath.s_int(s);
                 }
+                else
+                {
+                	mob.tell("Bad "+s+" parameter format after.");
+                	return;
+                }
             }
         }
         if(end>=logSize) end=logSize;
Index: planet_ink/coffee_mud/Commands/Transfer.java
===================================================================
--- planet_ink/coffee_mud/Commands/Transfer.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Transfer.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -165,7 +165,7 @@
 		if(cmd.toString().equalsIgnoreCase("here")||cmd.toString().equalsIgnoreCase("."))
 			room=mob.location();
 		else
-			room=CMLib.map().findWorldRoomLiberally(mob,cmd.toString(),"RIPME",100);
+			room=CMLib.map().findWorldRoomLiberally(mob,cmd.toString(),"RIPME",100,120);
 
 		if(room==null)
 		{
Index: planet_ink/coffee_mud/Commands/Stat.java
===================================================================
--- planet_ink/coffee_mud/Commands/Stat.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Stat.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -433,13 +433,17 @@
 		if(ableTypes==-4)
 		{
 			str.append("Quests won:");
+			StringBuffer won=new StringBuffer("");
 			for(int q=0;q<CMLib.quests().numQuests();q++)
 			{
 				Quest Q=CMLib.quests().fetchQuest(q);
 				if(Q.wasWinner(target.Name()))
-					str.append(" "+Q.name()+",");
+					won.append(" "+Q.name()+",");
 			}
-			str.deleteCharAt(str.length()-1);
+			if(won.length()==0)
+				won.append(" None!");
+			won.deleteCharAt(won.length()-1);
+			str.append(won);
 			str.append("\n\r");
 		}
         else
@@ -478,59 +482,59 @@
 			M.setBaseState((CharState)target.baseState().copyOf());
 			recoverMOB(target);
 			recoverMOB(M);
-			int base=M.adjustedAttackBonus(null);
+			int base=CMLib.combat().adjustedAttackBonus(M,null);
 			str.append("^c"+CMStrings.padRight("Base Attack",40)+": ^W"+base+"\n\r");
 			for(int i=0;i<target.inventorySize();i++)
 			{
 				Item I=target.fetchInventory(i);
-				if(I!=null){ recoverMOB(M); testMOB(target,M,I); int diff=M.adjustedAttackBonus(null)-base; reportOnDiffMOB(I,diff,str);}
+				if(I!=null){ recoverMOB(M); testMOB(target,M,I); int diff=CMLib.combat().adjustedAttackBonus(M,null)-base; reportOnDiffMOB(I,diff,str);}
 			}
 			recoverMOB(M);
 			for(int i=0;i<target.numAllEffects();i++)
 			{
 				Ability A=target.fetchEffect(i);
-				if(A!=null){ recoverMOB(M); testMOB(target,M,A); int diff=M.adjustedAttackBonus(null)-base; reportOnDiffMOB(A,diff,str);}
+				if(A!=null){ recoverMOB(M); testMOB(target,M,A); int diff=CMLib.combat().adjustedAttackBonus(M,null)-base; reportOnDiffMOB(A,diff,str);}
 			}
 			recoverMOB(target);
 			recoverMOB(M);
 			str.append("^W-------------------------\n\r");
-			str.append("^C"+CMStrings.padRight("Total",40)+": ^W"+target.adjustedAttackBonus(null)+"\n\r");
+			str.append("^C"+CMStrings.padRight("Total",40)+": ^W"+CMLib.combat().adjustedAttackBonus(target,null)+"\n\r");
 			str.append("\n\r");
-			base=M.adjustedArmor();
+			base=CMLib.combat().adjustedArmor(M);
 			str.append("^C"+CMStrings.padRight("Base Armor",40)+": ^W"+base+"\n\r");
 			for(int i=0;i<target.inventorySize();i++)
 			{
 				Item I=target.fetchInventory(i);
-				if(I!=null){ recoverMOB(M); testMOB(target,M,I); int diff=M.adjustedArmor()-base; reportOnDiffMOB(I,diff,str);}
+				if(I!=null){ recoverMOB(M); testMOB(target,M,I); int diff=CMLib.combat().adjustedArmor(M)-base; reportOnDiffMOB(I,diff,str);}
 			}
 			recoverMOB(M);
 			for(int i=0;i<target.numAllEffects();i++)
 			{
 				Ability A=target.fetchEffect(i);
-				if(A!=null){ recoverMOB(M); testMOB(target,M,A); int diff=M.adjustedArmor()-base; reportOnDiffMOB(A,diff,str);}
+				if(A!=null){ recoverMOB(M); testMOB(target,M,A); int diff=CMLib.combat().adjustedArmor(M)-base; reportOnDiffMOB(A,diff,str);}
 			}
 			recoverMOB(target);
 			recoverMOB(M);
 			str.append("^W-------------------------\n\r");
-			str.append("^C"+CMStrings.padRight("Total",40)+": ^W"+target.adjustedArmor()+"\n\r");
+			str.append("^C"+CMStrings.padRight("Total",40)+": ^W"+CMLib.combat().adjustedArmor(target)+"\n\r");
 			str.append("\n\r");
-			base=M.adjustedDamage(null,null);
+			base=CMLib.combat().adjustedDamage(M,null,null);
 			str.append("^C"+CMStrings.padRight("Base Damage",40)+": ^W"+base+"\n\r");
 			for(int i=0;i<target.inventorySize();i++)
 			{
 				Item I=target.fetchInventory(i);
-				if(I!=null){ recoverMOB(M); testMOB(target,M,I); int diff=M.adjustedDamage(null,null)-base; reportOnDiffMOB(I,diff,str);}
+				if(I!=null){ recoverMOB(M); testMOB(target,M,I); int diff=CMLib.combat().adjustedDamage(M,null,null)-base; reportOnDiffMOB(I,diff,str);}
 			}
 			recoverMOB(M);
 			for(int i=0;i<target.numAllEffects();i++)
 			{
 				Ability A=target.fetchEffect(i);
-				if(A!=null){ recoverMOB(M); testMOB(target,M,A); int diff=M.adjustedDamage(null,null)-base; reportOnDiffMOB(A,diff,str);}
+				if(A!=null){ recoverMOB(M); testMOB(target,M,A); int diff=CMLib.combat().adjustedDamage(M,null,null)-base; reportOnDiffMOB(A,diff,str);}
 			}
 			recoverMOB(target);
 			recoverMOB(M);
 			str.append("^W-------------------------\n\r");
-			str.append("^C"+CMStrings.padRight("Total",40)+": ^W"+target.adjustedDamage(null,null)+"\n\r");
+			str.append("^C"+CMStrings.padRight("Total",40)+": ^W"+CMLib.combat().adjustedDamage(target,null,null)+"\n\r");
 			str.append("\n\r");
 			base=(int)Math.round(M.envStats().speed()*100);
 			str.append("^C"+CMStrings.padRight("Base Attacks%",40)+": ^W"+base+"\n\r");
Index: planet_ink/coffee_mud/Commands/GConsider.java
===================================================================
--- planet_ink/coffee_mud/Commands/GConsider.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/GConsider.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -44,9 +44,9 @@
 	    MOB mob2=(MOB)mobs.iterator().next();
         if(mob2.amFollowing()!=null) mob2=mob2.amUltimatelyFollowing();
 
-		int mob2Armor=mob2.adjustedArmor();
-		int mob1Armor=mob1.adjustedArmor();
-        double mob1Attack=(double)mob1.adjustedAttackBonus(mob2);
+		int mob2Armor=CMLib.combat().adjustedArmor(mob2);
+		int mob1Armor=CMLib.combat().adjustedArmor(mob1);
+        double mob1Attack=(double)CMLib.combat().adjustedAttackBonus(mob1,mob2);
 		int mob1Dmg=mob1.envStats().damage();
 		int mob2Hp=mob2.baseState().getHitPoints();
 		int mob1Hp=mob1.baseState().getHitPoints();
@@ -55,7 +55,7 @@
 		for(Iterator i=mobs.iterator();i.hasNext();)
 		{
 		    MOB mob=(MOB)i.next();
-            double mob2Attack=(double)mob.adjustedAttackBonus(mob1);
+            double mob2Attack=(double)CMLib.combat().adjustedAttackBonus(mob,mob1);
 			int mob2Dmg=mob.envStats().damage();
 			mob2HitRound+=(((CMath.div(CMLib.dice().normalizeBy5((int)Math.round(50.0*mob2Attack/mob1Armor)),100.0))*CMath.div(mob2Dmg,2.0))+1.0)*CMath.mul(mob.envStats().speed(),1.0);
 		}
Index: planet_ink/coffee_mud/Commands/Ver.java
===================================================================
--- planet_ink/coffee_mud/Commands/Ver.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/Ver.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -41,7 +41,7 @@
 		throws java.io.IOException
 	{
 		mob.tell("CoffeeMud v"+CMProps.getVar(CMProps.SYSTEM_MUDVER));
-		mob.tell("(C) 2000-2008 Bo Zimmerman");
+		mob.tell("(C) 2000-2009 Bo Zimmerman");
 		mob.tell("^<A HREF=\"mailto:bo@zimmers.net\"^>bo@zimmers.net^</A^>");
 		mob.tell("^<A HREF=\"http://www.coffeemud.org\"^>http://www.coffeemud.org^</A^>");
 		return false;
Index: planet_ink/coffee_mud/Commands/GModify.java
===================================================================
--- planet_ink/coffee_mud/Commands/GModify.java	(revision 2354)
+++ planet_ink/coffee_mud/Commands/GModify.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.regex.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -288,6 +288,8 @@
                 ((MOB)E).recoverMaxState();
             }
             E.text();
+        	if(CMLib.flags().isCataloged(E))
+        		CMLib.catalog().updateCatalog(E);
         }
         return didAnything;
     }
Index: planet_ink/coffee_mud/Locales/StdRoom.java
===================================================================
--- planet_ink/coffee_mud/Locales/StdRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Locales/StdRoom.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -1267,7 +1267,7 @@
 
 	public void showHappens(int allCode, String allMessage)
 	{
-		MOB everywhereMOB=CMLib.map().god(this);
+		MOB everywhereMOB=CMLib.map().mobCreated(this);
 		CMMsg msg=CMClass.getMsg(everywhereMOB,null,null,allCode,allCode,allCode,allMessage);
 		sendOthers(everywhereMOB,msg);
         everywhereMOB.destroy();
Index: planet_ink/coffee_mud/Locales/IndoorShallowWater.java
===================================================================
--- planet_ink/coffee_mud/Locales/IndoorShallowWater.java	(revision 2354)
+++ planet_ink/coffee_mud/Locales/IndoorShallowWater.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Locales/RoadGrid.java
===================================================================
--- planet_ink/coffee_mud/Locales/RoadGrid.java	(revision 2354)
+++ planet_ink/coffee_mud/Locales/RoadGrid.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Locales/Woods.java
===================================================================
--- planet_ink/coffee_mud/Locales/Woods.java	(revision 2354)
+++ planet_ink/coffee_mud/Locales/Woods.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Locales/DesertGrid.java
===================================================================
--- planet_ink/coffee_mud/Locales/DesertGrid.java	(revision 2354)
+++ planet_ink/coffee_mud/Locales/DesertGrid.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Locales/IceRoom.java
===================================================================
--- planet_ink/coffee_mud/Locales/IceRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Locales/IceRoom.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BaseCharClassName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BaseCharClassName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BaseCharClassName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/HTTPstatusInfo.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HTTPstatusInfo.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HTTPstatusInfo.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CrossBaseClassAbilities.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CrossBaseClassAbilities.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CrossBaseClassAbilities.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/MudInfo.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/MudInfo.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/MudInfo.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CrossClassAbilities.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CrossClassAbilities.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CrossClassAbilities.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/LevelNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/LevelNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/LevelNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ClanData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ClanData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ClanData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ChannelNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ChannelNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ChannelNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/DeityData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/DeityData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/DeityData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/JournalNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/JournalNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/JournalNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FileData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FileData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FileData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RaceName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RaceName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RaceName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RequestParameterEncoded.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RequestParameterEncoded.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RequestParameterEncoded.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FactionData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FactionData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FactionData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FileMgr.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FileMgr.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FileMgr.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PlayerList.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerList.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerList.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BehaviorData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BehaviorData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BehaviorData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RequestParameter.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RequestParameter.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RequestParameter.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AddRandomFile.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AddRandomFile.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AddRandomFile.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/DeityID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/DeityID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/DeityID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CharClassData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CharClassData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CharClassData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -835,7 +835,7 @@
 							str.append(CMStrings.capitalizeAndLower(CharStats.STAT_DESCS[i])+" ("+(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)+C.maxStatAdjustments()[i])+"), ");
 				if(parms.containsKey("PRACS"))
 				{
-					str.append(C.getPracsFirstLevel()+" plus (Wisdom/4)");
+					str.append(C.getPracsFirstLevel()+" plus (Wisdom/6)");
 					if(C.getBonusPracLevel()>0)
 						str.append("+"+C.getBonusPracLevel());
 					else
@@ -891,11 +891,11 @@
 				}
 
 				if(parms.containsKey("HITPOINTS"))
-					str.append("20 at first, plus (Constitution/"+C.getHPDivisor()+")+"+C.getHPDice()+"d"+C.getHPDie()+" per level thereafter, ");
+					str.append(CMProps.getIntVar(CMProps.SYSTEMI_STARTHP)+" at first, plus (Constitution/"+C.getHPDivisor()+")+"+C.getHPDice()+"d"+C.getHPDie()+" per level thereafter, ");
 				if(parms.containsKey("MANA"))
-					str.append("100 plus (Intelligence/"+C.getManaDivisor()+")+"+C.getManaDice()+"d"+C.getManaDie()+" per level after first, ");
+					str.append(CMProps.getIntVar(CMProps.SYSTEMI_STARTMANA)+" plus (Intelligence/"+C.getManaDivisor()+")+"+C.getManaDice()+"d"+C.getManaDie()+" per level after first, ");
 				if(parms.containsKey("MOVEMENT"))
-					str.append("100 plus ((Strength/18)*"+C.getMovementMultiplier()+") per level after first, ");
+					str.append(CMProps.getIntVar(CMProps.SYSTEMI_STARTMOVE)+" plus ((Strength/18)*"+C.getMovementMultiplier()+") per level after first, ");
 
 				if(parms.containsKey("AVGHITPOINTS"))
 				{
@@ -927,7 +927,7 @@
 					str.append(preReqName+", ");
 				if(parms.containsKey("ATTACK"))
 				{
-					str.append("("+preReqName+"/6)");
+					str.append("("+preReqName+"/18)");
 					if(C.getBonusAttackLevel()>0)
 						str.append("+"+C.getBonusAttackLevel());
 					else
Index: planet_ink/coffee_mud/WebMacros/AbilityName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/SocialData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/SocialData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/SocialData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AutoTitleData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AutoTitleData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AutoTitleData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/WebServerName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/WebServerName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/WebServerName.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RoomData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RoomData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RoomData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -95,6 +95,7 @@
 
 	public static Item getItemFromCode(MOB M, String code)
 	{
+        if(M==null) return getItemFromCode(items,code);
 		for(int i=0;i<M.inventorySize();i++)
 			if(getItemCode(M,M.fetchInventory(i)).equals(code))
 				return M.fetchInventory(i);
@@ -120,6 +121,8 @@
 
 	public static Item getItemFromCode(Vector allitems, String code)
 	{
+        if(code.startsWith("CATALOG-"))
+            return getItemFromCatalog(code);
 		for(int i=0;i<allitems.size();i++)
 			if(getItemCode(allitems,(Item)allitems.elementAt(i)).equals(code))
 				return (Item)allitems.elementAt(i);
@@ -145,6 +148,8 @@
 
 	public static MOB getMOBFromCode(Vector allmobs, String code)
 	{
+        if(code.startsWith("CATALOG-"))
+            return getMOBFromCatalog(code);
 		for(int i=0;i<allmobs.size();i++)
 			if(getMOBCode(allmobs,((MOB)allmobs.elementAt(i))).equals(code))
 				return ((MOB)allmobs.elementAt(i));
@@ -608,7 +613,7 @@
 				{
 					ilist=new StringBuffer("");
 					Vector sortMe=new Vector();
-					CMClass.addAllItemClassNames(sortMe,true,true);
+					CMClass.addAllItemClassNames(sortMe,true,true,false);
 					Object[] sorted=(new TreeSet(sortMe)).toArray();
 					for(int i=0;i<sorted.length;i++)
 						ilist.append("<OPTION VALUE=\""+(String)sorted[i]+"\">"+(String)sorted[i]);
Index: planet_ink/coffee_mud/WebMacros/ExpertiseNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ExpertiseNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ExpertiseNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AreaNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AreaNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AreaNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityPlayerNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityPlayerNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityPlayerNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AreaTbl.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AreaTbl.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AreaTbl.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BankChainName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BankChainName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BankChainName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ExpertiseID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ExpertiseID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ExpertiseID.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2006-2008 Bo Zimmerman
+   Copyright 2006-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/JournalInfo.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/JournalInfo.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/JournalInfo.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AutoTitleID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AutoTitleID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AutoTitleID.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/SocialID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/SocialID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/SocialID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityGainReport.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityGainReport.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityGainReport.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CatalogItemNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CatalogItemNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CatalogItemNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/SystemFunction.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/SystemFunction.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/SystemFunction.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BaseCharClassNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BaseCharClassNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BaseCharClassNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RequestParametersEncoded.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RequestParametersEncoded.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RequestParametersEncoded.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PollData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PollData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PollData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RaceNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RaceNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RaceNext.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/WebServerVersion.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/WebServerVersion.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/WebServerVersion.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RebuildReferenceDocs.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RebuildReferenceDocs.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RebuildReferenceDocs.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/MUDServerStatus.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/MUDServerStatus.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/MUDServerStatus.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/QuestMaker.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/QuestMaker.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/QuestMaker.java	(revision 2574)
@@ -15,7 +15,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/HTTPstatus.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HTTPstatus.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HTTPstatus.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PollID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PollID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PollID.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FactionName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FactionName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FactionName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ClanID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ClanID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ClanID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PlayerNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/QuestNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/QuestNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/QuestNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RaceCatNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RaceCatNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RaceCatNext.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ExitData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ExitData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ExitData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CharClassName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CharClassName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CharClassName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CatalogMobNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CatalogMobNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CatalogMobNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PlayerID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/SocialTbl.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/SocialTbl.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/SocialTbl.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RoomName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RoomName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RoomName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BankChainNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BankChainNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BankChainNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PlayerPortrait.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerPortrait.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerPortrait.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityCursesNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityCursesNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityCursesNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/HolidayData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HolidayData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HolidayData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityDomainNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityDomainNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityDomainNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ChannelBackLogNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ChannelBackLogNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ChannelBackLogNext.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ResourceMgr.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ResourceMgr.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ResourceMgr.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RaceClassNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RaceClassNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RaceClassNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/SystemInfo.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/SystemInfo.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/SystemInfo.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PlayerOnline.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerOnline.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerOnline.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BanListMgr.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BanListMgr.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BanListMgr.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AddRequestParameter.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AddRequestParameter.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AddRequestParameter.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/interfaces/WebMacro.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/interfaces/WebMacro.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/interfaces/WebMacro.java	(revision 2574)
@@ -17,7 +17,7 @@
 import com.planet_ink.coffee_mud.core.exceptions.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/LogViewer.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/LogViewer.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/LogViewer.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/HTTPclientIP.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HTTPclientIP.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HTTPclientIP.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/MobData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/MobData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/MobData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -788,7 +788,7 @@
 					sortMeA.addElement(CMClass.classID(a.nextElement()));
 				for(Enumeration m=CMClass.mobTypes();m.hasMoreElements();)
 					sortMeA.addElement(CMClass.classID(m.nextElement()));
-				CMClass.addAllItemClassNames(sortMeA,true,true);
+				CMClass.addAllItemClassNames(sortMeA,true,true,false);
 				Object[] sortedA=(new TreeSet(sortMeA)).toArray();
 				for(int r=0;r<sortedA.length;r++)
 				{
@@ -916,7 +916,7 @@
 			{
 				mposs=new StringBuffer("");
 				Vector sortMe=new Vector();
-				CMClass.addAllItemClassNames(sortMe,true,true);
+				CMClass.addAllItemClassNames(sortMe,true,true,false);
 				Object[] sorted=(new TreeSet(sortMe)).toArray();
 				for(int i=0;i<sorted.length;i++)
 					mposs.append("<OPTION VALUE=\""+(String)sorted[i]+"\">"+(String)sorted[i]);
Index: planet_ink/coffee_mud/WebMacros/HelpTopics.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HelpTopics.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HelpTopics.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ClanNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ClanNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ClanNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/INIValue.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/INIValue.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/INIValue.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/DeityNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/DeityNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/DeityNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FileNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FileNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FileNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -55,12 +55,12 @@
 		if((directory.canRead())&&(directory.isDirectory()))
 		{
             httpReq.addRequestParameters("PATH",directory.getVFSPathAndName());
-			String[] list=directory.list();
-			for(int l=0;l<list.length;l++)
-				if(list[l].trim().length()>0)
-					fileList.addElement(list[l]);
+            CMFile[] dirs=CMFile.getFileList(path,"",M,false,true);
+            for(int d=0;d<dirs.length;d++)
+				fileList.addElement(dirs[d].getName());
 			
 		}
+		CMParms.sortVector(fileList);
 		String lastID="";
 		for(int q=0;q<fileList.size();q++)
 		{
Index: planet_ink/coffee_mud/WebMacros/PlayerDelete.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerDelete.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerDelete.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FactionNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FactionNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FactionNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/MUDServerVersion.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/MUDServerVersion.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/MUDServerVersion.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityRaceNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityRaceNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityRaceNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BehaviorNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BehaviorNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BehaviorNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ClassRaceNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ClassRaceNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ClassRaceNext.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/NumPlayers.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/NumPlayers.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/NumPlayers.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ControlPanel.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ControlPanel.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ControlPanel.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ExpertiseData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ExpertiseData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ExpertiseData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ChkReqParmBreak.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ChkReqParmBreak.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ChkReqParmBreak.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AreaData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AreaData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AreaData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -76,6 +76,7 @@
 				}
 			}
 			str.append("<TABLE WIDTH=100% BORDER=\""+borderSize+"\" CELLSPACING=0 CELLPADDING=0>");
+			HashSet<String> alreadyHave=new HashSet<String>();
 			for(int i=0;i<theclasses.size();i++)
 			{
 				String theclass=(String)theclasses.elementAt(i);
@@ -88,6 +89,7 @@
 				str.append("</TD><TD WIDTH=50%>");
 				str.append("<INPUT TYPE=TEXT SIZE=30 NAME=BDATA"+(i+1)+" VALUE=\""+theparm+"\">");
 				str.append("</TD></TR>");
+				alreadyHave.add(theclass.toLowerCase());
 			}
 			str.append("<TR><TD WIDTH=50%>");
 			str.append("<SELECT ONCHANGE=\"AddBehavior(this);\" NAME=BEHAV"+(theclasses.size()+1)+">");
@@ -103,10 +105,11 @@
 			}
 			sortedB=(new TreeSet(sortMeB)).toArray();
 			for(int r=0;r<sortedB.length;r++)
-			{
-				String cnam=(String)sortedB[r];
-				str.append("<OPTION VALUE=\""+cnam+"\">"+cnam);
-			}
+				if(!alreadyHave.contains(((String)sortedB[r]).toLowerCase()))
+				{
+					String cnam=(String)sortedB[r];
+					str.append("<OPTION VALUE=\""+cnam+"\">"+cnam);
+				}
 			str.append("</SELECT>");
 			str.append("</TD><TD WIDTH=50%>");
 			str.append("<INPUT TYPE=TEXT SIZE=30 NAME=BDATA"+(theclasses.size()+1)+" VALUE=\"\">");
@@ -149,9 +152,11 @@
 				}
 			}
 			str.append("<TABLE WIDTH=100% BORDER=\""+borderSize+"\" CELLSPACING=0 CELLPADDING=0>");
+			HashSet<String> alreadyHave=new HashSet<String>();
 			for(int i=0;i<theclasses.size();i++)
 			{
 				String theclass=(String)theclasses.elementAt(i);
+				alreadyHave.add(theclass.toLowerCase());
 				String theparm=(String)theparms.elementAt(i);
 				str.append("<TR><TD WIDTH=50%>");
 				str.append("<SELECT ONCHANGE=\"EditAffect(this);\" NAME=AFFECT"+(i+1)+">");
@@ -168,9 +173,9 @@
 			for(Enumeration a=CMClass.abilities();a.hasMoreElements();)
 			{
 				Ability A=(Ability)a.nextElement();
-				if(!A.canAffect(E)) continue;
-				String cnam=A.ID();
-				str.append("<OPTION VALUE=\""+cnam+"\">"+cnam);
+				if((!A.canAffect(E))||(alreadyHave.contains(A.ID().toLowerCase())))
+					continue;
+				str.append("<OPTION VALUE=\""+A.ID()+"\">"+A.ID());
 			}
 			str.append("</SELECT>");
 			str.append("</TD><TD WIDTH=50%>");
Index: planet_ink/coffee_mud/WebMacros/CharClassNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CharClassNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CharClassNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BankAccountInfo.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BankAccountInfo.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BankAccountInfo.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/QuestMgr.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/QuestMgr.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/QuestMgr.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/SocialNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/SocialNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/SocialNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/WebServerPort.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/WebServerPort.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/WebServerPort.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AutoTitleNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AutoTitleNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AutoTitleNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ThinPlayerData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ThinPlayerData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ThinPlayerData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RoomNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RoomNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RoomNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AddRandomFileFromDir.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AddRandomFileFromDir.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AddRandomFileFromDir.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/Authenticate.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/Authenticate.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/Authenticate.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/JournalMessageNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/JournalMessageNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/JournalMessageNext.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -78,13 +78,18 @@
         String srch=httpReq.getRequestParameter("JOURNALMESSAGESEARCH");
         if(srch!=null) srch=srch.toLowerCase();
 		String last=httpReq.getRequestParameter("JOURNALMESSAGE");
+		int cardinal=CMath.s_int(httpReq.getRequestParameter("JOURNALCARDINAL"));
 		if(parms.containsKey("RESET"))
 		{	
-			if(last!=null) httpReq.removeRequestParameter("JOURNALMESSAGE");
+			if(last!=null){
+				httpReq.removeRequestParameter("JOURNALMESSAGE");
+				httpReq.removeRequestParameter("JOURNALCARDINAL");
+			}
 			return "";
 		}
         MOB M=CMLib.players().getLoadPlayer(Authenticate.getLogin(httpReq));
         boolean priviledged=CMSecurity.isAllowedAnywhere(M,"JOURNALS")&&(!parms.contains("NOPRIV"));
+        cardinal++;
         while(true)
         {
             if(last==null) 
@@ -119,11 +124,12 @@
             if(to.equalsIgnoreCase("all")
             ||((M!=null)
                 &&(priviledged
-                        ||to.equalsIgnoreCase(M.Name())
-                        ||(to.toUpperCase().trim().startsWith("MASK=")&&(CMLib.masking().maskCheck(to.trim().substring(5),M,true))))))
+                    ||to.equalsIgnoreCase(M.Name())
+                    ||(to.toUpperCase().trim().startsWith("MASK=")&&(CMLib.masking().maskCheck(to.trim().substring(5),M,true))))))
                 break;
         }
 		
+		httpReq.addRequestParameters("JOURNALCARDINAL",""+cardinal);
 		httpReq.addRequestParameters("JOURNALMESSAGE",last);
 		return "";
 	}
Index: planet_ink/coffee_mud/WebMacros/RoomID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RoomID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RoomID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AreaXML.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AreaXML.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AreaXML.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FileInfo.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FileInfo.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FileInfo.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/StatRejuvCharts.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/StatRejuvCharts.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/StatRejuvCharts.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RaceData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RaceData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RaceData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -318,7 +318,7 @@
         if(one)
         {
             Vector sortMe=new Vector();
-            CMClass.addAllItemClassNames(sortMe,true,true);
+            CMClass.addAllItemClassNames(sortMe,true,true,false);
             Object[] sorted=(new TreeSet(sortMe)).toArray();
             for(int i=0;i<sorted.length;i++)
             {
@@ -336,7 +336,7 @@
             {
                 mposs=new StringBuffer("");
                 Vector sortMe=new Vector();
-                CMClass.addAllItemClassNames(sortMe,true,true);
+                CMClass.addAllItemClassNames(sortMe,true,true,false);
                 Object[] sorted=(new TreeSet(sortMe)).toArray();
                 for(int i=0;i<sorted.length;i++)
                     mposs.append("<OPTION VALUE=\""+(String)sorted[i]+"\">"+(String)sorted[i]);
Index: planet_ink/coffee_mud/WebMacros/PollNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PollNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PollNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityAffectNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityAffectNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityAffectNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/HolidayID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HolidayID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HolidayID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderFlatMap.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderFlatMap.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderFlatMap.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderAreas.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderAreas.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderAreas.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderExits.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderExits.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderExits.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderClasses.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderClasses.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderClasses.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderRaces.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderRaces.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderRaces.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderRooms.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderRooms.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderRooms.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderClans.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderClans.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderClans.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderMobs.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderMobs.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderMobs.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -323,7 +323,7 @@
     		}
 
 			MOB M=null;
-			if(mobCode.equals("NEW")||mobCode.equals("NEWDEITY")||mobCode.startsWith("CATALOG-")||mobCode.startsWith("NEWCATA-"))
+			if(mobCode.equals("NEW")||mobCode.equals("NEWDEITY")||mobCode.startsWith("NEWCATA-"))
 				M=CMClass.getMOB(newClassID);
 			else
 				M=RoomData.getMOBFromCode(R,mobCode);
@@ -688,7 +688,7 @@
 					String theprice=httpReq.getRequestParameter("SPRIC"+num);
 					while((MATCHING!=null)&&(theparm!=null))
 					{
-						if(CMath.isNumber(MATCHING))
+						if(CMath.isNumber(MATCHING)&&(inventory.size()>0))
 						{
 							Environmental O=(Environmental)inventory.elementAt(CMath.s_int(MATCHING)-1);
 							if(O!=null)
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderAbilities.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderAbilities.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderAbilities.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderFactions.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderFactions.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderFactions.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderRoom.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderRoom.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderHolidays.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderHolidays.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderHolidays.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderMap.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderMap.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderMap.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderDir.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderDir.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderDir.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderPlayers.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderPlayers.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderPlayers.java	(revision 2574)
@@ -21,7 +21,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/grinder/GrinderItems.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/grinder/GrinderItems.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/grinder/GrinderItems.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -561,16 +561,14 @@
                 }
                 else
                 {
+                	if(cataData!=null)
+                	{
+	                    CatalogLibrary.CataData data=CMLib.catalog().getCatalogItemData(I.Name());
+	                    data.build(cataData.data());
+                	}
                 	CMLib.catalog().updateCatalog(I);
 	                Log.infoOut("GrinderItems",whom.Name()+" updated catalog ITEM "+I.Name());
                 }
-                Item I3=CMLib.catalog().getCatalogItem(itemCode.substring(8));
-                if((I3!=null)&&(cataData!=null))
-                {
-                    CatalogLibrary.CataData data=CMLib.catalog().getCatalogItemData(I3.Name());
-                    if((cataData.getRate()>0.0)&&(cataData.getMaskStr()!=null)&&(cataData.getMaskStr().length()>0))
-                        data.build(cataData.data());
-                }
                 copyItem=I;
 			}
 			else
@@ -592,7 +590,8 @@
 				{
 					M.addInventory(I);
 					M.recoverEnvStats();
-					M.text();
+					if(!mobNum.startsWith("CATALOG-"))
+						M.text();
 					if(R!=null) R.recoverRoomStats();
 				}
 			}
@@ -628,7 +627,8 @@
 					M.delInventory(oldI);
 					M.addInventory(I);
 					M.recoverEnvStats();
-					M.text();
+					if(!mobNum.startsWith("CATALOG-"))
+						M.text();
                     if(R!=null) R.recoverRoomStats();
 					for(int i=0;i<M.inventorySize();i++)
 					{
@@ -678,6 +678,11 @@
     				httpReq.addRequestParameters("MOB",RoomData.getMOBCode(R,M));
                 }
 				httpReq.addRequestParameters("ITEM",RoomData.getItemCode(M,I));
+			    if((mobNum.startsWith("CATALOG-"))||(mobNum.startsWith("NEWCATA-")))
+			    {
+			    	CMLib.catalog().updateCatalog(M);
+			    	M.text();
+			    }
 			}
 			if(!copyItem.sameAs(I))
 				Log.sysOut("Grinder",whom.Name()+" modified item "+copyItem.Name()+((M!=null)?" on mob "+M.Name():"")+((R!=null)?" in room "+R.roomID():"")+".");
Index: planet_ink/coffee_mud/WebMacros/CoffeeTableRows.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CoffeeTableRows.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CoffeeTableRows.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/JournalName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/JournalName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/JournalName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityRecipeData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityRecipeData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityRecipeData.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -223,6 +223,9 @@
                         {
                             str.append("<TD>" + sfont);
                             String val = (String)dataRow.elementAt(c,2);
+                            AbilityParameters.AbilityParmEditor editor =
+                                (AbilityParameters.AbilityParmEditor)CMLib.ableParms().getEditors().get((String)dataRow.elementAt(c,1));
+                            val = editor.webTableField(httpReq, parms, val);
                             str.append(CMStrings.limit(val,(int)Math.round(CMath.div(recipeData.columnLengths()[c],36) * 100.0)));
                             str.append(efont + "</TD>");
                         }
Index: planet_ink/coffee_mud/WebMacros/LevelNumber.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/LevelNumber.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/LevelNumber.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/PlayerData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/PlayerData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/PlayerData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -142,9 +142,9 @@
 				break;
 		}
 		case 10: if(M.maxCarry()>(Integer.MAX_VALUE/3)) str.append("NA, "); else str.append(M.maxCarry()+", "); break;
-		case 11: str.append(CMStrings.capitalizeAndLower(CMLib.combat().fightingProwessStr(M.adjustedAttackBonus(null)))+", "); break;
-		case 12: str.append(CMStrings.capitalizeAndLower(CMLib.combat().armorStr((-M.adjustedArmor())+50))+", "); break;
-		case 13: str.append(M.adjustedDamage(null,null)+", "); break;
+		case 11: str.append(CMStrings.capitalizeAndLower(CMLib.combat().fightingProwessStr(M))+", "); break;
+		case 12: str.append(CMStrings.capitalizeAndLower(CMLib.combat().armorStr(M))+", "); break;
+		case 13: str.append(CMLib.combat().adjustedDamage(M,null,null)+", "); break;
 		case 14: str.append(Math.round(CMath.div(M.getAgeHours(),60.0))+", "); break;
 		case 15: str.append(M.getPractices()+", "); break;
 		case 16: str.append(M.getExperience()+", "); break;
Index: planet_ink/coffee_mud/WebMacros/AbilityData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/RaceID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/RaceID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/RaceID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AreaNameEncoded.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AreaNameEncoded.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AreaNameEncoded.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/QuestData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/QuestData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/QuestData.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/MUDGrinder.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/MUDGrinder.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/MUDGrinder.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/FactionID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/FactionID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/FactionID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/TimsItemTable.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/TimsItemTable.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/TimsItemTable.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -44,56 +44,190 @@
 		int min=CMath.s_int((httpReq.getRequestParameter("MIN")));
 		if(min>0)
 			endTime=System.currentTimeMillis()+(1000*60*((long)min));
-		
+		Hashtable parms=parseParms(parm);
 		StringBuffer str=new StringBuffer("<TABLE WIDTH=100% BORDER=1>");
-		str.append("<TR><TD>Name</TD><TD>LVL</TD><TD>TVLV</TD><TD>DIFF</TD><TD>DIFF%</TD><TD>ARM</TD><TD>ATT</TD><TD>DAM</TD><TD>ADJ</TD><TD>CAST</TD><TD>RESIST</TD></TR>");
-		Vector onesDone=new Vector();
-		for(Enumeration a=CMLib.map().sortedAreas();a.hasMoreElements();)
+		if(parms.containsKey("WORLD"))
 		{
-			Area A=(Area)a.nextElement();
-			for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
+			str.append("<TR><TD>Name</TD><TD>LVL</TD><TD>TVLV</TD><TD>DIFF</TD><TD>DIFF%</TD><TD>ARM</TD><TD>ATT</TD><TD>DAM</TD><TD>ADJ</TD><TD>CAST</TD><TD>RESIST</TD></TR>");
+			Vector onesDone=new Vector();
+			for(Enumeration a=CMLib.map().sortedAreas();a.hasMoreElements();)
 			{
-				Room R=(Room)r.nextElement();
-				if((endTime>0)&&(System.currentTimeMillis()>endTime))
-					break;
-				for(int i=0;i<R.numItems();i++)
+				Area A=(Area)a.nextElement();
+				for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
 				{
-					Item I=R.fetchItem(i);
+					Room R=(Room)r.nextElement();
 					if((endTime>0)&&(System.currentTimeMillis()>endTime))
 						break;
-					if(!doneBefore(onesDone,I)) str.append(addRow(I));
-				}
-				if((endTime>0)&&(System.currentTimeMillis()>endTime))
-					break;
-				for(int m=0;m<R.numInhabitants();m++)
-				{
-					if((endTime>0)&&(System.currentTimeMillis()>endTime))
-						break;
-					MOB M=R.fetchInhabitant(m);
-					if(M==null) continue;
-					for(int i=0;i<M.inventorySize();i++)
+					for(int i=0;i<R.numItems();i++)
 					{
-						Item I=M.fetchInventory(i);
+						Item I=R.fetchItem(i);
 						if((endTime>0)&&(System.currentTimeMillis()>endTime))
 							break;
 						if(!doneBefore(onesDone,I)) str.append(addRow(I));
 					}
 					if((endTime>0)&&(System.currentTimeMillis()>endTime))
 						break;
-					if(!(M instanceof ShopKeeper)) continue;
-					ShopKeeper S=(ShopKeeper)M;
-					Vector V2=S.getShop().getStoreInventory();
-					for(int v=0;v<V2.size();v++)
+					for(int m=0;m<R.numInhabitants();m++)
 					{
 						if((endTime>0)&&(System.currentTimeMillis()>endTime))
 							break;
-						if((V2.elementAt(v) instanceof Item)
-						&&(!doneBefore(onesDone,(Item)V2.elementAt(v))))
-							str.append(addRow((Item)V2.elementAt(v)));
+						MOB M=R.fetchInhabitant(m);
+						if(M==null) continue;
+						for(int i=0;i<M.inventorySize();i++)
+						{
+							Item I=M.fetchInventory(i);
+							if((endTime>0)&&(System.currentTimeMillis()>endTime))
+								break;
+							if(!doneBefore(onesDone,I)) str.append(addRow(I));
+						}
+						if((endTime>0)&&(System.currentTimeMillis()>endTime))
+							break;
+						if(!(M instanceof ShopKeeper)) continue;
+						ShopKeeper S=(ShopKeeper)M;
+						Vector V2=S.getShop().getStoreInventory();
+						for(int v=0;v<V2.size();v++)
+						{
+							if((endTime>0)&&(System.currentTimeMillis()>endTime))
+								break;
+							if((V2.elementAt(v) instanceof Item)
+							&&(!doneBefore(onesDone,(Item)V2.elementAt(v))))
+								str.append(addRow((Item)V2.elementAt(v)));
+						}
 					}
 				}
 			}
 		}
+		else
+		if(parms.containsKey("CRAFTED"))
+		{
+			str.append("<TR><TD>Name</TD><TD>LVL</TD><TD>TVLV</TD><TD>DIFF</TD><TD>DIFF%</TD><TD>ARM</TD><TD>ATT</TD><TD>DAM</TD><TD>ADJ</TD><TD>CAST</TD><TD>RESIST</TD></TR>");
+		    Vector V=new Vector();
+		    Vector craftingSkills=new Vector();
+			for(Enumeration e=CMClass.abilities();e.hasMoreElements();)
+			{
+				Ability A=(Ability)e.nextElement();
+				if(A instanceof ItemCraftor)
+					V.addElement(A.copyOf());
+			}
+			while(V.size()>0)
+			{
+				int lowest=Integer.MAX_VALUE;
+				Ability lowestA=null;
+				for(int i=0;i<V.size();i++)
+				{
+				    Ability A=(Ability)V.elementAt(i);
+				    int ii=CMLib.ableMapper().lowestQualifyingLevel(A.ID());
+				    if(ii<lowest)
+				    { 
+				        lowest=ii; 
+				        lowestA=A;
+				    }
+				}
+				if(lowestA==null) 
+				    lowestA=(Ability)V.firstElement();
+				if(lowestA!=null)
+				{
+				    V.removeElement(lowestA);
+				    craftingSkills.addElement(lowestA);
+				}
+				else
+				    break;
+			}
+			ItemCraftor skill;
+			for(int s=0;s<craftingSkills.size();s++)
+			{
+				skill=(ItemCraftor)craftingSkills.elementAt(s);
+				Vector items=new Vector();
+				V=null;
+				Vector V2=new Vector();
+				V=skill.craftAllItemsVectors();
+				if(V!=null)
+				{
+					for(int v=0;v<V.size();v++)
+						V2.addAll((Vector)V.elementAt(v));
+					V=V2;
+				}
+				if(V!=null)
+				for(int v=0;v<V.size();v++)
+					CMParms.addToVector((Vector)V.elementAt(v),items);
+				for(int i=0;i<items.size();i++)
+				{
+					Item I=(Item)items.elementAt(i);
+					if(I instanceof Weapon)
+						str.append(addRow(I));
+					else
+					if(I instanceof Armor)
+						str.append(addRow(I));
+				}
+			}
+		}
+		else
+		if(parms.containsKey("ITEMS"))
+		{
+			int[] materials={RawMaterial.RESOURCE_STEEL,RawMaterial.RESOURCE_IRON,RawMaterial.RESOURCE_OAK,RawMaterial.RESOURCE_LEATHER,RawMaterial.RESOURCE_COTTON};
+			int[] mindexes=new int[materials.length];
+			for(int m=0;m<mindexes.length;m++)
+				for(int i=0;i<RawMaterial.RESOURCE_DATA.length;i++)
+					if(materials[m]==RawMaterial.RESOURCE_DATA[i][0])
+					{ mindexes[m]=i; break;}
+			
+			str.append("<TR><TD>Type</TD><TD>Level</TD>");
+			for(int m=0;m<materials.length;m++)
+				str.append("<TD>"+RawMaterial.RESOURCE_DESCS[mindexes[m]]+"</TD>");
+			str.append("</TR>");
+			//str.append("<TD>Attack</TD>");
+			//str.append("<TD>Damage</TD>");
+			for(int level=1;level<=91;level++)
+			{
+				str.append("<TR><TD>Armor</TD><TD>"+level+"</TD>");
+				for(int m=0;m<materials.length;m++)
+				{
+					int armorBonus=0;
+					for(int pos=0;pos<Item.WORN_CODES.length;pos++)
+					{
+						long wornCode=Item.WORN_CODES[pos];
+						if((wornCode == Item.IN_INVENTORY) 
+						|| (wornCode == Item.WORN_HELD)
+						|| (wornCode == Item.WORN_WIELD)
+						|| (wornCode == Item.WORN_MOUTH)) 
+						 	continue;
+						Armor A=CMClass.getArmor("GenArmor");
+						A.setRawProperLocationBitmap(wornCode);
+						A.setMaterial(RawMaterial.RESOURCE_STEEL);
+						if((CharClass.ARMOR_WEARMASK & wornCode) > 0)
+							A.setMaterial(materials[m]);
+						A.baseEnvStats().setLevel(level);
+						A.baseEnvStats().setWeight(5);
+						A.recoverEnvStats();
+						CMLib.itemBuilder().balanceItemByLevel(A);
+						armorBonus+=A.baseEnvStats().armor();
+					}
+					str.append("<TD>"+armorBonus+"</TD>");
+				}
+				str.append("</TR>");
+			}
+			for(int level=1;level<=91;level++)
+			{
+				str.append("<TR><TD>Weapons</TD><TD>"+level+"</TD>");
+				for(int m=0;m<materials.length;m++)
+				{
+					Weapon W=CMClass.getWeapon("GenWeapon");
+					W.setWeaponClassification(Weapon.CLASS_SWORD);
+					W.setWeaponType(Weapon.TYPE_SLASHING);
+					W.setMaterial(materials[m]);
+					W.setRawProperLocationBitmap(Item.WORN_WIELD|Item.WORN_HELD);
+					W.setRawLogicalAnd(false);
+					W.baseEnvStats().setLevel(level);
+					W.baseEnvStats().setWeight(8);
+					W.recoverEnvStats();
+					CMLib.itemBuilder().balanceItemByLevel(W);
+					str.append("<TD>"+W.baseEnvStats().attackAdjustment()+"/"+W.baseEnvStats().damage()+"</TD>");
+				}
+				str.append("</TR>");
+			}
+		}
+		else
+			str.append("<TR><TD><FONT COLOR=RED>Unknown parms: "+CMParms.toStringList(parms)+".  Try WORLD or ITEMS.</TD></TR>");
         return clearWebMacros(str)+"</TABLE>";
 	}
 	
Index: planet_ink/coffee_mud/WebMacros/CheckReqParm.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CheckReqParm.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CheckReqParm.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AreaName.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AreaName.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AreaName.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/StdWebMacro.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/StdWebMacro.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/StdWebMacro.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/BehaviorID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/BehaviorID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/BehaviorID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/JournalFunction.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/JournalFunction.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/JournalFunction.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -143,7 +143,7 @@
 	                {
 		                String toName=entry.from;
 		                MOB toM=CMLib.players().getLoadPlayer(toName);
-		                if((M==null)||(M.playerStats()==null)||(M.playerStats().getEmail().indexOf("@")<0))
+		                if((toM==null)||(toM.playerStats()==null)||(toM.playerStats().getEmail().indexOf("@")<0))
 							messages.append("Player '"+toName+"' does not exist, or has no email address.<BR>");
 		                else
 		                {
Index: planet_ink/coffee_mud/WebMacros/CharClassID.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CharClassID.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CharClassID.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/MUDServerPort.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/MUDServerPort.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/MUDServerPort.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityBlessingNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityBlessingNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityBlessingNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/INIModify.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/INIModify.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/INIModify.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/ItemData.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/ItemData.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/ItemData.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -61,6 +61,7 @@
       "CURRENCY","DENOM","ISRECIPE","RECIPESKILL","RECIPEDATA",
       "LAYER","SEETHRU","MULTIWEAR","ISCATALOGED","CATARATE",
       "CATALIVE","CATAMASK","BITE"};
+    
     public ItemData()
     {
         super();
@@ -265,7 +266,6 @@
 		{
 			int level=CMath.s_int(httpReq.getRequestParameter("LEVEL"));
 			int material=CMath.s_int(httpReq.getRequestParameter("MATERIALS"));
-			int weight=CMath.s_int(httpReq.getRequestParameter("WEIGHT"));
 			int hands=1;
 			if(httpReq.isRequestParameter("ISTWOHANDED")&&(httpReq.getRequestParameter("ISTWOHANDED").equalsIgnoreCase("on")))
 			   hands=2;
@@ -278,7 +278,6 @@
 				vals=CMLib.itemBuilder().timsItemAdjustments(I,
 															 level,
 															 material,
-															 weight,
 															 hands,
 															 wclass,
 															 reach,
@@ -299,7 +298,6 @@
 				vals=CMLib.itemBuilder().timsItemAdjustments(I,
 															 level,
 															 material,
-															 weight,
 															 hands,
 															 0,
 															 0,
@@ -340,13 +338,13 @@
 				case 1: // classes
 					{
 						if(firstTime) old=CMClass.classID(I);
-						Object[] sorted=(Object[])Resources.getResource("MUDGRINDER-ITEMS2");
+						Object[] sorted=(Object[])Resources.getResource("MUDGRINDER-ITEMS2:"+parms.containsKey("GENERICONLY"));
 						if(sorted==null)
 						{
 							Vector sortMe=new Vector();
-							CMClass.addAllItemClassNames(sortMe,true,false);
+							CMClass.addAllItemClassNames(sortMe,true,false,parms.containsKey("GENERICONLY"));
 							sorted=(new TreeSet(sortMe)).toArray();
-							Resources.submitResource("MUDGRINDER-ITEMS2",sorted);
+							Resources.submitResource("MUDGRINDER-ITEMS2:"+parms.containsKey("GENERICONLY"),sorted);
 						}
                         if(parms.containsKey("CLASSESID"))
                             str.append(old);
@@ -961,7 +959,7 @@
                         if(data!=null)
                             old=""+data.getMaskStr();
                     }
-                    str.append(old+", ");
+                    str.append(htmlOutgoingFilter(old)+", ");
                     break;
                 case 91: // bite
                     if((firstTime)&&(I instanceof Food))
Index: planet_ink/coffee_mud/WebMacros/AddFile.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AddFile.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AddFile.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/HolidayNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/HolidayNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/HolidayNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/CheckAuthCode.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/CheckAuthCode.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/CheckAuthCode.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityPowersNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityPowersNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityPowersNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/WebMacros/AbilityTypeNext.java
===================================================================
--- planet_ink/coffee_mud/WebMacros/AbilityTypeNext.java	(revision 2354)
+++ planet_ink/coffee_mud/WebMacros/AbilityTypeNext.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/DoorwayGuardian.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/DoorwayGuardian.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/DoorwayGuardian.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -36,33 +36,72 @@
 {
 	public String ID(){return "DoorwayGuardian";}
 
+	private boolean nosneak=false;
+	private boolean always=false;
+	private String mask=null;
+	private static final String DEFAULT_MESSAGE="<S-NAME> won't let <T-NAME> through there.";
+	private String message=DEFAULT_MESSAGE;
+	Vector<Integer> dirs=new Vector<Integer>();
 
-
-    public String getWords()
-    {
-        int x=getParms().indexOf(";");
-        if(x<0) return "<S-NAME> won't let <T-NAME> through there.";
-        return getParms().substring(x+1);
-    }
+	public void setParms(String parms)
+	{
+		super.setParms(parms);
+		int x=parms.indexOf(';');
+		if(x>=0)
+		{
+			message=parms.substring(x+1);
+			parms=parms.substring(0,x);
+		}
+		else
+			message=DEFAULT_MESSAGE;
+		Vector V=CMParms.parse(parms);
+		nosneak=false;
+		always=false;
+		mask=null;
+		dirs.clear();
+		for(int v=V.size()-1;v>=0;v--)
+		{
+			String s=(String)V.elementAt(v);
+			if(s.equalsIgnoreCase("NOSNEAK"))
+			{
+				nosneak=true;
+				V.removeElementAt(v);
+			}
+			else
+			if(s.equalsIgnoreCase("ALWAYS"))
+			{
+				always=true;
+				V.removeElementAt(v);
+			}
+			else
+			{
+				int dir=Directions.getGoodDirectionCode(s);
+				if(dir>=0) 
+				{
+					dirs.addElement(Integer.valueOf(dir));
+					V.removeElementAt(v);
+				}
+			}
+		}
+		if(V.size()>0)
+			mask=CMParms.combineWithQuotes(V,0);
+	}
+	
 	public Exit[] getParmExits(MOB monster)
 	{
 		if(monster==null) return null;
 		if(monster.location()==null) return null;
 		if(getParms().length()==0) return null;
 		Room room=monster.location();
-        String parm=getParms();
-        int x=parm.indexOf(";");
-        if(x>0) parm=parm.substring(0,x);
-		Vector V=CMParms.parse(parm);
-		for(int v=0;v<V.size();v++)
+		if(dirs!=null)
+		for(Enumeration<Integer> dirE=dirs.elements();dirE.hasMoreElements();)
 		{
-			int dir=Directions.getGoodDirectionCode((String)V.elementAt(v));
-			if(dir>=0)
-				if(room.getExitInDir(dir)!=null)
-				{
-					Exit[] exits={room.getExitInDir(dir),room.getReverseExit(dir)};
-					return exits;
-				}
+			int dir=dirE.nextElement();
+			if(room.getExitInDir(dir)!=null)
+			{
+				Exit[] exits={room.getExitInDir(dir),room.getReverseExit(dir)};
+				return exits;
+			}
 		}
 		for(int d=Directions.NUM_DIRECTIONS()-1;d>=0;d--)
 		{
@@ -81,13 +120,19 @@
 	{
 		if(!super.okMessage(oking,msg)) return false;
 		MOB mob=msg.source();
-		if(!canFreelyBehaveNormal(oking)) return true;
+		if(always)
+		{
+			if(!canActAtAll(oking)) return true;
+		}
+		else
+		if(!canFreelyBehaveNormal(oking)) 
+			return true;
 		MOB monster=(MOB)oking;
 		if((mob.location()==monster.location())
 		&&(mob!=monster)
 		&&(msg.target()!=null)
 		&&(!BrotherHelper.isBrother(mob,monster,false))
-        &&(CMLib.flags().canSenseMoving(mob,monster)||(getParms().toUpperCase().indexOf("NOSNEAK")>=0)))
+        &&(CMLib.flags().canSenseMoving(mob,monster)||nosneak))
 		{
 			if(msg.target() instanceof Exit)
 			{
@@ -100,9 +145,9 @@
 
 				if((msg.targetMinor()!=CMMsg.TYP_CLOSE)
 				&&(msg.targetMinor()!=CMMsg.TYP_LOCK)
-				&&(CMLib.masking().maskCheck(getParms(),mob,false)))
+				&&((mask==null)||CMLib.masking().maskCheck(mask,mob,false)))
 				{
-					CMMsg msgs=CMClass.getMsg(monster,mob,CMMsg.MSG_NOISYMOVEMENT,getWords());
+					CMMsg msgs=CMClass.getMsg(monster,mob,CMMsg.MSG_NOISYMOVEMENT,message);
 					if(monster.location().okMessage(monster,msgs))
 					{
 						monster.location().send(monster,msgs);
@@ -114,7 +159,7 @@
 			if((msg.tool()!=null)
 			&&(msg.target() instanceof Room)
 			&&(msg.tool() instanceof Exit)
-			&&(CMLib.masking().maskCheck(getParms(),mob,false)))
+			&&((mask==null)||CMLib.masking().maskCheck(mask,mob,false)))
 			{
 				Exit exit=(Exit)msg.tool();
 				Exit texit[]=getParmExits(monster);
@@ -123,7 +168,7 @@
 				&&(texit[1]!=exit))
 					return true;
 
-				CMMsg msgs=CMClass.getMsg(monster,mob,CMMsg.MSG_NOISYMOVEMENT,getWords());
+				CMMsg msgs=CMClass.getMsg(monster,mob,CMMsg.MSG_NOISYMOVEMENT,message);
 				if(monster.location().okMessage(monster,msgs))
 				{
 					monster.location().send(monster,msgs);
Index: planet_ink/coffee_mud/Behaviors/Healer.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Healer.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Healer.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Hireling.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Hireling.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Hireling.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Mageness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Mageness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Mageness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -75,6 +75,7 @@
 		newCharacter(mob);
 		getSomeMoreMageAbilities(mob);
 		//%%%%%att,armor,damage,hp,mana,move
-		setCombatStats(mob,-50,-50,-25,-45,50,-50);
+		if((preCastSet==Integer.MAX_VALUE)||(preCastSet<=0))
+			setCombatStats(mob,-50,-50,-25,-45,50,-50);
 	}
 }
Index: planet_ink/coffee_mud/Behaviors/CommonSpeaker.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/CommonSpeaker.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/CommonSpeaker.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/interfaces/Behavior.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/interfaces/Behavior.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/interfaces/Behavior.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/interfaces/LegalBehavior.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/interfaces/LegalBehavior.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/interfaces/LegalBehavior.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Wimpy.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Wimpy.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Wimpy.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/BrotherHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/BrotherHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/BrotherHelper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/BribeGateGuard.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/BribeGateGuard.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/BribeGateGuard.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Mobile.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Mobile.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Mobile.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/WaterCurrents.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/WaterCurrents.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/WaterCurrents.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -238,6 +238,7 @@
         protected void finalize(){ CMClass.unbumpCounter(this,CMClass.OBJECT_ABILITY); }
     	public long expirationDate(){return 0;}
     	public void setExpirationDate(long time){}
+        public void clearExpertiseCache(){}
 
 		public void setName(String newName){}
 		public void setDescription(String newDescription){}
Index: planet_ink/coffee_mud/Behaviors/RaceHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/RaceHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/RaceHelper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/GoldLooter.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/GoldLooter.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/GoldLooter.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/RandomMonsters.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/RandomMonsters.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/RandomMonsters.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/CorpseEater.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/CorpseEater.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/CorpseEater.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ClanHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ClanHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ClanHelper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/AntiVagrant.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/AntiVagrant.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/AntiVagrant.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ROMGangMember.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ROMGangMember.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ROMGangMember.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/WimpyAggressive.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/WimpyAggressive.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/WimpyAggressive.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/MudChat.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MudChat.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MudChat.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/MobileAggressive.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MobileAggressive.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MobileAggressive.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Beggar.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Beggar.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Beggar.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Thiefness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Thiefness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Thiefness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -48,7 +48,8 @@
 		makeClass(mob,getParmsMinusCombatMode(),"Thief");
 		newCharacter(mob);
 		//%%%%%att,armor,damage,hp,mana,move
-		setCombatStats(mob,0,50,-25,-35,-25,-25);
+		if((preCastSet==Integer.MAX_VALUE)||(preCastSet<=0))
+			setCombatStats(mob,0,50,-25,-35,-25,-25);
 	}
 
 	public boolean tick(Tickable ticking, int tickID)
Index: planet_ink/coffee_mud/Behaviors/Follower.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Follower.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Follower.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/FaithHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/FaithHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/FaithHelper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/PlayerHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/PlayerHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/PlayerHelper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/PuddleMaker.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/PuddleMaker.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/PuddleMaker.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/MOBEater.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MOBEater.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MOBEater.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Mike Rundell
+   Copyright 2000-2009 Mike Rundell
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Aggressive.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Aggressive.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Aggressive.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Arrest.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Arrest.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Arrest.java	(revision 2574)
@@ -22,7 +22,7 @@
 import java.io.ByteArrayOutputStream;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/QuestChat.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/QuestChat.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/QuestChat.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Bardness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Bardness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Bardness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -46,6 +46,7 @@
 		makeClass(mob,getParmsMinusCombatMode(),"Bard");
 		newCharacter(mob);
 		//%%%%%att,armor,damage,hp,mana,move
-		setCombatStats(mob,-25,-25,-25,-40,0,0);
+		if((preCastSet==Integer.MAX_VALUE)||(preCastSet<=0))
+			setCombatStats(mob,-25,-25,-25,-40,0,0);
 	}
 }
Index: planet_ink/coffee_mud/Behaviors/Vagrant.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Vagrant.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Vagrant.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/GoodExecutioner.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/GoodExecutioner.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/GoodExecutioner.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Patroller.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Patroller.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Patroller.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,6 +45,7 @@
 	protected boolean rideOk=false;
 	protected boolean rideOnly=false;
 	protected Vector correction=null;
+	protected Vector cachedSteps=null;
 
 	protected volatile int rideCheckCt = 0;
 	
@@ -63,11 +64,15 @@
 		rideOnly=rideokString.equalsIgnoreCase("only");
 		rideOk=rideOnly||rideokString.equalsIgnoreCase("true");
 		diameter=CMParms.getParmInt(newParms,"diameter",20);
+		cachedSteps = null;
 	}
 
 
 	protected Vector getSteps()
 	{
+		if(cachedSteps != null)
+			return cachedSteps;
+		
 		Vector V=new Vector();
 		String path=getParms().trim();
 		int x=path.indexOf(";");
@@ -96,7 +101,9 @@
 				if(i<(V.size()-1))
 					V.addElement(V.elementAt(i));
 			}
-		return V;
+		V.trimToSize();
+		cachedSteps = V;
+		return cachedSteps;
 	}
 
 	public boolean okMessage(Environmental host, CMMsg msg)
@@ -124,6 +131,7 @@
 	{
 		if(!super.tick(ticking,tickID))
 		    return false;
+		
 		if(canAct(ticking,tickID))
 		{
             Vector riders=null;
Index: planet_ink/coffee_mud/Behaviors/ItemGenerator.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ItemGenerator.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ItemGenerator.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/MOBTeacher.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MOBTeacher.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MOBTeacher.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -345,6 +345,11 @@
 					CMLib.commands().postSay(monster,student,"Try the QUALIFY command.",true,false);
 					return;
 				}
+				if(s.trim().toUpperCase().equals("ALL"))
+				{
+					CMLib.commands().postSay(monster,student,"I can't teach you everything at once. Try the QUALIFY command.",true,false);
+					return;
+				}
 				Ability myAbility=CMClass.findAbility(s.trim().toUpperCase(),monster);
 				if(myAbility==null)
 				{
Index: planet_ink/coffee_mud/Behaviors/QuestTracker.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/QuestTracker.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/QuestTracker.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Scavenger.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Scavenger.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Scavenger.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ActiveTicker.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ActiveTicker.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ActiveTicker.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ResetWhole.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ResetWhole.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ResetWhole.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/RandomItems.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/RandomItems.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/RandomItems.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Nanny.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Nanny.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Nanny.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -295,7 +295,12 @@
         	if(msg.source()!=host)
         	{
 	        	if((host instanceof MOB)&&(msg.source().location()==CMLib.map().roomLocation(host)))
+	        	{
 					CMLib.commands().postSay((MOB)host,msg.source(),"Not in my "+place+" you dont!");
+					MOB victim=msg.source().getVictim();
+					if(victim!=null) victim.makePeace();
+					msg.source().makePeace();
+	        	}
 	        	else
 	        		msg.source().tell("You can't do that here.");
         	}
Index: planet_ink/coffee_mud/Behaviors/MOBReSave.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MOBReSave.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MOBReSave.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/NastyAbilities.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/NastyAbilities.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/NastyAbilities.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/RandomTeleporter.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/RandomTeleporter.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/RandomTeleporter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/GetsAllEquipped.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/GetsAllEquipped.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/GetsAllEquipped.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/AlignHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/AlignHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/AlignHelper.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Clericness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Clericness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Clericness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -47,6 +47,7 @@
 		makeClass(mob,getParmsMinusCombatMode(),"Cleric");
 		newCharacter(mob);
 		//%%%%%att,armor,damage,hp,mana,move
-		setCombatStats(mob,0,0,-25,-30,+25,-50);
+		if((preCastSet==Integer.MAX_VALUE)||(preCastSet<=0))
+			setCombatStats(mob,0,0,-25,-30,+25,-50);
 	}
 }
Index: planet_ink/coffee_mud/Behaviors/WeatherAffects.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/WeatherAffects.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/WeatherAffects.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -230,7 +230,7 @@
                     Ability A2=CMClass.getAbility("Spell_IceSheet");
                     if(A2!=null)
                     {
-                        MOB mob=CMLib.map().god(R);
+                        MOB mob=CMLib.map().mobCreated(R);
                         A2.invoke(mob,R,true,0);
                         mob.destroy();
                     }
@@ -246,7 +246,7 @@
                     Ability A2=CMClass.getAbility("Spell_IceSheet");
                     if(A2!=null)
                     {
-                        MOB mob=CMLib.map().god(R);
+                        MOB mob=CMLib.map().mobCreated(R);
                         A2.invoke(mob,R,true,0);
                         mob.destroy();
                     }
@@ -555,7 +555,7 @@
                         if(A2!=null)
                         {
                             A2.setMiscText("RENDER MUNDANE"); 
-                            MOB mob=CMLib.map().god(R);
+                            MOB mob=CMLib.map().mobCreated(R);
                             A2.invoke(mob,null,true,0);
                             mob.destroy();
                         }
@@ -673,7 +673,7 @@
                 case RawMaterial.MATERIAL_WOODEN:
                 {
                     Ability A2=CMClass.getAbility("Burning");
-                    MOB mob=CMLib.map().god(R);
+                    MOB mob=CMLib.map().mobCreated(R);
                     R.showHappens(CMMsg.MSG_OK_VISUAL,I.Name()+" spontaneously combusts in the seering heat!"+CMProps.msp("fire.wav",40));
                     A2.invoke(mob,I,true,0);
                     mob.destroy();
@@ -709,7 +709,7 @@
                 if(choices.size()>0)
                 {
                     R=(Room)choices.elementAt(CMLib.dice().roll(1,choices.size(),-1));
-                    MOB M=CMLib.map().god(R);
+                    MOB M=CMLib.map().mobCreated(R);
                     Ability A2=CMClass.getAbility("Chant_WindGust");
                     if(A2!=null)
                     {
Index: planet_ink/coffee_mud/Behaviors/FightFlee.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/FightFlee.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/FightFlee.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Concierge.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Concierge.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Concierge.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -201,10 +201,11 @@
 		if(C==null) return "Umm.. I'm stupid.";
 		String name=to.Name();
 		if(to instanceof Room) name=CMLib.map().getExtendedRoomID((Room)to);
-		Vector V=CMParms.makeVector("TRAILTO",name,"JUSTTHEFACTS","QUIETLY");
-		try{C.execute(from,V,0);}catch(Exception e){}
-		if(V.size()>0) return ((String)V.elementAt(0));
-		return "I'm confused.";
+        TrackingLibrary.TrackingFlags flags = new TrackingLibrary.TrackingFlags();
+		Vector<Room> set=new Vector<Room>();
+		int radius=100;
+		CMLib.tracking().getRadiantRooms(from.location(),set,flags,null,radius,null);
+		return CMLib.tracking().getTrailToDescription(from.location(),set,name,false,false,radius,null,1);
 	}
 	
 	public void executeMsg(Environmental affecting, CMMsg msg)
Index: planet_ink/coffee_mud/Behaviors/ItemIdentifier.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ItemIdentifier.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ItemIdentifier.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Guard.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Guard.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Guard.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ProtectedCitizens.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ProtectedCitizens.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ProtectedCitizens.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ItemRefitter.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ItemRefitter.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ItemRefitter.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/TaxCollector.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/TaxCollector.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/TaxCollector.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Drowness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Drowness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Drowness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Lee H. Fox
+   Copyright 2000-2009 Lee H. Fox
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/VeryAggressive.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/VeryAggressive.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/VeryAggressive.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ROMPatrolman.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ROMPatrolman.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ROMPatrolman.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/MOBHelper.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MOBHelper.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MOBHelper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/CorpseLooter.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/CorpseLooter.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/CorpseLooter.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/CombatAssister.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/CombatAssister.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/CombatAssister.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/LinkedWeather.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/LinkedWeather.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/LinkedWeather.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Mime.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Mime.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Mime.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/NoCombatAssist.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/NoCombatAssist.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/NoCombatAssist.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/RandomTraps.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/RandomTraps.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/RandomTraps.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Emoter.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Emoter.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Emoter.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/MobileGoodGuardian.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MobileGoodGuardian.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MobileGoodGuardian.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/PokerDealer.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/PokerDealer.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/PokerDealer.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-    Copyright (c) 2005-2008, Bo Zimmerman
+    Copyright (c) 2005-2009, Bo Zimmerman
     All rights reserved.
 
     Redistribution and use in source and binary forms, with or without modification, are permitted provided that the 
@@ -204,7 +204,7 @@
     {
         if(host instanceof MOB)
             return CMClass.getMsg((MOB)host,target,null,code,message);
-        return CMClass.getMsg(CMLib.map().god(CMLib.map().roomLocation(host)),target,null,code,message);
+        return CMClass.getMsg(CMLib.map().deity(),target,null,code,message);
     }
     
     
Index: planet_ink/coffee_mud/Behaviors/Conquerable.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Conquerable.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Conquerable.java	(revision 2574)
@@ -18,7 +18,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -174,6 +174,12 @@
         noMultiFollows=new Vector();
 	}
 
+	public void startBehavior(Environmental E)
+	{
+		super.startBehavior(E);
+		CMLib.map().addGlobalHandler(this, CMMsg.TYP_CLANEVENT);
+	}
+	
 	public boolean isAnyKindOfOfficer(Law laws, MOB M)
 	{
 		if((M!=null)
@@ -222,6 +228,7 @@
 		if((!CMProps.getBoolVar(CMProps.SYSTEMB_MUDSTARTED))
 		||(CMSecurity.isDisabled("CONQUEST")))
 			return;
+		Clan C=CMLib.clans().getClan(holdingClan);
         String worship=getManadatoryWorshipID();
         prevHoldingClan=holdingClan;
 		for(int v=0;v<clanItems.size();v++)
@@ -284,18 +291,27 @@
 				laws.resetLaw();
 				CMLib.database().DBReCreateData(myArea.Name(),"ARREST",myArea.Name()+"/ARREST",laws.rawLawString());
 			}
-
 		}
-		holdingClan="";
-        conquestDate=0;
         synchronized(clanItems)
         {
             try{
-            for(int c=clanItems.size();c>=0;c--)
-                if(((ClanItem)clanItems.elementAt(c)).ciType()!=ClanItem.CI_FLAG)
-                    deRegisterClanItem((ClanItem)clanItems.elementAt(c));
+	            for(int c=clanItems.size()-1;c>=0;c--)
+	            {
+	            	if((C==null)&&(((ClanItem)clanItems.elementAt(c)).clanID().equalsIgnoreCase(holdingClan)))
+	            	{
+	            		((ClanItem)clanItems.elementAt(c)).destroy();
+	            		clanItems.removeElementAt(c);
+	            	}
+	            	else
+	                if(((ClanItem)clanItems.elementAt(c)).ciType()!=ClanItem.CI_FLAG)
+	                    deRegisterClanItem((ClanItem)clanItems.elementAt(c));
+	            }
             }catch(ArrayIndexOutOfBoundsException x){}
+            if((C==null)&&(clanItems.size()==0)&&(myArea!=null))
+				CMLib.database().DBDeleteData(myArea.name(),"CONQITEMS","CONQITEMS/"+myArea.name());
         }
+		holdingClan="";
+        conquestDate=0;
 	}
 
     public int calcItemControlPoints(Area A)
@@ -794,7 +810,7 @@
 		Clan C=CMLib.clans().findClan(clanID);
 		if(C==null) return;
 
-        MOB mob=CMLib.map().god(null);
+        MOB mob=CMLib.map().mobCreated();
         mob.setName(clanID);
         if(myArea!=null)
             for(Enumeration e=myArea.getMetroMap();e.hasMoreElements();)
@@ -803,7 +819,7 @@
                     Log.errOut("Conquest","Conquest was stopped in "+myArea.name()+" for "+clanID+".");
                     return;
                 }
-        
+        mob.destroy();
         if(CMSecurity.isDebugging("CONQUEST")) 
             Log.debugOut("Conquest","The inhabitants of "+myArea.name()+" are conquered by "+clanID+", vanquishing '"+holdingClan+"'.");
 		if(holdingClan.length()>0)
@@ -890,6 +906,28 @@
 				}
 			}
 		}
+		if((holdingClan.length()>0)&&(holdingClan.equalsIgnoreCase(clanID))&&(myArea!=null))
+		{
+			// make a desperation check if we are talking about the holding clan.
+			Room R=null;
+			Item I=null;
+			for(Enumeration e=myArea.getCompleteMap();e.hasMoreElements();)
+			{
+				R=(Room)e.nextElement();
+				for(int i=0;i<R.numItems();i++)
+				{
+					I=R.fetchItem(i);
+					if((I instanceof ClanItem)
+					&&(((ClanItem)I).ciType()==ClanItem.CI_FLAG)
+					&&(((ClanItem)I).clanID().equals(clanID))
+					&&(!I.amDestroyed()))
+					{
+						registerClanItem(I);
+						return true;
+					}
+				}
+			}
+		}
 		return false;
 	}
 
@@ -1003,6 +1041,16 @@
 		super.executeMsg(myHost,msg);
         
         boolean debugging=CMSecurity.isDebugging("CONQUEST");
+        if((msg.sourceMinor()==CMMsg.TYP_CLANEVENT)
+        &&(msg.sourceMessage().startsWith("-")))
+        {
+        	if((holdingClan!=null)&&(holdingClan.equalsIgnoreCase(msg.sourceMessage().substring(1))))
+        	{
+                if(debugging) Log.debugOut("Conquest",holdingClan+" no longer exists.");
+        		endClanRule();
+        	}
+        }
+        else
 		if((myHost instanceof Area)
 		&&(CMProps.getBoolVar(CMProps.SYSTEMB_MUDSTARTED)
 		&&(!CMSecurity.isDisabled("CONQUEST")))
Index: planet_ink/coffee_mud/Behaviors/Druidness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Druidness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Druidness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -46,6 +46,7 @@
 		makeClass(mob,getParmsMinusCombatMode(),"Druid");
 		newCharacter(mob);
 		//%%%%%att,armor,damage,hp,mana,move
-		setCombatStats(mob,0,-25,-25,0,+25,0);
+		if((preCastSet==Integer.MAX_VALUE)||(preCastSet<=0))
+			setCombatStats(mob,0,-25,-25,0,+25,0);
 	}
 }
Index: planet_ink/coffee_mud/Behaviors/GoodGuardian.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/GoodGuardian.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/GoodGuardian.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/FasterRecovery.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/FasterRecovery.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/FasterRecovery.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/GateGuard.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/GateGuard.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/GateGuard.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/NiceAbilities.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/NiceAbilities.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/NiceAbilities.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/EvilExecutioner.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/EvilExecutioner.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/EvilExecutioner.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/StdBehavior.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/StdBehavior.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/StdBehavior.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -156,6 +156,8 @@
 
 	public boolean tick(Tickable ticking, int tickID)
 	{
+		if((ticking instanceof Environmental) && (((Environmental)ticking).amDestroyed()))
+			return false;
 		return true;
 	}
 
Index: planet_ink/coffee_mud/Behaviors/DelayedTransporter.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/DelayedTransporter.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/DelayedTransporter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/FieryRoom.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/FieryRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/FieryRoom.java	(revision 2574)
@@ -185,7 +185,7 @@
 
     private static void roastRoom(Room which) 
     {
-		MOB mob=CMLib.map().god(which);
+		MOB mob=CMLib.map().mobCreated(which);
 		for(int i=0;i<which.numItems();i++) 
 		{
 		    Item target=which.fetchItem(i);
Index: planet_ink/coffee_mud/Behaviors/MoneyChanger.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/MoneyChanger.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/MoneyChanger.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ProtectedCitizen.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ProtectedCitizen.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ProtectedCitizen.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Sounder.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Sounder.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Sounder.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ObjectGuardian.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ObjectGuardian.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ObjectGuardian.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Fighterness.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Fighterness.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Fighterness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,6 +45,7 @@
 		makeClass(mob,getParmsMinusCombatMode(),"Fighter");
 		newCharacter(mob);
 		//%%%%%att,armor,damage,hp,mana,move
-		setCombatStats(mob,25,25,25,-25,0,15);
+		if((preCastSet==Integer.MAX_VALUE)||(preCastSet<=0))
+			setCombatStats(mob,25,25,25,-25,0,15);
 	}
 }
Index: planet_ink/coffee_mud/Behaviors/Decay.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Decay.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Decay.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/InstantDeath.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/InstantDeath.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/InstantDeath.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/ResourceOverride.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ResourceOverride.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ResourceOverride.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/Scriptable.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/Scriptable.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/Scriptable.java	(revision 2574)
@@ -1,4 +1,5 @@
 package com.planet_ink.coffee_mud.Behaviors;
+import com.planet_ink.coffee_mud.core.exceptions.ScriptParseException;
 import com.planet_ink.coffee_mud.core.interfaces.*;
 import com.planet_ink.coffee_mud.core.*;
 import com.planet_ink.coffee_mud.Abilities.interfaces.*;
@@ -16,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -54,6 +55,8 @@
         engine().registerDefaultQuest(questName);
     }
     
+    public MOB getMakeMOB(Tickable ticking){ return engine().getMakeMOB(ticking);}
+    
     public boolean endQuest(Environmental hostObj, MOB mob, String quest)
     {
         engine().endQuest(hostObj, mob, quest);
@@ -66,7 +69,7 @@
     }
 
     public String getParms() { return engine().getScript();}
-    
+    public String[] parseEval(String evaluable) throws ScriptParseException { return engine().parseEval(evaluable);}
     public void setParms(String newParms)
     {
         engine().setScript(newParms);
Index: planet_ink/coffee_mud/Behaviors/ItemMender.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/ItemMender.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/ItemMender.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Behaviors/CombatAbilities.java
===================================================================
--- planet_ink/coffee_mud/Behaviors/CombatAbilities.java	(revision 2354)
+++ planet_ink/coffee_mud/Behaviors/CombatAbilities.java	(revision 2574)
@@ -1,4 +1,5 @@
 package com.planet_ink.coffee_mud.Behaviors;
+import com.planet_ink.coffee_mud.core.exceptions.CMException;
 import com.planet_ink.coffee_mud.core.interfaces.*;
 import com.planet_ink.coffee_mud.core.*;
 import com.planet_ink.coffee_mud.Abilities.interfaces.*;
@@ -17,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -43,20 +44,25 @@
 	public Vector skillsAlways=null;
 	protected boolean[] wandUseCheck={false,false};
 	protected boolean proficient=false;
-	protected String lastSpell="";
+	protected int preCastSet=Integer.MAX_VALUE;
+	protected int preCastDown=Integer.MAX_VALUE;
+	protected String lastSpell=null;
 	protected StringBuffer record=null;
+	protected int physicalDamageTaken=0;
 
 	public final static int COMBAT_RANDOM=0;
 	public final static int COMBAT_DEFENSIVE=1;
 	public final static int COMBAT_OFFENSIVE=2;
 	public final static int COMBAT_MIXEDOFFENSIVE=3;
 	public final static int COMBAT_MIXEDDEFENSIVE=4;
+	public final static int COMBAT_ONLYALWAYS=5;
 	public final static String[] names={
 		"RANDOM",
 		"DEFENSIVE",
 		"OFFENSIVE",
 		"MIXEDOFFENSIVE",
-		"MIXEDDEFENSIVE"
+		"MIXEDDEFENSIVE",
+		"ONLYALWAYS"
 	};
 
 	protected void makeClass(MOB mob, String theParms, String defaultClassName)
@@ -155,12 +161,12 @@
 			if(A!=null)
 			{
 				String text="";
-				if(attack!=0) text+="ATTACK"+(attack>0?"+":"")+attack;
-				if(armor!=0) text+="ARMOR"+(armor>0?"+":"")+armor;
-				if(damage!=0) text+="DAMAGE"+(damage>0?"+":"")+damage;
-				if(hp!=0) text+="HP"+(hp>0?"+":"")+hp;
-				if(mana!=0) text+="MANA"+(mana>0?"+":"")+mana;
-				if(move!=0) text+="MOVE"+(move>0?"+":"")+move;
+				if(attack!=0) text+=" ATTACK"+(attack>0?"+":"")+attack;
+				if(armor!=0) text+=" ARMOR"+(armor>0?"+":"")+armor;
+				if(damage!=0) text+=" DAMAGE"+(damage>0?"+":"")+damage;
+				if(hp!=0) text+=" HP"+(hp>0?"+":"")+hp;
+				if(mana!=0) text+=" MANA"+(mana>0?"+":"")+mana;
+				if(move!=0) text+=" MOVE"+(move>0?"+":"")+move;
 				if(text.length()>0)
 				{
 					mob.addNonUninvokableEffect(A);
@@ -204,6 +210,10 @@
 			&&(msg.value()>0)
 			&&(msg.source()!=mob))
 			{
+				if(((msg.tool()==null)||(msg.tool() instanceof Item))
+				&&(msg.target()==mob)
+				&&(msg.source()==mob.getVictim()))
+					physicalDamageTaken+=msg.value();
 				if(msg.target()==host)
 					adjustAggro(msg.source(),msg.value()*2);
 				else
@@ -242,8 +252,6 @@
 		super.executeMsg(host,msg);
 	}
 	
-	
-	
 	public void startBehavior(Environmental forMe)
 	{
 		super.startBehavior(forMe);
@@ -273,6 +281,185 @@
 		if(skillsNever!=null) skillsNever.trimToSize();
 	}
 
+	protected boolean isRightCombatAbilities(MOB mob)
+	{
+        // insures we only try this once!
+		Behavior B;
+        for(int b=0;b<mob.numBehaviors();b++)
+        {
+            B=mob.fetchBehavior(b);
+            if((B==null)||(B==this))
+            	return true;
+            else
+            if(B instanceof CombatAbilities)
+                return false;
+        }
+        return true;
+	}
+
+	protected Ability useSkill(MOB mob, MOB victim, MOB leader) throws CMException
+	{
+		int tries=0;
+		Ability tryThisOne=null;
+		// now find a skill to use
+		Ability A=null;
+		
+
+		MOB target = null;
+        int victimQuality=Ability.QUALITY_INDIFFERENT;
+        int selfQuality=Ability.QUALITY_INDIFFERENT;
+        int leaderQuality=Ability.QUALITY_INDIFFERENT;
+		while((tryThisOne==null)&&((++tries)<100)&&(mob.numAbilities()>0))
+		{
+			if((combatMode==COMBAT_ONLYALWAYS)&&(this.skillsAlways!=null)&&(this.skillsAlways.size()>0))
+				A=mob.fetchAbility((String)skillsAlways.elementAt(CMLib.dice().roll(1,mob.numAbilities(),-1)));
+			else
+				A=mob.fetchAbility(CMLib.dice().roll(1,mob.numAbilities(),-1));
+			
+            if((A==null)
+            ||(A.isAutoInvoked())
+            ||(A.triggerStrings()==null)
+            ||(A.triggerStrings().length==0)
+            ||((skillsAlways!=null)&&(!skillsAlways.contains(A.ID())))
+            ||((skillsNever!=null)&&(skillsNever.contains(A.ID()))))
+                continue;
+            
+			victimQuality=(victim!=null)?A.castingQuality(mob,victim):Ability.QUALITY_INDIFFERENT;
+            selfQuality=A.castingQuality(mob,mob);
+            leaderQuality=((mob==leader)||(leader==null))?Ability.QUALITY_INDIFFERENT:A.castingQuality(mob,leader);
+
+			if(victimQuality==Ability.QUALITY_MALICIOUS)
+			{
+				switch(combatMode)
+				{
+				case COMBAT_RANDOM:
+				case COMBAT_ONLYALWAYS:
+	                tryThisOne=A;
+					break;
+				case COMBAT_DEFENSIVE:
+					if(CMLib.dice().rollPercentage()<=5)
+		                tryThisOne=A;
+					break;
+				case COMBAT_OFFENSIVE:
+	                tryThisOne=A;
+					break;
+				case COMBAT_MIXEDOFFENSIVE:
+					if(CMLib.dice().rollPercentage()<=75)
+		                tryThisOne=A;
+					break;
+				case COMBAT_MIXEDDEFENSIVE:
+					if(CMLib.dice().rollPercentage()<=25)
+		                tryThisOne=A;
+					break;
+				}
+			}
+			else
+            if((selfQuality==Ability.QUALITY_BENEFICIAL_SELF)
+            ||(leaderQuality==Ability.QUALITY_BENEFICIAL_OTHERS))
+			{
+				switch(combatMode)
+				{
+				case COMBAT_RANDOM:
+				case COMBAT_ONLYALWAYS:
+	                tryThisOne=A;
+					break;
+				case COMBAT_DEFENSIVE:
+	                tryThisOne=A;
+					break;
+				case COMBAT_OFFENSIVE:
+					if(CMLib.dice().rollPercentage()<=5)
+		                tryThisOne=A;
+					break;
+				case COMBAT_MIXEDOFFENSIVE:
+					if(CMLib.dice().rollPercentage()<=25)
+		                tryThisOne=A;
+					break;
+				case COMBAT_MIXEDDEFENSIVE:
+					if(CMLib.dice().rollPercentage()<=75)
+		                tryThisOne=A;
+					break;
+				}
+			}
+			target=victim;
+			if(selfQuality==Ability.QUALITY_BENEFICIAL_SELF)
+			    target=mob;
+			else
+			if(leaderQuality==Ability.QUALITY_BENEFICIAL_OTHERS)
+			    target=((leader==null)||(mob.location()!=leader.location()))?mob:leader;
+			if((target != null) && (tryThisOne != null) && (target.fetchEffect(tryThisOne.ID())!=null))
+				tryThisOne = null;
+		}
+
+		if(tryThisOne!=null)
+		{
+			if(CMath.bset(tryThisOne.usageType(),Ability.USAGE_MANA))
+			{
+				if((Math.random()>CMath.div(mob.curState().getMana(), mob.maxState().getMana()))
+                ||(mob.curState().getMana() < tryThisOne.usageCost(mob,false)[0]))
+				{
+                   if((CMLib.dice().rollPercentage()>30)
+				   ||(CMProps.getIntVar(CMProps.SYSTEMI_MANACONSUMETIME)<=0)
+				   ||((mob.amFollowing()!=null)&&(!mob.amFollowing().isMonster())))
+                	   throw new CMException("Not enough mana");
+				   mob.curState().adjMana(tryThisOne.usageCost(mob,false)[0],mob.maxState());
+				}
+				mob.curState().adjMana(5,mob.maxState());
+			}
+			if(CMath.bset(tryThisOne.usageType(),Ability.USAGE_MOVEMENT))
+			{
+				if((Math.random()>CMath.div(mob.curState().getMovement(),mob.maxState().getMovement()))
+				||(mob.curState().getMovement()<tryThisOne.usageCost(mob,false)[1]))
+             	   throw new CMException("Not enough movement");
+				mob.curState().adjMovement(5,mob.maxState());
+			}
+			if(CMath.bset(tryThisOne.usageType(),Ability.USAGE_HITPOINTS))
+			{
+				if((Math.random()>CMath.div(mob.curState().getHitPoints(),mob.maxState().getHitPoints()))
+				   ||(mob.curState().getHitPoints()<tryThisOne.usageCost(mob,false)[2]))
+	             	   throw new CMException("Not enough hp");
+			}
+			
+			if(proficient)
+                tryThisOne.setProficiency(100);
+			else
+			{
+				int qualLevel=CMLib.ableMapper().qualifyingLevel(mob,tryThisOne);
+				if(qualLevel<=0)
+	                tryThisOne.setProficiency(75);
+				else
+				{
+					int levelDiff=mob.baseEnvStats().level()-qualLevel;
+					if((levelDiff>50)||(levelDiff<0)) levelDiff=50;
+					tryThisOne.setProficiency(50+levelDiff);
+				}
+			}
+			boolean skillUsed=tryThisOne.invoke(mob,CMParms.makeVector(target.name()),null,false,0);
+			if((combatMode==COMBAT_ONLYALWAYS)&&(!skillUsed))
+			{
+				int retries=0;
+				while((++retries<10)&&(!skillUsed))
+					skillUsed=tryThisOne.invoke(mob,CMParms.makeVector(target.name()),null,false,0);
+			}
+			if(skillUsed)
+			{
+			    skillUsed=true;
+				if(lastSpell!=null)
+				    lastSpell=tryThisOne.ID();
+			}
+			else
+			{
+	            if(lastSpell!=null)
+    	            lastSpell="!"+tryThisOne.ID();
+                if(record!=null) 
+                    record.append("!");
+			}
+			if(record!=null) 
+				record.append(tryThisOne.ID()).append("; ");
+			return skillUsed?tryThisOne:null;
+		}
+		return null;
+	}
+	
 	public boolean tick(Tickable ticking, int tickID)
 	{
 		super.tick(ticking,tickID);
@@ -289,23 +476,24 @@
 		if(!mob.isInCombat())
 		{ 
 		    if(aggro!=null)
-		        aggro=null; 
+		        aggro=null;
+		    if((preCastSet < Integer.MAX_VALUE) && (preCastSet >0) && ((--preCastDown)<=0))
+		    {
+		    	preCastDown=preCastSet;
+				if(!isRightCombatAbilities(mob))
+					return true;
+				try {
+					useSkill(mob,null,null);
+				} catch(CMException cme){}
+		    }
 		    return true;
 		}
 		MOB victim=mob.getVictim();
 		if(victim==null) return true;
 		
         // insures we only try this once!
-		Behavior B;
-        for(int b=0;b<mob.numBehaviors();b++)
-        {
-            B=mob.fetchBehavior(b);
-            if((B==null)||(B==this))
-                break;
-            else
-            if(B instanceof CombatAbilities)
-                return true;
-        }
+		if(!isRightCombatAbilities(mob))
+			return true;
 
         Room R=mob.location();
         if((lastSpell!=null)&&(lastSpell.length()>0))
@@ -419,150 +607,13 @@
 		if(victim==null) return true;
 		
 		MOB leader=mob.amFollowing();
-		// now find a skill to use
-		int tries=0;
-		Ability tryThisOne=null;
+		
+		boolean skillUsed=false;
+		try {
+			skillUsed=useSkill(mob, victim, leader)!=null;
+		} catch(CMException cme) { return true;}
+		
 		Ability A=null;
-
-        int victimQuality=Ability.QUALITY_INDIFFERENT;
-        int selfQuality=Ability.QUALITY_INDIFFERENT;
-        int leaderQuality=Ability.QUALITY_INDIFFERENT;
-		while((tryThisOne==null)&&((++tries)<100)&&(mob.numAbilities()>0))
-		{
-			A=mob.fetchAbility(CMLib.dice().roll(1,mob.numAbilities(),-1));
-			
-            if((A==null)
-            ||(A.isAutoInvoked())
-            ||(A.triggerStrings()==null)
-            ||(A.triggerStrings().length==0)
-            ||((skillsAlways!=null)&&(!skillsAlways.contains(A.ID())))
-            ||((skillsNever!=null)&&(skillsNever.contains(A.ID()))))
-                continue;
-            
-			victimQuality=A.castingQuality(mob,victim);
-            selfQuality=A.castingQuality(mob,mob);
-            leaderQuality=((mob==leader)||(leader==null))?Ability.QUALITY_INDIFFERENT:A.castingQuality(mob,leader);
-
-			if(victimQuality==Ability.QUALITY_MALICIOUS)
-			{
-				switch(combatMode)
-				{
-				case COMBAT_RANDOM:
-	                tryThisOne=A;
-					break;
-				case COMBAT_DEFENSIVE:
-					if(CMLib.dice().rollPercentage()<=5)
-		                tryThisOne=A;
-					break;
-				case COMBAT_OFFENSIVE:
-	                tryThisOne=A;
-					break;
-				case COMBAT_MIXEDOFFENSIVE:
-					if(CMLib.dice().rollPercentage()<=75)
-		                tryThisOne=A;
-					break;
-				case COMBAT_MIXEDDEFENSIVE:
-					if(CMLib.dice().rollPercentage()<=25)
-		                tryThisOne=A;
-					break;
-				}
-			}
-			else
-            if((selfQuality==Ability.QUALITY_BENEFICIAL_SELF)
-            ||(leaderQuality==Ability.QUALITY_BENEFICIAL_OTHERS))
-			{
-				switch(combatMode)
-				{
-				case COMBAT_RANDOM:
-	                tryThisOne=A;
-					break;
-				case COMBAT_DEFENSIVE:
-	                tryThisOne=A;
-					break;
-				case COMBAT_OFFENSIVE:
-					if(CMLib.dice().rollPercentage()<=5)
-		                tryThisOne=A;
-					break;
-				case COMBAT_MIXEDOFFENSIVE:
-					if(CMLib.dice().rollPercentage()<=25)
-		                tryThisOne=A;
-					break;
-				case COMBAT_MIXEDDEFENSIVE:
-					if(CMLib.dice().rollPercentage()<=75)
-		                tryThisOne=A;
-					break;
-				}
-			}
-		}
-
-		boolean skillUsed=true;
-		if(tryThisOne!=null)
-		{
-			if(CMath.bset(tryThisOne.usageType(),Ability.USAGE_MANA))
-			{
-				if((Math.random()>CMath.div(mob.curState().getMana(), mob.maxState().getMana()))
-                ||(mob.curState().getMana() < tryThisOne.usageCost(mob,false)[0]))
-				{
-                   if((CMLib.dice().rollPercentage()>30)
-				   ||(CMProps.getIntVar(CMProps.SYSTEMI_MANACONSUMETIME)<=0)
-				   ||((mob.amFollowing()!=null)&&(!mob.amFollowing().isMonster())))
-                        return true;
-				   mob.curState().adjMana(tryThisOne.usageCost(mob,false)[0],mob.maxState());
-				}
-				mob.curState().adjMana(5,mob.maxState());
-			}
-			if(CMath.bset(tryThisOne.usageType(),Ability.USAGE_MOVEMENT))
-			{
-				if((Math.random()>CMath.div(mob.curState().getMovement(),mob.maxState().getMovement()))
-				||(mob.curState().getMovement()<tryThisOne.usageCost(mob,false)[1]))
-					return true;
-				mob.curState().adjMovement(5,mob.maxState());
-			}
-			if(CMath.bset(tryThisOne.usageType(),Ability.USAGE_HITPOINTS))
-			{
-				if((Math.random()>CMath.div(mob.curState().getHitPoints(),mob.maxState().getHitPoints()))
-				   ||(mob.curState().getHitPoints()<tryThisOne.usageCost(mob,false)[2]))
-					return true;
-			}
-
-			MOB target=victim;
-			if(selfQuality==Ability.QUALITY_BENEFICIAL_SELF)
-			    target=mob;
-			else
-			if(leaderQuality==Ability.QUALITY_BENEFICIAL_OTHERS)
-			    target=((leader==null)||(mob.location()!=leader.location()))?mob:leader;
-	        
-
-			if(proficient)
-                tryThisOne.setProficiency(100);
-			else
-			{
-				int qualLevel=CMLib.ableMapper().qualifyingLevel(mob,tryThisOne);
-				if(qualLevel<=0)
-	                tryThisOne.setProficiency(75);
-				else
-				{
-					int levelDiff=mob.baseEnvStats().level()-qualLevel;
-					if((levelDiff>50)||(levelDiff<0)) levelDiff=50;
-					tryThisOne.setProficiency(50+levelDiff);
-				}
-			}
-			Vector V=new Vector();
-			V.addElement(target.name());
-			if(lastSpell!=null)
-			    lastSpell=tryThisOne.ID();
-			if(tryThisOne.invoke(mob,V,null,false,0))
-			    skillUsed=true;
-			else
-			{
-	            if(lastSpell!=null)
-    	            lastSpell="!"+tryThisOne.ID();
-                if(record!=null) 
-                    record.append("!");
-			}
-			if(record!=null) record.append(tryThisOne.ID()).append("; ");
-		}
-		
 		// if a skill use failed, take a stab at wanding
 		if((!skillUsed)
         &&(wandUseCheck[1])
@@ -612,12 +663,17 @@
         if(CombatAbilities.CODES==null)
         {
             String[] superCodes=super.getStatCodes();
-            CODES=new String[superCodes.length+3];
+            CODES=new String[superCodes.length+8];
             for(int c=0;c<superCodes.length;c++)
                 CODES[c]=superCodes[c];
-            CODES[CODES.length-3]="RECORD";
-            CODES[CODES.length-2]="PROF";
-            CODES[CODES.length-1]="LASTSPELL";
+            CODES[CODES.length-8]="RECORD";
+            CODES[CODES.length-7]="PROF";
+            CODES[CODES.length-6]="LASTSPELL";
+            CODES[CODES.length-5]="PRECAST";
+            CODES[CODES.length-4]="PHYSDAMTAKEN";
+            CODES[CODES.length-3]="SKILLSALWAYS";
+            CODES[CODES.length-2]="SKILLSNEVER";
+            CODES[CODES.length-1]="COMBATMODE";
         }
         return CODES;
     }
@@ -637,6 +693,11 @@
         case 0: return (record==null)?"":record.toString();
         case 1: return Boolean.toString(proficient);
         case 2: return lastSpell!=null?lastSpell:"";
+        case 3: return Integer.toString(preCastSet);
+        case 4: return Integer.toString(physicalDamageTaken);
+        case 5: return (skillsAlways==null)?"":CMParms.toSemicolonList(skillsAlways);
+        case 6: return (skillsAlways==null)?"":CMParms.toSemicolonList(skillsNever);
+        case 7: return Integer.toString(combatMode);
         }
         return "";
     }
@@ -660,6 +721,27 @@
         case 2:
             lastSpell=val;
             break;
+        case 3:
+        	preCastSet=CMath.s_int(val);
+        	preCastDown=CMath.s_int(val);
+        	break;
+        case 4:
+        	physicalDamageTaken=CMath.s_int(val);
+        	break;
+        case 5:
+        	skillsAlways=CMParms.parseSemicolons(val,true);
+        	if(skillsAlways.size()==0) skillsAlways=null;
+        	break;
+        case 6:
+        	skillsNever=CMParms.parseSemicolons(val,true);
+        	if(skillsNever.size()==0) skillsNever=null;
+        	break;
+        case 7:
+        	if(CMath.isInteger(val))
+	        	combatMode=CMath.s_int(val);
+        	else
+        		combatMode=CMParms.indexOf(names,val.toUpperCase().trim());
+        	break;
         }
     }
 }
Index: planet_ink/coffee_mud/application/MUD.java
===================================================================
--- planet_ink/coffee_mud/application/MUD.java	(revision 2354)
+++ planet_ink/coffee_mud/application/MUD.java	(revision 2574)
@@ -30,7 +30,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -49,7 +49,7 @@
 public class MUD extends Thread implements MudHost
 {
     private static final float HOST_VERSION_MAJOR=(float)5.5;
-    private static final long  HOST_VERSION_MINOR=3;
+    private static final long  HOST_VERSION_MINOR=5;
 
     protected static boolean bringDown=false;
     private static String execExternalCommand=null;
@@ -241,7 +241,7 @@
 		{
 			smtpServerThread = new SMTPserver(CMLib.mud(0));
 			smtpServerThread.start();
-			CMLib.threads().startTickDown(smtpServerThread,Tickable.TICKID_EMAIL,60);
+			CMLib.threads().startTickDown(smtpServerThread,Tickable.TICKID_EMAIL,3);
 		}
 
 		CMProps.setUpLowVar(CMProps.SYSTEM_MUDSTATUS,"Booting: loading base classes");
@@ -1176,7 +1176,7 @@
 		{
 			System.out.println();
 			Log.sysOut(Thread.currentThread().getName(),"CoffeeMud v"+HOST_VERSION_MAJOR + "." + HOST_VERSION_MINOR);
-			Log.sysOut(Thread.currentThread().getName(),"(C) 2000-2008 Bo Zimmerman");
+			Log.sysOut(Thread.currentThread().getName(),"(C) 2000-2009 Bo Zimmerman");
 			Log.sysOut(Thread.currentThread().getName(),"http://www.coffeemud.org");
 			HostGroup joinable=null;
             CMLib.hosts().clear();
Index: planet_ink/coffee_mud/Abilities/interfaces/Ability.java
===================================================================
--- planet_ink/coffee_mud/Abilities/interfaces/Ability.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/interfaces/Ability.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -556,6 +556,13 @@
 	public void setProficiency(int newProficiency);
 	
 	/**
+	 * Due to the expense of expertise calculation, it is generally done only once
+	 * per skill.  However, whenever new expertises are added, they need to be 
+	 * recalculated.  This method is called to recalculate expertises.
+	 */
+	public void clearExpertiseCache();
+	
+	/**
 	 * Returns whether the given mob passes their proficiency check in this skill
 	 * at this time.  Will accept a numeric adjustment, positive or negative, to
 	 * their base proficiency.  Will also accept an auto parameter, which forces
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Deathfinger.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Deathfinger.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Deathfinger.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,7 +64,10 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=(int)Math.round(CMath.div(target.curState().getHitPoints(),2.0));
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel),48 + 16);
+					int levelDiff=(mob.envStats().level() - target.envStats().level());
+					if(levelDiff> 0)
+						harming += (int)Math.round(CMath.mul(CMath.div(target.baseState().getHitPoints(),10),levelDiff));
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The finger of DEATH <DAMAGE> <T-NAME>!");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Curse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Curse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Curse.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -51,7 +51,7 @@
 		affectableStats.setDisposition(affectableStats.disposition()|EnvStats.IS_EVIL);
 		int xlvl=super.getXLEVELLevel(invoker());
 		if(affected instanceof MOB)
-			affectableStats.setArmor(affectableStats.armor()+10+(2*xlvl));
+			affectableStats.setArmor(affectableStats.armor()+5+(2*xlvl));
 		else
 		if(affected instanceof Item)
 			affectableStats.setAbility(affectableStats.ability()-1);
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Behemoth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Behemoth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Behemoth.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -63,14 +63,18 @@
 		super.affectCharStats(affectedMOB,affectedStats);
 		affectedStats.setStat(CharStats.STAT_STRENGTH,affectedStats.getStat(CharStats.STAT_STRENGTH)+5);
 		affectedStats.setStat(CharStats.STAT_DEXTERITY,affectedStats.getStat(CharStats.STAT_DEXTERITY)-5);
+		affectedStats.setStat(CharStats.STAT_WEIGHTADJ,
+				affectedStats.getStat(CharStats.STAT_WEIGHTADJ)
+				+(affectedMOB.baseEnvStats().weight()*4));
 	}
 
 	public void affectEnvStats(Environmental affected, EnvStats affectedStats)
 	{
 		super.affectEnvStats(affected,affectedStats);
-		affectedStats.setWeight(affectedStats.weight()*4);
 		affectedStats.setHeight(affectedStats.height()*3);
 		affectedStats.setName("A BEHEMOTH "+affected.name().toUpperCase());
+		if(!(affected instanceof MOB))
+			affectedStats.setWeight(affectedStats.weight()*4);
 	}
 
 	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
@@ -102,6 +106,8 @@
 				mob.location().send(mob,msg);
 				target.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> grow(s) to BEHEMOTH size!");
 				beneficialAffect(mob,target,asLevel,0);
+				if(target instanceof MOB)
+					CMLib.utensils().confirmWearability((MOB)target);
 			}
 		}
 		else
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Godstrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Godstrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Godstrike.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -78,7 +78,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(3,adjustedLevel(mob,asLevel),adjustedLevel(mob,asLevel));
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel),adjustedLevel(mob,asLevel));
 					if(undead) harming=harming*2;
 					if(CMLib.flags().isEvil(target))
 						CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,Weapon.TYPE_BURSTING,"^SThe holy STRIKE of the gods <DAMAGE> <T-NAME>!^?");
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelEvil.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelEvil.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelEvil.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -78,7 +78,7 @@
 				if(msg.value()>0)
 					harming=(int)Math.round(CMath.div(harming,2.0));
 				if(CMLib.flags().isEvil(target))
-					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_JUSTICE,Weapon.TYPE_BURSTING,"The wicked spell <DAMAGE> <T-NAME>!");
+					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_JUSTICE,Weapon.TYPE_BURSTING,"The righteous spell <DAMAGE> <T-NAME>!");
 			}
             else
                 return false;
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sanctuary.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sanctuary.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sanctuary.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -70,7 +70,9 @@
 		if((msg.amITarget(mob))
 		   &&(msg.targetMinor()==CMMsg.TYP_DAMAGE))
 		{
-			int recovery=(int)Math.round(CMath.div((msg.value()),2.0));
+			int recovery=(int)Math.round(CMath.mul((msg.value()),0.75));
+			if((recovery==msg.value())&&(msg.value()>1))
+				recovery=msg.value()-1;
 			msg.setValue(recovery);
 		}
 		return true;
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ElectricStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ElectricStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ElectricStrike.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,7 +64,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(3,adjustedLevel(mob,asLevel),5);
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel),5);
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_ELECTRIC,Weapon.TYPE_STRIKING,"^SThe ELECTRIC STRIKE <DAMAGE> <T-NAME>!^?");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_FireHealing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_FireHealing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_FireHealing.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DemonicConsumption.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DemonicConsumption.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DemonicConsumption.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -114,7 +114,7 @@
 
 		}
 		else
-			maliciousFizzle(mob,target,"<S-NAME> point(s) at <T-NAMESELF> and "+prayWord(mob)+" treacherously, but fizzles the magic!");
+			maliciousFizzle(mob,target,"<S-NAME> point(s) at <T-NAMESELF> and "+prayWord(mob)+" treacherously, but fizzle(s) the magic!");
 
 
 		// return whether it worked
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Annul.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Annul.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Annul.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Condemnation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Condemnation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Condemnation.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_RemoveDeathMark.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_RemoveDeathMark.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_RemoveDeathMark.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhost.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhost.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhost.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -120,6 +120,7 @@
 				it++;
 		}
 		body.destroy();
+		newMOB.setStartRoom(null);
 		R.show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 		R.recoverRoomStats();
 	}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Benediction.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Benediction.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Benediction.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureVampirism.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureVampirism.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureVampirism.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_GuardianHearth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_GuardianHearth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_GuardianHearth.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HuntGood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HuntGood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HuntGood.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Demonshield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Demonshield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Demonshield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -87,7 +87,7 @@
 						if(msg2.value()<=0)
 						{
 							int damage = CMLib.dice().roll( 1,
-							                                (int)Math.round( ( adjustedLevel( invoker(), 0 ) + ( 2.0 * ((double)super.getX1Level( invoker() )) ) ) / 3.0 ),
+							                                (int)Math.round( ( adjustedLevel( invoker(), 0 ) + ( 2.0 * ((double)super.getX1Level( invoker() )) ) ) / 5.0 ),
 							                                1 );
 							CMLib.combat().postDamage(mob,source,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_FIRE,Weapon.TYPE_BURNING,"The unholy flames around <S-NAME> flare and <DAMAGE> <T-NAME>!");
 						}
@@ -104,9 +104,7 @@
 		super.affectEnvStats(affected,affectableStats);
 		if(affected==null) return;
 		if(!(affected instanceof MOB)) return;
-		MOB mob=(MOB)affected;
-
-		affectableStats.setArmor(affectableStats.armor()-(mob.envStats().level()+(2*getXLEVELLevel(invoker()))));
+		affectableStats.setArmor(affectableStats.armor()-(1+(2*getXLEVELLevel(invoker()))));
 	}
 
 	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Refresh.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Refresh.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Refresh.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DesecrateLand.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DesecrateLand.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DesecrateLand.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseBalance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseBalance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseBalance.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_UnholyArmament.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_UnholyArmament.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_UnholyArmament.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -98,7 +98,7 @@
 				I.baseEnvStats().setWeight(20);
 				I.setMaterial(RawMaterial.RESOURCE_MITHRIL);
 				I.recoverEnvStats();
-				Hashtable H=CMLib.itemBuilder().timsItemAdjustments(I,mob.envStats().level()+(2*super.getXLEVELLevel(mob)),I.material(),I.baseEnvStats().weight(),1,((Weapon)I).weaponClassification(),0,I.rawProperLocationBitmap());
+				Hashtable H=CMLib.itemBuilder().timsItemAdjustments(I,mob.envStats().level()+(2*super.getXLEVELLevel(mob)),I.material(),1,((Weapon)I).weaponClassification(),0,I.rawProperLocationBitmap());
 				I.baseEnvStats().setDamage(CMath.s_int((String)H.get("DAMAGE")));
 				I.baseEnvStats().setAttackAdjustment(CMath.s_int((String)H.get("ATTACK")));
 				I.setBaseValue(0);
@@ -113,7 +113,7 @@
 				else
 					I.setMaterial(RawMaterial.RESOURCE_MITHRIL);
 				I.recoverEnvStats();
-				Hashtable H=CMLib.itemBuilder().timsItemAdjustments(I,mob.envStats().level()+(2*super.getXLEVELLevel(mob)),I.material(),I.baseEnvStats().weight(),1,0,0,I.rawProperLocationBitmap());
+				Hashtable H=CMLib.itemBuilder().timsItemAdjustments(I,mob.envStats().level()+(2*super.getXLEVELLevel(mob)),I.material(),1,0,0,I.rawProperLocationBitmap());
 				I.baseEnvStats().setArmor(CMath.s_int((String)H.get("ARMOR")));
 				I.baseEnvStats().setWeight(CMath.s_int((String)H.get("WEIGHT")));
 				I.setBaseValue(0);
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseAllergies.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseAllergies.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseAllergies.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateWater.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateWater.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateWater.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Bless.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Bless.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Bless.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -51,7 +51,7 @@
 		affectableStats.setDisposition(affectableStats.disposition()|EnvStats.IS_GOOD);
 		affectableStats.setDisposition(affectableStats.disposition()|EnvStats.IS_BONUS);
 		if(affected instanceof MOB)
-			affectableStats.setArmor(affectableStats.armor()-10-(2*getXLEVELLevel(invoker())));
+			affectableStats.setArmor(affectableStats.armor()-5-(2*getXLEVELLevel(invoker())));
 		else
 		if(affected instanceof Item)
 			affectableStats.setAbility(affectableStats.ability()+1);
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_UnholyWord.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_UnholyWord.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_UnholyWord.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -55,13 +55,13 @@
 		int xlvl=super.getXLEVELLevel(invoker());
 		if(CMLib.flags().isEvil(mob))
 		{
-			affectableStats.setArmor(affectableStats.armor()-30-(6*xlvl));
+			affectableStats.setArmor(affectableStats.armor()-15-(6*xlvl));
 			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+20+(4*xlvl));
 		}
 		else
 		if(CMLib.flags().isGood(mob))
 		{
-			affectableStats.setArmor(affectableStats.armor()+30+(6*xlvl));
+			affectableStats.setArmor(affectableStats.armor()+15+(6*xlvl));
 			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()-20-(4*xlvl));
 		}
 	}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ModerateInfusion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ModerateInfusion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ModerateInfusion.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Conviction.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Conviction.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Conviction.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -56,9 +56,10 @@
 		&&(mob.getWorshipCharID().equals(invoker().getWorshipCharID())))
 		{
 			int xlvl=super.getXLEVELLevel(invoker());
-			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+(affectableStats.attackAdjustment()/(7-xlvl)));
+			if(xlvl>7) xlvl=7;
+			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+(affectableStats.attackAdjustment()/(8-xlvl)));
 			affectableStats.setDamage(affectableStats.damage()+3+xlvl);
-			affectableStats.setArmor(affectableStats.armor()+(affectableStats.armor()/(7-xlvl)));
+			affectableStats.setArmor(affectableStats.armor()+(affectableStats.armor()/(8-xlvl)));
 		}
 	}
 
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BoneMoon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BoneMoon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BoneMoon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMinds.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMinds.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMinds.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BladeBarrier.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BladeBarrier.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BladeBarrier.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -76,7 +76,7 @@
 			   ||(CMath.bset(msg.targetMajor(),CMMsg.MASK_MOVE))))
 			{
 				MOB meM=(MOB)msg.target();
-				int damage = CMLib.dice().roll(1,(int)Math.round(adjustedLevel(meM,0)/2.0),1);
+				int damage = CMLib.dice().roll(1,(int)Math.round(adjustedLevel(meM,0)/5.0),1);
 				StringBuffer hitWord=new StringBuffer(CMLib.combat().standardHitWord(-1,damage));
 				if(hitWord.charAt(hitWord.length()-1)==')')
 					hitWord.deleteCharAt(hitWord.length()-1);
@@ -98,7 +98,7 @@
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
-		affectableStats.setArmor(affectableStats.armor()-adjustedLevel(invoker(),0));
+		affectableStats.setArmor(affectableStats.armor()-1 - (adjustedLevel(invoker(),0)/10));
 	}
 
 	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MoralBalance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MoralBalance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MoralBalance.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Blindness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Blindness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Blindness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Faithless.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Faithless.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Faithless.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Regeneration.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Regeneration.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Regeneration.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Silence.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Silence.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Silence.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Harm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Harm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Harm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -77,7 +77,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(4,adjustedLevel(mob,asLevel)+24,8);
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel)+24,8);
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The unholy spell <DAMAGE> <T-NAME>!");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BloodMoon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BloodMoon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BloodMoon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -70,7 +70,8 @@
 		if((msg.amITarget(mob))
 		   &&(msg.targetMinor()==CMMsg.TYP_DAMAGE))
 		{
-			int recovery=(int)Math.round(CMath.div((msg.value()),2.0));
+			int recovery=(int)Math.round(CMath.div((msg.value()),10.0));
+			if(recovery<=0) recovery=1;
 			msg.setValue(msg.value()+recovery);
 		}
 		return true;
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivinePerspective.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivinePerspective.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivinePerspective.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Hellfire.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Hellfire.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Hellfire.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -78,7 +78,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(3,adjustedLevel(mob,asLevel),adjustedLevel(mob,asLevel));
+					int harming=CMLib.dice().roll(2,adjustedLevel(mob,asLevel),6);
 					if(undead) harming=harming/2;
 					if(CMLib.flags().isGood(target))
 						CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_FIRE,Weapon.TYPE_BURNING,"The unholy HELLFIRE <DAMAGE> <T-NAME>!");
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HealUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HealUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HealUndead.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateDead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateDead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateDead.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -139,6 +139,7 @@
 						it++;
 				}
 				body.destroy();
+				newMOB.setStartRoom(null);
 				mob.location().show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 				mob.location().recoverRoomStats();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_LinkedHealth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_LinkedHealth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_LinkedHealth.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Drain.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Drain.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Drain.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_RighteousIndignation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_RighteousIndignation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_RighteousIndignation.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineLuck.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineLuck.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineLuck.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -84,7 +84,7 @@
 		{
 			MOB victim=mob.getVictim();
 			if(CMLib.flags().isEvil(victim))
-				affectableStats.setArmor(affectableStats.armor()-10-xlvl);
+				affectableStats.setArmor(affectableStats.armor()-5-xlvl);
 		}
 	}
 
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtGood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtGood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtGood.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_PeaceRitual.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_PeaceRitual.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_PeaceRitual.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DailyBread.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DailyBread.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DailyBread.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ReligiousDoubt.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ReligiousDoubt.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ReligiousDoubt.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Wave.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Wave.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Wave.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -93,7 +93,7 @@
 					CMMsg msg=CMClass.getMsg(mob,target,this,verbalCastCode(mob,target,auto)|CMMsg.MASK_MALICIOUS,auto?"<T-NAME> <T-IS-ARE> swept away by a great wave!":"^S<S-NAME> sweep(s) <S-HIS-HER> hands over <T-NAMESELF>, "+prayingWord(mob)+".^?");					if(mob.location().okMessage(mob,msg))
 					{
 						mob.location().send(mob,msg);
-						int harming=CMLib.dice().roll(4,adjustedLevel(mob,asLevel)/numEnemies,numEnemies);
+						int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel)/numEnemies,numEnemies);
 						CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_WATER,Weapon.TYPE_BURSTING,"A crashing wave <DAMAGE> <T-NAME>!");
 						int chanceToStay=10+(target.charStats().getStat(CharStats.STAT_STRENGTH)-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)))*4);
 						int roll=CMLib.dice().rollPercentage();
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateSpectre.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateSpectre.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateSpectre.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -147,6 +147,7 @@
 						it++;
 				}
 				body.destroy();
+				newMOB.setStartRoom(null);
 				mob.location().show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 				mob.location().recoverRoomStats();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SummonElemental.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SummonElemental.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SummonElemental.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -144,7 +144,7 @@
 			break;
 		case 1:
 			newMOB.baseCharStats().setMyRace(CMClass.getRace("FireElemental"));
-			newMOB.setName("a creature of flame and smoke ");
+			newMOB.setName("a creature of flame and smoke");
 			newMOB.setDisplayText("a creature of flame and smoke is here");
 			newMOB.setDescription("This enormous burning ember is roughly the shape of a humanoid.");
 			ride.setRiderCapacity(0);
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassBlindness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassBlindness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassBlindness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyWord.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyWord.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyWord.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -62,13 +62,13 @@
 		int xlvl=super.getXLEVELLevel(invoker());
 		if(CMLib.flags().isGood(mob))
 		{
-			affectableStats.setArmor(affectableStats.armor()-30-(6*xlvl));
+			affectableStats.setArmor(affectableStats.armor()-15-(6*xlvl));
 			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+20+(4*xlvl));
 		}
 		else
 		if(CMLib.flags().isEvil(mob))
 		{
-			affectableStats.setArmor(affectableStats.armor()+30+(6*xlvl));
+			affectableStats.setArmor(affectableStats.armor()+15+(6*xlvl));
 			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()-20-(4*xlvl));
 		}
 	}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Invigorate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Invigorate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Invigorate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureDeafness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureDeafness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureDeafness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Tremor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Tremor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Tremor.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseFlames.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseFlames.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseFlames.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -113,8 +113,7 @@
 			{
 				mob.location().send(mob,msg);
 				mob.location().send(mob,msg2);
-                int numDice = (int)Math.round(CMath.div(adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob)),2.0))+1;
-				int damage = CMLib.dice().roll(numDice, 6, 20);
+				int damage = CMLib.dice().roll(1, 2*adjustedLevel(mob,asLevel), (2*super.getX1Level(mob))+1);
 				if((msg.value()>0)||(msg2.value()>0))
 					damage = (int)Math.round(CMath.div(damage,2.0));
 
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Heal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Heal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Heal.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -85,9 +85,9 @@
 			{
 				mob.location().send(mob,msg);
 				int healing=CMLib.dice().roll(5,adjustedLevel(mob,asLevel),10);
-				int oldHP=mob.curState().getHitPoints();
+				int oldHP=target.curState().getHitPoints();
 				CMLib.combat().postHealing(mob,target,this,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,healing,null);
-				if(mob.curState().getHitPoints()>oldHP)
+				if(target.curState().getHitPoints()>oldHP)
 					target.tell("You feel tons better!");
                 lastCastHelp=System.currentTimeMillis();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sanctum.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sanctum.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sanctum.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassDeafness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassDeafness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassDeafness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassMobility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassMobility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassMobility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Absorption.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Absorption.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Absorption.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Bury.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Bury.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Bury.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MajorInfusion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MajorInfusion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MajorInfusion.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Rockskin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Rockskin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Rockskin.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -49,7 +49,7 @@
 	{
 		super.affectEnvStats(affected,affectableStats);
 		int xlvl=super.getXLEVELLevel(invoker());
-		affectableStats.setArmor(affectableStats.armor() - 10-xlvl);
+		affectableStats.setArmor(affectableStats.armor() - 15-(2*xlvl));
 	}
 
 	public void unInvoke()
@@ -119,7 +119,7 @@
 			{
 				mob.location().send(mob,msg);
 				mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> watch(es) <S-HIS-HER> skin turn hard as rock!");
-				HitsRemaining=5+(adjustedLevel(mob,asLevel)/2);
+				HitsRemaining=3+(adjustedLevel(mob,asLevel)/10);
 				beneficialAffect(mob,target,asLevel,0);
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Haunted.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Haunted.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Haunted.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sacrifice.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sacrifice.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sacrifice.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelGood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelGood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelGood.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMind.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMind.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMind.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Divorce.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Divorce.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Divorce.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Earthshield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Earthshield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Earthshield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -49,7 +49,7 @@
 		super.affectEnvStats(affected,affectableStats);
 		if(affected==null) return;
 		if(!(affected instanceof MOB)) return;
-		affectableStats.setArmor(affectableStats.armor()-(2*adjustedLevel(invoker(),0)));
+		affectableStats.setArmor(affectableStats.armor()-5 - (adjustedLevel(invoker(),0)/5));
 	}
 
 	public void affectCharState(MOB affected, CharState affectableState)
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseHoliness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseHoliness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseHoliness.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseUndead.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineResistance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineResistance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineResistance.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureFatigue.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureFatigue.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureFatigue.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Corruption.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Corruption.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Corruption.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseSerious.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseSerious.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseSerious.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -77,7 +77,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(2,adjustedLevel(mob,asLevel)+6,4);
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel)+6,4);
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The unholy spell <DAMAGE> <T-NAME>!");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateFood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateFood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateFood.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseLife.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseLife.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseLife.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Disenchant.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Disenchant.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Disenchant.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_NeutralizeLand.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_NeutralizeLand.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_NeutralizeLand.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseInvisible.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseInvisible.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseInvisible.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_FountainLife.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_FountainLife.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_FountainLife.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Maladiction.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Maladiction.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Maladiction.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureLight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureLight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureLight.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -85,9 +85,9 @@
 			{
 				mob.location().send(mob,msg);
 				int healing=CMLib.dice().roll(2,adjustedLevel(mob,asLevel),4);
-				int oldHP=mob.curState().getHitPoints();
+				int oldHP=target.curState().getHitPoints();
 				CMLib.combat().postHealing(mob,target,this,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,healing,null);
-				if(mob.curState().getHitPoints()>oldHP)
+				if(target.curState().getHitPoints()>oldHP)
 					target.tell("You feel a little better!");
                 lastCastHelp=System.currentTimeMillis();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Blindsight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Blindsight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Blindsight.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Extinguish.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Extinguish.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Extinguish.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseLight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseLight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseLight.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_FeignLife.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_FeignLife.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_FeignLife.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CallUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CallUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CallUndead.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseEvil.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseEvil.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseEvil.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_UndeadInvisibility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_UndeadInvisibility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_UndeadInvisibility.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_RemoveCurse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_RemoveCurse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_RemoveCurse.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Cleanliness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Cleanliness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Cleanliness.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_GodLight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_GodLight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_GodLight.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Forgive.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Forgive.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Forgive.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_GreatCurse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_GreatCurse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_GreatCurse.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -51,7 +51,7 @@
 		if(!(affected instanceof MOB)) return;
 
 		int xlvl=super.getXLEVELLevel(invoker());
-		affectableStats.setArmor(affectableStats.armor()+20+(4*xlvl));
+		affectableStats.setArmor(affectableStats.armor()+10+(4*xlvl));
 		affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()-10-(2*xlvl));
 	}
 
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtUndead.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_PreserveBody.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_PreserveBody.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_PreserveBody.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sober.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sober.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sober.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseDisease.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseDisease.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseDisease.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassParalyze.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassParalyze.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassParalyze.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseCritical.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseCritical.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseCritical.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -77,7 +77,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(3,adjustedLevel(mob,asLevel)+12,5);
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel)+12,5);
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The unholy spell <DAMAGE> <T-NAME>!");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtPoison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtPoison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtPoison.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Plague.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Plague.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Plague.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtectElements.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtectElements.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtectElements.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Tithe.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Tithe.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Tithe.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhoul.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhoul.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhoul.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -147,6 +147,7 @@
 						it++;
 				}
 				body.destroy();
+				newMOB.setStartRoom(null);
 				mob.location().show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 				mob.location().recoverRoomStats();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Avatar.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Avatar.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Avatar.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -71,9 +71,9 @@
 	public void affectEnvStats(Environmental affected, EnvStats affectedStats)
 	{
 		super.affectEnvStats(affected,affectedStats);
-		int xlvl=adjustedLevel(invoker(),0);
-		affectedStats.setArmor(affectedStats.armor()-(xlvl*2));
-		affectedStats.setSpeed(affectedStats.speed()+2.0+CMath.mul(0.25,super.getXLEVELLevel(invoker())));
+		int xlvl=1+(adjustedLevel(invoker(),0)/2);
+		affectedStats.setArmor(affectedStats.armor()-(xlvl));
+		affectedStats.setSpeed(affectedStats.speed()+1.0+CMath.mul(0.25,super.getXLEVELLevel(invoker())));
 		affectedStats.setAttackAdjustment(affectedStats.attackAdjustment()+xlvl);
 		if(affected instanceof MOB)
 		{
@@ -113,12 +113,21 @@
 				if(attack==null)
 				{
 					int dir=-1;
+					Vector<Integer> dirs=new Vector<Integer>();
+					
 					for(int d=Directions.NUM_DIRECTIONS()-1;d>=0;d--)
 					{
 						Room R2=R.getRoomInDir(d);
 						if((R2!=null)
 						&&(R.getExitInDir(d)!=null)
 						&&(R.getExitInDir(d).isOpen()))
+							dirs.addElement(Integer.valueOf(d));
+					}
+					while(dirs.size()>0)
+					{
+						int d=(Integer)dirs.remove(CMLib.dice().roll(1, dirs.size(), -1));
+						Room R2=R.getRoomInDir(d);
+						if(R2!=null)
 						{
 							if((dir<0)||(dir==Directions.UP))
 								dir=d;
@@ -131,7 +140,11 @@
 						}
 					}
 					if(dir>=0)
+					{
+						String godName=mob.getWorshipCharID().length()==0?"Your god":mob.getWorshipCharID();
+						mob.tell(godName+" directs you "+Directions.getInDirectionName(dir)+".");
 						CMLib.tracking().move(mob,dir,false,false);
+					}
 				}
 				if(attack!=null)
 					CMLib.combat().postAttack(mob,attack,mob.fetchWieldedItem());
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Christen.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Christen.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Christen.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_FleshRock.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_FleshRock.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_FleshRock.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Stoning.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Stoning.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Stoning.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -101,6 +101,7 @@
 	            cits.addElement(M);
 	            M.bringToLife(R2,true);
 	            CMLib.tracking().wanderIn(M,R);
+	            M.setStartRoom(null);
                 R2.destroy();
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtDisease.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtDisease.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtDisease.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ElectricHealing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ElectricHealing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ElectricHealing.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DrunkenStupor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DrunkenStupor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DrunkenStupor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyAura.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyAura.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyAura.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -58,7 +58,7 @@
 		if(!(affected instanceof MOB)) return;
 
 		int xlvl=super.getXLEVELLevel(invoker());
-		affectableStats.setArmor(affectableStats.armor()-20-(4*xlvl));
+		affectableStats.setArmor(affectableStats.armor()-10-(4*xlvl));
 		affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+10+(2*xlvl));
 	}
 
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraFear.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraFear.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraFear.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BlessItem.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BlessItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BlessItem.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -51,7 +51,7 @@
 		affectableStats.setDisposition(affectableStats.disposition()|EnvStats.IS_GOOD);
 		affectableStats.setDisposition(affectableStats.disposition()|EnvStats.IS_BONUS);
 		if(affected instanceof MOB)
-			affectableStats.setArmor((affectableStats.armor()-10)-(affected.envStats().level()+(2*super.getXLEVELLevel(invoker()))));
+			affectableStats.setArmor((affectableStats.armor()-5)-((affected.envStats().level()/10)+(2*super.getXLEVELLevel(invoker()))));
 		else
 		if(affected instanceof Item)
 			affectableStats.setAbility(affectableStats.ability()+1);
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AiryForm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AiryForm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AiryForm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -73,7 +73,9 @@
 		   &&(msg.tool()!=null)
 		   &&(msg.tool() instanceof Item))
 		{
-			int recovery=(int)Math.round(CMath.div((msg.value()),2.0));
+			int recovery=(int)Math.round(CMath.mul((msg.value()),0.75));
+			if((recovery==msg.value())&&(msg.value()>1))
+				recovery=msg.value()-1;
 			msg.setValue(recovery);
 		}
 		return true;
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Anger.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Anger.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Anger.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Philosophy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Philosophy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Philosophy.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,24 +45,25 @@
 	public void affectCharStats(MOB affected, CharStats affectableStats)
 	{
 		super.affectCharStats(affected,affectableStats);
-		int increase = 4;
+		int increase = 1;
 		if (affectableStats.getCurrentClass().baseClass().equals("Fighter"))
-			increase = 4;
+			increase = 1;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Mage"))
-			increase = 6;
+			increase = 2;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Thief"))
-			increase = 5;
+			increase = 1;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Bard"))
-			increase = 5;
+			increase = 1;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Cleric"))
-			increase = 7;
+			increase = 3;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Druid"))
-			increase = 7;
+			increase = 3;
+		increase += (super.getXLEVELLevel(invoker())+2)/3;
 		affectableStats.setStat(CharStats.STAT_WISDOM,affectableStats.getStat(CharStats.STAT_WISDOM) + increase);
 	}
 
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureBlindness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureBlindness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureBlindness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DispelUndead.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Gateway.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Gateway.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Gateway.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Rot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Rot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Rot.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraStrife.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraStrife.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraStrife.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Stasis.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Stasis.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Stasis.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Poison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Poison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Poison.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Vampirism.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Vampirism.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Vampirism.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fortress.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fortress.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fortress.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -70,7 +70,9 @@
 		if((msg.amITarget(mob))
 		   &&(msg.targetMinor()==CMMsg.TYP_DAMAGE))
 		{
-			int recovery=(int)Math.round(CMath.div((msg.value()),2.0));
+			int recovery=(int)Math.round(CMath.mul((msg.value()),0.75));
+			if((recovery==msg.value())&&(msg.value()>1))
+				recovery=msg.value()-1;
 			msg.setValue(recovery);
 		}
 		return true;
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_RestoreVoice.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_RestoreVoice.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_RestoreVoice.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Enervate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Enervate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Enervate.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Gills.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Gills.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Gills.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Calm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Calm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Calm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BlessedHearth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BlessedHearth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BlessedHearth.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Resurrect.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Resurrect.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Resurrect.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseMagic.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseMagic.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseMagic.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Cannibalism.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Cannibalism.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Cannibalism.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Contagion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Contagion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Contagion.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtParalyzation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtParalyzation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtParalyzation.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_UndeniableFaith.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_UndeniableFaith.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_UndeniableFaith.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseTraps.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseTraps.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseTraps.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Wings.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Wings.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Wings.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Deafness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Deafness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Deafness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_IceHealing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_IceHealing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_IceHealing.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Ember.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Ember.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Ember.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -63,7 +63,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel)+3+(2*super.getX1Level(mob)),3);
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel),3+super.getX1Level(mob));
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_FIRE,Weapon.TYPE_BURNING,"The unholy ember <DAMAGE> <T-NAME>!");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Thunderbolt.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Thunderbolt.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Thunderbolt.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -63,7 +63,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					int harming=CMLib.dice().roll(3,adjustedLevel(mob,asLevel),adjustedLevel(mob,asLevel));
+					int harming=CMLib.dice().roll(1,adjustedLevel(mob,asLevel),adjustedLevel(mob,asLevel));
 					CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_ELECTRIC,Weapon.TYPE_STRIKING,"^SThe STRIKE of the gods <DAMAGE> <T-NAME>!^?");
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BloodHearth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BloodHearth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BloodHearth.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -74,7 +74,7 @@
 
     public int castingQuality(MOB mob, Environmental target)
     {
-        if(mob!=null)
+        if((mob!=null)&&(target instanceof Room))
         {
             if((!CMLib.law().doesOwnThisProperty(mob,mob.location()))
             &&(!((mob.getClanID().length()>0)&&(CMLib.law().doesOwnThisProperty(mob.getClanID(),((Room)target))))))
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureDisease.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureDisease.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureDisease.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DeathsDoor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DeathsDoor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DeathsDoor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fertilize.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fertilize.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fertilize.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HuntEvil.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HuntEvil.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HuntEvil.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Weather.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Weather.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Weather.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Desecrate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Desecrate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Desecrate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Nullification.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Nullification.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Nullification.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraHarm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraHarm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraHarm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -87,12 +87,12 @@
 			{
 				if(invoker()!=null)
 				{
-					int harming=CMLib.dice().roll(1,adjustedLevel(invoker(),0)+3,3);
+					int harming=CMLib.dice().roll(1,adjustedLevel(invoker(),0)/3,1);
 					CMLib.combat().postDamage(invoker(),M,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The unholy aura <DAMAGE> <T-NAME>!");
 				}
 				else
 				{
-					int harming=CMLib.dice().roll(1,CMLib.ableMapper().lowestQualifyingLevel(ID())+3,3);
+					int harming=CMLib.dice().roll(1,CMLib.ableMapper().lowestQualifyingLevel(ID())/3,1);
 					CMLib.combat().postDamage(M,M,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The unholy aura <DAMAGE> <T-NAME>!");
 				}
 			}
@@ -104,13 +104,14 @@
     {
         if(mob!=null)
         {
-            if(((MOB)target).charStats().getMyRace().racialCategory().equals("Undead"))
-                return super.castingQuality(mob, target,Ability.QUALITY_BENEFICIAL_SELF);
-            if((target instanceof MOB)&&(target!=mob))
-            {
-                if(((MOB)target).charStats().getMyRace().racialCategory().equals("Undead"))
-                    return super.castingQuality(mob, target,Ability.QUALITY_BENEFICIAL_OTHERS);
-            }
+        	if(target instanceof Room)
+        	{
+        		if(!mob.isInCombat())
+    	            return super.castingQuality(mob, target,Ability.QUALITY_INDIFFERENT);
+	            if(mob.charStats().getMyRace().racialCategory().equals("Undead"))
+	                return super.castingQuality(mob, target,Ability.QUALITY_BENEFICIAL_SELF);
+	            return super.castingQuality(mob, target,Ability.QUALITY_MALICIOUS);
+        	}
         }
         return super.castingQuality(mob,target);
     }
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseUnholiness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseUnholiness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_InfuseUnholiness.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateMummy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateMummy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateMummy.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -146,6 +146,7 @@
 						it++;
 				}
 				body.destroy();
+				newMOB.setStartRoom(null);
 				mob.location().show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 				mob.location().recoverRoomStats();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ChainStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ChainStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ChainStrike.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,8 +64,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int maxDie=adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob));
-		int damage = CMLib.dice().roll(maxDie,8,1);
+		int damage = CMLib.dice().roll(1,adjustedLevel(mob,asLevel)/2,1+(2*super.getX1Level(mob)));
 
 		boolean success=proficiencyCheck(mob,0,auto);
 		if(success)
@@ -116,7 +115,7 @@
 						{
 							CMLib.combat().postDamage(mob,target,this,dmg,CMMsg.MASK_ALWAYS|CMMsg.TYP_ELECTRIC,Weapon.TYPE_STRIKING,"The strike <DAMAGE> <T-NAME>!");
 							damage = (int)Math.round(CMath.div(damage,2.0));
-							if(damage<5){ damage=0; break;}
+							if(damage<2){ damage=0; break;}
 						}
 					}
 				}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMetal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMetal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseMetal.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateGhast.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -148,6 +148,7 @@
 				}
 				body.destroy();
 				mob.location().show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
+				newMOB.setStartRoom(null);
 				mob.location().recoverRoomStats();
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureExhaustion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureExhaustion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureExhaustion.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SunCurse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SunCurse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SunCurse.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyDay.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyDay.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HolyDay.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_EarthMud.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_EarthMud.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_EarthMud.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureCritical.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureCritical.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureCritical.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -84,9 +84,9 @@
 			{
 				mob.location().send(mob,msg);
 				int healing=CMLib.dice().roll(4,adjustedLevel(mob,asLevel),6);
-				int oldHP=mob.curState().getHitPoints();
+				int oldHP=target.curState().getHitPoints();
 				CMLib.combat().postHealing(mob,target,this,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,healing,null);
-				if(mob.curState().getHitPoints()>oldHP)
+				if(target.curState().getHitPoints()>oldHP)
 					target.tell("You feel much better!");
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassHarm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassHarm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassHarm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -78,7 +78,7 @@
 					if(mob.location().okMessage(mob,msg))
 					{
 						mob.location().send(mob,msg);
-						int harming=CMLib.dice().roll(4,adjustedLevel(mob,asLevel)/numEnemies,numEnemies);
+						int harming=CMLib.dice().roll(1,(adjustedLevel(mob,asLevel)+ 24) / numEnemies,8);
 						CMLib.combat().postDamage(mob,target,this,harming,CMMsg.MASK_ALWAYS|CMMsg.TYP_UNDEAD,Weapon.TYPE_BURSTING,"The unholy spell <DAMAGE> <T-NAME>!");
 					}
 				}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateIdol.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateIdol.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CreateIdol.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraIntolerance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraIntolerance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraIntolerance.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineFavor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineFavor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_DivineFavor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SanctifyRoom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SanctifyRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SanctifyRoom.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Purify.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Purify.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Purify.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassCureDisease.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassCureDisease.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassCureDisease.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_HealingAura.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_HealingAura.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_HealingAura.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Etherealness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Etherealness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Etherealness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraHeal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraHeal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraHeal.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -110,13 +110,16 @@
     {
         if(mob!=null)
         {
-            if(((MOB)target).charStats().getMyRace().racialCategory().equals("Undead"))
-                return Ability.QUALITY_INDIFFERENT;
-            if((target instanceof MOB)&&(target!=mob))
-            {
-                if(((MOB)target).charStats().getMyRace().racialCategory().equals("Undead"))
-                    return super.castingQuality(mob, target,Ability.QUALITY_MALICIOUS);
-            }
+        	if(target instanceof MOB)
+        	{
+	            if(((MOB)target).charStats().getMyRace().racialCategory().equals("Undead"))
+	                return Ability.QUALITY_INDIFFERENT;
+	            if(target!=mob)
+	            {
+	                if(((MOB)target).charStats().getMyRace().racialCategory().equals("Undead"))
+	                    return super.castingQuality(mob, target,Ability.QUALITY_MALICIOUS);
+	            }
+        	}
             return super.castingQuality(mob, target,Ability.QUALITY_BENEFICIAL_SELF);
         }
         return super.castingQuality(mob,target);
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_FeedTheDead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_FeedTheDead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_FeedTheDead.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateSkeleton.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateSkeleton.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateSkeleton.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -105,6 +105,7 @@
 				it++;
 		}
 		body.destroy();
+		newMOB.setStartRoom(null);
 		R.show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 		R.recoverRoomStats();
 	}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateZombie.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateZombie.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AnimateZombie.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -144,6 +144,7 @@
 						it++;
 				}
 				body.destroy();
+				newMOB.setStartRoom(null);
 				mob.location().show(newMOB,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> begin(s) to rise!");
 				mob.location().recoverRoomStats();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseGood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseGood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseGood.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Monolith.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Monolith.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Monolith.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -91,7 +91,7 @@
     							&&(M.rangeToTarget()>0)
     							&&(M.rangeToTarget()<3)
     							&&(!M.amDead()))
-    								CMLib.combat().postDamage(invoker,M,this,CMLib.dice().roll(M.envStats().level()/2,6,0),CMMsg.MASK_ALWAYS|CMMsg.TYP_COLD,Weapon.TYPE_PIERCING,"A shard of ice <DAMAGE> <T-NAME>!");
+    								CMLib.combat().postDamage(invoker,M,this,CMLib.dice().roll(M.envStats().level()/2,4,0),CMMsg.MASK_ALWAYS|CMMsg.TYP_COLD,Weapon.TYPE_PIERCING,"A shard of ice <DAMAGE> <T-NAME>!");
     						}
     					    mob.location().showHappens(CMMsg.MSG_OK_ACTION,"The monolith of ice shatters!!!");
     						((Item)affected).destroy();
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseHidden.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseHidden.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseHidden.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Doomspout.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Doomspout.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Doomspout.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Atonement.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Atonement.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Atonement.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtFire.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtFire.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtFire.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassHeal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassHeal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MassHeal.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_FlameWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_FlameWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_FlameWeapon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureCannibalism.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureCannibalism.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureCannibalism.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_MinorInfusion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_MinorInfusion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_MinorInfusion.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseItem.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CurseItem.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraDivineEdict.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraDivineEdict.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_AuraDivineEdict.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sermon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sermon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Sermon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtEvil.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtEvil.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_ProtEvil.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Position.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Position.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Position.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseFatigue.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseFatigue.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CauseFatigue.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_BirdsEye.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_BirdsEye.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_BirdsEye.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureSerious.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureSerious.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_CureSerious.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -85,9 +85,9 @@
 			{
 				mob.location().send(mob,msg);
 				int healing=CMLib.dice().roll(3,adjustedLevel(mob,asLevel),5);
-				int oldHP=mob.curState().getHitPoints();
+				int oldHP=target.curState().getHitPoints();
 				CMLib.combat().postHealing(mob,target,this,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,healing,null);
-				if(mob.curState().getHitPoints()>oldHP)
+				if(target.curState().getHitPoints()>oldHP)
 					target.tell("You feel better!");
                 lastCastHelp=System.currentTimeMillis();
 			}
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fidelity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fidelity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_Fidelity.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseAlignment.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseAlignment.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Prayers/Prayer_SenseAlignment.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Apothecary.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Apothecary.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Apothecary.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/InstrumentMaking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/InstrumentMaking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/InstrumentMaking.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Searching.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Searching.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Searching.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Drilling.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Drilling.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Drilling.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Mining.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Mining.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Mining.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Shipwright.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Shipwright.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Shipwright.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Weaponsmithing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Weaponsmithing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Weaponsmithing.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/AnimalTraining.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/AnimalTraining.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/AnimalTraining.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Weaving.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Weaving.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Weaving.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/MasterLeatherWorking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/MasterLeatherWorking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/MasterLeatherWorking.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/FireBuilding.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/FireBuilding.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/FireBuilding.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Taxidermy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Taxidermy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Taxidermy.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Carpentry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Carpentry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Carpentry.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Costuming.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Costuming.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Costuming.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Digging.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Digging.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Digging.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Hunting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Hunting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Hunting.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/BodyPiercing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/BodyPiercing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/BodyPiercing.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -103,6 +103,13 @@
 		
 		MOB target=super.getTarget(mob,CMParms.makeVector(name),givenTarget);
 		if(target==null) return false;
+		if((target.isMonster())
+		&&(CMLib.flags().aliveAwakeMobile(target,true))
+		&&(!mob.getGroupMembers(new HashSet()).contains(target)))
+		{
+			mob.tell(target.Name()+" doesn't want any piercings.");
+			return false;
+		}
 		
 		int partNum=-1;
 		StringBuffer allParts=new StringBuffer("");
Index: planet_ink/coffee_mud/Abilities/Common/Smelting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Smelting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Smelting.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/SlaveTrading.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/SlaveTrading.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/SlaveTrading.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Tailoring.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Tailoring.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Tailoring.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Butchering.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Butchering.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Butchering.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/ClanCrafting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/ClanCrafting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/ClanCrafting.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Foraging.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Foraging.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Foraging.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/CraftingSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/CraftingSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/CraftingSkill.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,7 +45,6 @@
 	protected boolean mending=false;
 	protected boolean refitting=false;
 	protected boolean messedUp=false;
-	protected static Room fakeRoom=null;
 
 	public CraftingSkill(){super();}
 	
@@ -470,8 +469,7 @@
 		Item building=null;
 		Item key=null;
 		int tries=0;
-		if(fakeRoom==null){ fakeRoom=CMLib.map().getRandomRoom();}
-		MOB mob=CMLib.map().god(fakeRoom);
+		MOB mob=CMLib.map().mobCreated();
 		mob.baseEnvStats().setLevel(Integer.MAX_VALUE/2);
 		mob.baseEnvStats().setSensesMask(mob.baseEnvStats().sensesMask()|EnvStats.CAN_SEE_DARK);
 		mob.recoverEnvStats();
Index: planet_ink/coffee_mud/Abilities/Common/LockSmith.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/LockSmith.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/LockSmith.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/ScrimShaw.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/ScrimShaw.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/ScrimShaw.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/PlantLore.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/PlantLore.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/PlantLore.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/AnimalTaming.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/AnimalTaming.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/AnimalTaming.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Distilling.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Distilling.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Distilling.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Scalp.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Scalp.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Scalp.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Embroidering.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Embroidering.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Embroidering.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Pottery.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Pottery.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Pottery.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Herbalism.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Herbalism.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Herbalism.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Torturesmithing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Torturesmithing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Torturesmithing.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/GatheringSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/GatheringSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/GatheringSkill.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Chopping.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Chopping.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Chopping.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Sculpting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Sculpting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Sculpting.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Lacquerring.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Lacquerring.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Lacquerring.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Unbinding.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Unbinding.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Unbinding.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/CageBuilding.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/CageBuilding.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/CageBuilding.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Dyeing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Dyeing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Dyeing.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Engraving.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Engraving.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Engraving.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/EnhancedCraftingSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/EnhancedCraftingSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/EnhancedCraftingSkill.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -351,16 +351,16 @@
 					{
 					case 0:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),0.2));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.1));
 						break;
 					case 1:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),1.0));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.2));
 						affect.tickDown+=Math.round(0.25 * (double)affect.tickDown);
 						break;
 					case 2:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),2.5));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.3));
 						//addStatAdjustment(item,"DEX","+1");
 						affect.tickDown+=Math.round(0.5 * (double)affect.tickDown);
 						break;
@@ -380,13 +380,13 @@
 					case 1:
 						applyName(item,STAGE_TYPES[type][stage]);
 						item.baseEnvStats().setArmor(atLeast1(item.baseEnvStats().armor(),0.1)+1);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),1.5));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.2));
 						affect.tickDown+=Math.round(0.25 * (double)affect.tickDown);
 						break;
 					case 2:
 						applyName(item,STAGE_TYPES[type][stage]);
 						item.baseEnvStats().setArmor(atLeast1(item.baseEnvStats().armor(),0.25)+1);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),2.5));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.3));
 						//addStatAdjustment(item,"CON","+1");
 						affect.tickDown+=Math.round(0.5 * (double)affect.tickDown);
 						break;
@@ -402,7 +402,7 @@
 						break;
 					case 1:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),1.0));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),1.5));
 						affect.tickDown+=Math.round(0.5 * (double)affect.tickDown);
 						break;
 					case 2:
@@ -424,20 +424,20 @@
 					case 0:
 						applyName(item,STAGE_TYPES[type][stage]);
 						item.baseEnvStats().setDamage(atLeast1(item.baseEnvStats().damage(),0.05));
-						item.setBaseValue(atLeast1(item.baseGoldValue(),0.5));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.1));
 						affect.tickDown+=Math.round(0.25 * (double)affect.tickDown);
 						break;
 					case 1:
 						applyName(item,STAGE_TYPES[type][stage]);
 						item.baseEnvStats().setDamage(atLeast1(item.baseEnvStats().damage(),0.1));
-						item.setBaseValue(atLeast1(item.baseGoldValue(),2.0));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.2));
 						item.baseEnvStats().setWeight(atLeast1(item.baseEnvStats().weight(),0.1));
 						affect.tickDown+=Math.round(0.5 * (double)affect.tickDown);
 						break;
 					case 2:
 						applyName(item,STAGE_TYPES[type][stage]);
 						item.baseEnvStats().setDamage(atLeast1(item.baseEnvStats().damage(),0.15)+1);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),4.0));
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.3));
 						item.baseEnvStats().setWeight(atLeast1(item.baseEnvStats().weight(),0.1));
 						affect.tickDown+=Math.round(0.75 * (double)affect.tickDown);
 						break;
@@ -451,21 +451,21 @@
 					{
 					case 0:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.baseEnvStats().setAttackAdjustment(item.baseEnvStats().attackAdjustment()+5);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),0.5));
+						item.baseEnvStats().setAttackAdjustment(item.baseEnvStats().attackAdjustment()+3);
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.1));
 						affect.tickDown+=Math.round(0.25 * (double)affect.tickDown);
 						break;
 					case 1:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.baseEnvStats().setAttackAdjustment(item.baseEnvStats().attackAdjustment()+10);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),1.5));
+						item.baseEnvStats().setAttackAdjustment(item.baseEnvStats().attackAdjustment()+6);
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.2));
 						item.baseEnvStats().setWeight(atLeast1(item.baseEnvStats().weight(),0.05));
 						affect.tickDown+=Math.round(0.5 * (double)affect.tickDown);
 						break;
 					case 2:
 						applyName(item,STAGE_TYPES[type][stage]);
-						item.baseEnvStats().setAttackAdjustment(item.baseEnvStats().attackAdjustment()+20);
-						item.setBaseValue(atLeast1(item.baseGoldValue(),5.0));
+						item.baseEnvStats().setAttackAdjustment(item.baseEnvStats().attackAdjustment()+9);
+						item.setBaseValue(atLeast1(item.baseGoldValue(),0.3));
 						item.baseEnvStats().setWeight(atLeast1(item.baseEnvStats().weight(),0.1));
 						affect.tickDown+=Math.round(1.25 * (double)affect.tickDown);
 						break;
Index: planet_ink/coffee_mud/Abilities/Common/Alchemy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Alchemy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Alchemy.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Armorsmithing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Armorsmithing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Armorsmithing.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Farming.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Farming.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Farming.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -265,6 +265,11 @@
             commonTell(mob,"'"+mineName+"' is not suitable for use as a seed crop.");
             return false;
         }
+        if(!(isPotentialCrop(mob.location(),code)))
+        {
+            commonTell(mob,"'"+mineName+"' does not seem to be taking root here.");
+            return false;
+        }
         
 		found=null;
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
Index: planet_ink/coffee_mud/Abilities/Common/LeatherWorking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/LeatherWorking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/LeatherWorking.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Speculate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Speculate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Speculate.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Scrapping.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Scrapping.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Scrapping.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/CommonSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/CommonSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/CommonSkill.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -72,6 +72,22 @@
 	public int abilityCode(){return yield;}
 	public void setAbilityCode(int newCode){yield=newCode;}
 
+	public boolean okMessage(Environmental myHost, CMMsg msg)
+	{
+		if(!super.okMessage(myHost, msg))
+			return false;
+		if((myHost instanceof MOB)&&(myHost == this.affected)&&(((MOB)myHost).location()!=null))
+		{
+			if((msg.sourceMinor()==CMMsg.TYP_SHUTDOWN)
+			||((msg.sourceMinor()==CMMsg.TYP_QUIT)&&(msg.amISource((MOB)myHost))))
+			{
+				aborted=true;
+				unInvoke();
+			}
+		}
+		return true;
+	}
+	
 	public boolean tick(Tickable ticking, int tickID)
 	{
 		if((affected!=null)&&(affected instanceof MOB)&&(tickID==Tickable.TICKID_MOB))
@@ -124,11 +140,12 @@
 	protected int getDuration(int baseTicks, MOB mob, int itemLevel, int minDuration)
 	{
 		int ticks=baseTicks;
-		int level=mob.envStats().level();
-		level+=(2*getXTIMELevel(mob));
-		level-=itemLevel;
+		int level=mob.envStats().level() - itemLevel;
 		double pct=CMath.div(level,CMProps.getIntVar(CMProps.SYSTEMI_LASTPLAYERLEVEL))*.5;
 		ticks-=(int)Math.round(CMath.mul(ticks, pct));
+		
+		double quickPct = getXTIMELevel(mob) * 0.05; 
+		ticks-=(int)Math.round(CMath.mul(ticks, quickPct));
 		if(ticks<minDuration) ticks=minDuration;
 		return ticks;
 	}
Index: planet_ink/coffee_mud/Abilities/Common/Masonry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Masonry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Masonry.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Cooking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Cooking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Cooking.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -210,10 +210,10 @@
 					ing=((String)CMParms.parse(I.name()).lastElement()).toUpperCase();
 			else
 				ing=I.name();
-			Integer INT=(Integer)h.get(ing+"/"+I.Name().toUpperCase());
+			Integer INT=(Integer)h.get(ing+"/"+I.secretIdentity().toUpperCase()+"/"+I.Name().toUpperCase()+"/");
 			if(INT==null) INT=new Integer(0);
 			INT=new Integer(INT.intValue()+1);
-			h.put(ing+"/"+I.Name().toUpperCase(),INT);
+			h.put(ing+"/"+I.secretIdentity().toUpperCase()+"/"+I.Name().toUpperCase()+"/",INT);
 		}
 		return h;
 	}
@@ -253,8 +253,7 @@
 					{
 						String ingredient2=contents[i].toUpperCase();
 						int amount2=amounts[i];
-						if((ingredient2.startsWith(ingredient+"/"))
-						||(ingredient2.endsWith(ingredient)))
+						if(ingredient2.indexOf(ingredient+"/")>=0)
 						{
 							amounts[i]=amount2-amount;
 							if(amounts[i]<0) NotEnoughForThisRun=true;
@@ -314,8 +313,7 @@
 			{
 				String ingredient2=((String)Vr.elementAt(vr)).toUpperCase();
 				if((ingredient2.length()>0)
-				&&((ingredient.toUpperCase().startsWith(ingredient2+"/"))
-				||((!perfectOnly)&&ingredient.toUpperCase().endsWith(ingredient2))
+				&&(((!perfectOnly)&&(ingredient.toUpperCase().indexOf(ingredient2+"/"))>=0)
 				||((perfectOnly)&&ingredient.toUpperCase().equalsIgnoreCase(ingredient2))))
 					found=true;
 			}
@@ -348,8 +346,7 @@
 				for(Enumeration e=oldPotContents.keys();e.hasMoreElements();)
 				{
 					String ingredient2=((String)e.nextElement()).toUpperCase();
-					if((ingredient2.startsWith(ingredient.toUpperCase()+"/"))
-					||((perfectOnly)&&ingredient2.endsWith(ingredient.toUpperCase()))
+					if((ingredient2.indexOf(ingredient.toUpperCase()+"/")>=0)
 					||((!perfectOnly)&&ingredient2.equalsIgnoreCase(ingredient.toUpperCase())))
 					{ found=true; break;}
 				}
@@ -729,8 +726,7 @@
 			for(Enumeration e=oldPotContents.keys();e.hasMoreElements();)
 			{
 				String ingredient2=((String)e.nextElement()).toUpperCase();
-				if((ingredient2.startsWith(((String)Vr.elementAt(RCP_MAININGR)).toUpperCase()+"/"))
-				||(ingredient2.endsWith(((String)Vr.elementAt(RCP_MAININGR)).toUpperCase())))
+				if(ingredient2.indexOf(((String)Vr.elementAt(RCP_MAININGR)).toUpperCase()+"/")>=0)
 				{ found=true; break;}
 			}
 			if(found)
Index: planet_ink/coffee_mud/Abilities/Common/Domesticating.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Domesticating.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Domesticating.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Herbology.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Herbology.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Herbology.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Construction.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Construction.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Construction.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/GlassBlowing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/GlassBlowing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/GlassBlowing.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/JewelMaking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/JewelMaking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/JewelMaking.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Shearing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Shearing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Shearing.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Merchant.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Merchant.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Merchant.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Fletching.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Fletching.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Fletching.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Tattooing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Tattooing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Tattooing.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Painting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Painting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Painting.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/AnimalTrading.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/AnimalTrading.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/AnimalTrading.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Bandaging.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Bandaging.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Bandaging.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Blacksmithing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Blacksmithing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Blacksmithing.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/ScrollScribing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/ScrollScribing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/ScrollScribing.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/SmokeRings.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/SmokeRings.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/SmokeRings.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Wainwrighting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Wainwrighting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Wainwrighting.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/Fishing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/Fishing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/Fishing.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Common/PaperMaking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Common/PaperMaking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Common/PaperMaking.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/StdAbility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/StdAbility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/StdAbility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -140,6 +140,12 @@
     	expertise=null;
     	return 0;
     }
+    
+    public synchronized void clearExpertiseCache()
+    {
+    	expertise=null;
+    }
+    
     protected int getX1Level(MOB mob){return expertise(mob,ExpertiseLibrary.XFLAG_X1);}
     protected int getX2Level(MOB mob){return expertise(mob,ExpertiseLibrary.XFLAG_X2);}
     protected int getX3Level(MOB mob){return expertise(mob,ExpertiseLibrary.XFLAG_X3);}
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CriticalShot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CriticalShot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CriticalShot.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Tumble.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Tumble.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Tumble.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_FieldTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_FieldTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_FieldTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_ReturnProjectile.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_ReturnProjectile.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_ReturnProjectile.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_MonkeyPunch.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_MonkeyPunch.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_MonkeyPunch.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Rallycry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Rallycry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Rallycry.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_DesertTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_DesertTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_DesertTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_SwampTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_SwampTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_SwampTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Spring.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Spring.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Spring.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CatchProjectile.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CatchProjectile.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CatchProjectile.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_LightningStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_LightningStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_LightningStrike.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -168,7 +168,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*5;
 		else
@@ -194,7 +194,7 @@
 				if((!anyWeapons(mob))&&(msg.value()<=0))
 				{
 					mob.location().show(mob,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> collapse(s) in exhaustion.");
-					success=maliciousAffect(mob,mob,asLevel,7,-1);
+					success=maliciousAffect(mob,mob,asLevel,9,-1);
 				}
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_AutoBash.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_AutoBash.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_AutoBash.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CounterAttack.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CounterAttack.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CounterAttack.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Behead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Behead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Behead.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -128,7 +128,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*3;
 		else
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_ArmorTweaking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_ArmorTweaking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_ArmorTweaking.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -81,7 +81,10 @@
 	public void affectEnvStats(Environmental affected, EnvStats stats)
 	{
 		if((affected instanceof Item)&&(armorBonus>0)&&(((Item)affected).owner() instanceof MOB))
+		{
 			stats.setArmor(stats.armor()+armorBonus);
+			stats.addAmbiance("^w*^N");
+		}
 	}
 	
     public int castingQuality(MOB mob, Environmental target)
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_AxKick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_AxKick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_AxKick.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_ForestTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_ForestTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_ForestTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/FighterSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/FighterSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/FighterSkill.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Kick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Kick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Kick.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -87,12 +87,13 @@
 			// affected MOB.  Then tell everyone else
 			// what happened.
 			invoker=mob;
-			int topDamage=adjustedLevel(mob,asLevel)+2;
+			int topDamage=(adjustedLevel(mob,asLevel)/2)+2;
 			int damage=CMLib.dice().roll(1,topDamage,0);
+			Room R=mob.location();
 			CMMsg msg=CMClass.getMsg(mob,target,this,CMMsg.MSK_MALICIOUS_MOVE|CMMsg.TYP_JUSTICE|(auto?CMMsg.MASK_ALWAYS:0),null);
-			if(mob.location().okMessage(mob,msg))
+			if((R!=null)&&(R.okMessage(mob,msg)))
 			{
-				mob.location().send(mob,msg);
+				R.send(mob,msg);
 				if(msg.value()>0)
 					damage = (int)Math.round(CMath.div(damage,2.0));
 				CMLib.combat().postDamage(mob,target,this,damage,CMMsg.MASK_ALWAYS|CMMsg.MASK_SOUND|CMMsg.MASK_MOVE|CMMsg.TYP_JUSTICE,Weapon.TYPE_BASHING,"^F^<FIGHT^><S-NAME> <DAMAGE> <T-NAME> with a ferocious KICK!^</FIGHT^>^?"+CMProps.msp("bashed1.wav",30));
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CoupDeGrace.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CoupDeGrace.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CoupDeGrace.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -112,7 +112,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*3;
 		else
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CritStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CritStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CritStrike.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_ShieldBlock.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_ShieldBlock.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_ShieldBlock.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Sweep.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Sweep.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Sweep.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_KiStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_KiStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_KiStrike.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_SideKick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_SideKick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_SideKick.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Rescue.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Rescue.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Rescue.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CoverDefence.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CoverDefence.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CoverDefence.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_WeaponCatch.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_WeaponCatch.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_WeaponCatch.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Fragmentation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Fragmentation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Fragmentation.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_JungleTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_JungleTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_JungleTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Cleave.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Cleave.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Cleave.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CircleTrip.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CircleTrip.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CircleTrip.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_PointBlank.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_PointBlank.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_PointBlank.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Heroism.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Heroism.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Heroism.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Stonebody.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Stonebody.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Stonebody.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CalledStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CalledStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CalledStrike.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Gouge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Gouge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Gouge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Warcry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Warcry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Warcry.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_BlindFighting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_BlindFighting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_BlindFighting.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -43,20 +43,33 @@
 	public boolean isAutoInvoked(){return true;}
 	public boolean canBeUninvoked(){return false;}
     public int classificationCode(){ return Ability.ACODE_SKILL|Ability.DOMAIN_MARTIALLORE;}
+    protected boolean seeEnabled = false;
 
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
 		if(affected==null) return;
 		if(!(affected instanceof MOB)) return;
-		MOB mob=(MOB)affected;
-		if(!mob.isInCombat()) return;
+		if(seeEnabled)
+			affectableStats.setSensesMask(affectableStats.sensesMask()|EnvStats.CAN_SEE_VICTIM);
+	}
+	
+	public boolean tick(Tickable ticking, int tickID)
+	{
+		if(!super.tick(ticking, tickID))
+			return false;
+		seeEnabled = false;
+		if(!(ticking instanceof MOB)) return true;
+		MOB mob=(MOB)ticking;
+		if(!mob.isInCombat()) return true;
 		if((!CMLib.flags().canBeSeenBy(mob.getVictim(),mob))
 		&&(CMLib.flags().canBeHeardBy(mob.getVictim(),mob))
 		&&((mob.fetchAbility(ID())==null)||proficiencyCheck(mob,0,false)))
 		{
-			affectableStats.setSensesMask(affectableStats.sensesMask()|EnvStats.CAN_SEE_VICTIM);
-			helpProficiency(mob);
+			seeEnabled=true;
+			if(CMLib.dice().rollPercentage()<10)
+				helpProficiency(mob);
 		}
+		return true;
 	}
 }
\ No newline at end of file
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyFlip.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyFlip.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyFlip.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_TrueShot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_TrueShot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_TrueShot.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CircleParry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CircleParry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CircleParry.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Pin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Pin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Pin.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -165,7 +165,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*10;
 		else
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_KnifeHand.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_KnifeHand.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_KnifeHand.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Battlecry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Battlecry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Battlecry.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Charge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Charge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Charge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_FlyingKick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_FlyingKick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_FlyingKick.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_SizeOpponent.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_SizeOpponent.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_SizeOpponent.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,10 +64,8 @@
 			if(mob.location().okMessage(mob,msg))
 			{
 				mob.location().send(mob,msg);
-				int adjustedAttack=target.adjustedAttackBonus(mob);
-				int adjustedArmor=(-target.adjustedArmor())+50;
 				StringBuffer buf=new StringBuffer(target.name()+" looks to have "+target.curState().getHitPoints()+" out of "+target.maxState().getHitPoints()+" hit points.\n\r");
-				buf.append(target.charStats().HeShe()+" looks like "+target.charStats().heshe()+" is "+CMLib.combat().fightingProwessStr(adjustedAttack)+" and is "+CMLib.combat().armorStr(adjustedArmor)+".");
+				buf.append(target.charStats().HeShe()+" looks like "+target.charStats().heshe()+" is "+CMLib.combat().fightingProwessStr(target)+" and is "+CMLib.combat().armorStr(target)+".");
 				mob.tell(buf.toString());
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_WeaponBreak.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_WeaponBreak.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_WeaponBreak.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -96,7 +96,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=victim.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=victim.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*5;
 		else
@@ -112,7 +112,7 @@
 		&&((hisWeapon.rawProperLocationBitmap()==Item.WORN_WIELD)
 		   ||(hisWeapon.rawProperLocationBitmap()==Item.WORN_WIELD+Item.WORN_HELD)))
 		{
-			String str=auto?hisWeapon.name()+" break(s) in <T-HIS-HER> hands!":"<S-NAME> disarm(s) <T-NAMESELF> and destroy(s) "+hisWeapon.name()+"!";
+			String str=auto?hisWeapon.name()+" break(s) in <T-HIS-HER> hands!":"<S-NAME> attack(s) <T-NAMESELF> and destroy(s) "+hisWeapon.name()+"!";
 			hisWeapon.unWear();
 			CMMsg msg=CMClass.getMsg(mob,victim,this,CMMsg.MSG_NOISYMOVEMENT,str);
 			if(mob.location().okMessage(mob,msg))
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_BullRush.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_BullRush.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_BullRush.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_PlainsTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_PlainsTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_PlainsTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_FarShot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_FarShot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_FarShot.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyToss.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyToss.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyToss.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Roll.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Roll.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Roll.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Cartwheel.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Cartwheel.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Cartwheel.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_AtemiStrike.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_AtemiStrike.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_AtemiStrike.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -139,7 +139,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*20;
 		else
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_CalledShot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_CalledShot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_CalledShot.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_HillsTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_HillsTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_HillsTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyShield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyShield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_BodyShield.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Intimidate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Intimidate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Intimidate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_DeflectProjectile.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_DeflectProjectile.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_DeflectProjectile.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Shrug.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Shrug.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Shrug.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_ImprovedShieldDefence.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_ImprovedShieldDefence.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_ImprovedShieldDefence.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Whomp.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Whomp.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Whomp.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -149,7 +149,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*10;
 		else
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_BackHand.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_BackHand.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_BackHand.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_RapidShot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_RapidShot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_RapidShot.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_SmokeSignals.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_SmokeSignals.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_SmokeSignals.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_DualParry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_DualParry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_DualParry.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Berzerk.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Berzerk.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Berzerk.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -55,8 +55,8 @@
 		if(invoker!=null)
 		{
 			int xlvl=getXLEVELLevel(invoker());
-			affectableStats.setDamage(affectableStats.damage()+(int)Math.round(CMath.div(affectableStats.damage(),4.0-CMath.mul(0.2,xlvl))));
-			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+(int)Math.round(CMath.div(affectableStats.attackAdjustment(),4.0-CMath.mul(0.2,xlvl))));
+			affectableStats.setDamage(affectableStats.damage()+(int)Math.round(CMath.div(affectableStats.damage(),6.0-CMath.mul(0.2,xlvl))));
+			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+(int)Math.round(CMath.div(affectableStats.attackAdjustment(),6.0-CMath.mul(0.2,xlvl))));
 			affectableStats.setArmor(affectableStats.armor()+20+(2*xlvl));
 		}
 	}
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_Endurance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_Endurance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_Endurance.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_MountainTactics.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_MountainTactics.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_MountainTactics.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Fighter/Fighter_ImprovedThrowing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Fighter/Fighter_ImprovedThrowing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Fighter/Fighter_ImprovedThrowing.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Warrants.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Warrants.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Warrants.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Guitars.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Guitars.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Guitars.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Lullibye.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Lullibye.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Lullibye.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_FalseArrest.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_FalseArrest.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_FalseArrest.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Harmonicas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Harmonicas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Harmonicas.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Befriend.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Befriend.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Befriend.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Flamenco.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Flamenco.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Flamenco.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Thanks.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Thanks.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Thanks.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Stop.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Stop.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Stop.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Swing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Swing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Swing.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_SlowFall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_SlowFall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_SlowFall.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_EscapeBonds.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_EscapeBonds.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_EscapeBonds.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Basse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Basse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Basse.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Serenity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Serenity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Serenity.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Shuffle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Shuffle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Shuffle.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Nothing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Nothing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Nothing.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Xylophones.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Xylophones.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Xylophones.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Solo.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Solo.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Solo.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Detection.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Detection.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Detection.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Morris.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Morris.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Morris.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -73,7 +73,9 @@
 		&&(msg.amISource(invoker))
 		&&(!unInvoked))
 		{
-			if((msg.sourceMinor()==CMMsg.TYP_SPEAK)&&(!CMath.bset(msg.sourceMajor(),CMMsg.MASK_CHANNEL)))
+			if((msg.sourceMinor()==CMMsg.TYP_SPEAK)
+			&&(!(msg.tool() instanceof Song))
+			&&(!CMath.bset(msg.sourceMajor(),CMMsg.MASK_CHANNEL)))
 			{
 				if(msg.source().location()!=null)
 					msg.source().location().show(msg.source(),null,CMMsg.MSG_NOISE,"<S-NAME> stop(s) singing.");
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Disgust.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Disgust.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Disgust.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Juggle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Juggle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Juggle.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Protection.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Protection.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Protection.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Pianos.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Pianos.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Pianos.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Dirge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Dirge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Dirge.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_March.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_March.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_March.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Drums.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Drums.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Drums.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Friendship.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Friendship.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Friendship.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_MarkDisguise.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_MarkDisguise.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_MarkDisguise.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Oboes.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Oboes.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Oboes.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Comprehension.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Comprehension.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Comprehension.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Polka.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Polka.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Polka.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Harps.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Harps.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Harps.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_TuneInstrument.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_TuneInstrument.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_TuneInstrument.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Mana.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Mana.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Mana.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Tango.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Tango.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Tango.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Flight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Flight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Flight.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/BardSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/BardSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/BardSkill.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Silence.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Silence.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Silence.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Valor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Valor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Valor.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Symphony.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Symphony.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Symphony.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_CanCan.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_CanCan.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_CanCan.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Clog.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Clog.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Clog.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Melody.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Melody.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Melody.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Charm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Charm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Charm.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Tarantella.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Tarantella.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Tarantella.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Ditty.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Ditty.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Ditty.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Strength.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Strength.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Strength.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Jitterbug.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Jitterbug.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Jitterbug.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Quickness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Quickness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Quickness.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Reveille.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Reveille.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Reveille.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Ode.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Ode.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Ode.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -277,7 +277,7 @@
 				V.addElement(e.nextElement());
 			Integer I=(Integer)V.elementAt(CMLib.dice().roll(1,V.size(),-1));
 			String[] chk=stuff[I.intValue()];
-			invoker().location().show(invoker(),null,whom,CMMsg.MSG_SPEAK,"<S-NAME> sing(s) '"+chk[3]+"'.");
+			invoker().location().show(invoker(),this,whom,CMMsg.MSG_SPEAK,"<S-NAME> sing(s) '"+chk[3]+"'.");
 		}
 
 
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Trombones.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Trombones.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Trombones.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Spiritual.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Spiritual.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Spiritual.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Jingledress.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Jingledress.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Jingledress.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Accompaniment.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Accompaniment.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Accompaniment.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Dexterity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Dexterity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Dexterity.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Violins.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Violins.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Violins.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Butterfly.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Butterfly.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Butterfly.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Disguise.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Disguise.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Disguise.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Charge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Charge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Charge.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Flying.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Flying.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Flying.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Cymbals.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Cymbals.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Cymbals.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Musette.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Musette.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Musette.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_LoveSong.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_LoveSong.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_LoveSong.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Carol.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Carol.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Carol.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Battlehymn.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Battlehymn.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Battlehymn.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Harmony.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Harmony.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Harmony.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Tubas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Tubas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Tubas.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Rage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Rage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Rage.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Lethargy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Lethargy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Lethargy.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Armor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Armor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Armor.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Mimicry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Mimicry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Mimicry.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Buffoonery.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Buffoonery.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Buffoonery.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Capoeira.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Capoeira.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Capoeira.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_SongWrite.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_SongWrite.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_SongWrite.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Woods.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Woods.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Woods.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Waltz.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Waltz.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Waltz.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Salsa.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Salsa.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Salsa.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_FireBreathing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_FireBreathing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_FireBreathing.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Chantcraft.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Chantcraft.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Chantcraft.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Cotillon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Cotillon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Cotillon.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_War.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_War.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_War.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Health.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Health.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Health.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Conduct.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Conduct.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Conduct.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_RagsSharqi.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_RagsSharqi.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_RagsSharqi.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Seeing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Seeing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Seeing.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Stability.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Stability.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Stability.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_InstrumentBash.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_InstrumentBash.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_InstrumentBash.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Knowledge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Knowledge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Knowledge.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Mercy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Mercy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Mercy.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Trumpets.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Trumpets.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Trumpets.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Break.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Break.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Break.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Grass.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Grass.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Grass.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Mystical.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Mystical.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Mystical.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Death.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Death.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Death.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Horns.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Horns.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Horns.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Tap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Tap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Tap.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Rebirth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Rebirth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Rebirth.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Lightness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Lightness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Lightness.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Flutes.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Flutes.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Flutes.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Blasting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Blasting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Blasting.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Retreat.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Retreat.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Retreat.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Imitation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Imitation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Imitation.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Ballet.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Ballet.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Ballet.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Revelation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Revelation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Revelation.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Foxtrot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Foxtrot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Foxtrot.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Blues.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Blues.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Blues.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Rhythm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Rhythm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Rhythm.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Mute.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Mute.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Mute.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Lullabies.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Lullabies.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Lullabies.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Tribal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Tribal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Tribal.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Ballad.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Ballad.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Ballad.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Background.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Background.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Background.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Puppeteer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Puppeteer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Puppeteer.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -87,22 +87,23 @@
 
 	public boolean tick(Tickable ticking, int tickID)
 	{
+		MOB M=invoker();
 		if((affected!=null)
 		&&(affected instanceof Item)
 		&&(((Item)affected).owner()!=null)
 		&&(((Item)affected).owner() instanceof Room)
-		&&(invoker()!=null)
-		&&(invoker().location().isContent((Item)affected)))
+		&&(M!=null)
+		&&(M.location().isContent((Item)affected)))
 		{
-			if(invoker().isInCombat())
+			if(M.isInCombat())
 			{
-				boolean isHit=(CMLib.combat().rollToHit(invoker().adjustedAttackBonus(invoker().getVictim())+(5*getXLEVELLevel(invoker()))
-                            +((Item)affected).envStats().attackAdjustment(),invoker().getVictim().adjustedArmor()));
+				boolean isHit=(CMLib.combat().rollToHit(CMLib.combat().adjustedAttackBonus(M,M.getVictim())+(5*getXLEVELLevel(M))
+                            +((Item)affected).envStats().attackAdjustment(),CMLib.combat().adjustedArmor(M.getVictim()), 0));
 				if(!isHit)
-					invoker().location().show(invoker(),invoker().getVictim(),affected,CMMsg.MSG_OK_ACTION,"<O-NAME> attacks <T-NAME> and misses!");
+					M.location().show(M,M.getVictim(),affected,CMMsg.MSG_OK_ACTION,"<O-NAME> attacks <T-NAME> and misses!");
 				else
-					CMLib.combat().postDamage(invoker(),invoker().getVictim(),affected,
-											CMLib.dice().roll(1,affected.envStats().level()+(2*getXLEVELLevel(invoker())),1),
+					CMLib.combat().postDamage(M,M.getVictim(),affected,
+											CMLib.dice().roll(1,affected.envStats().level()+(2*getXLEVELLevel(M)),1),
 											CMMsg.MASK_ALWAYS|CMMsg.TYP_WEAPONATTACK,
 											Weapon.TYPE_BASHING,affected.name()+" attacks and <DAMAGE> <T-NAME>!");
 			}
@@ -111,19 +112,19 @@
 			switch(CMLib.dice().roll(1,5,0))
 			{
 			case 1:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" walks around.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" walks around.");
 				break;
 			case 2:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" waves its little arms.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" waves its little arms.");
 				break;
 			case 3:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" hugs you.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" hugs you.");
 				break;
 			case 4:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" makes a few fake attacks.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" makes a few fake attacks.");
 				break;
 			case 5:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" dances around.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" dances around.");
 				break;
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Clarinets.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Clarinets.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Clarinets.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Tempo.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Tempo.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Tempo.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Distraction.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Distraction.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Distraction.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Courante.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Courante.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Courante.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Clumsiness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Clumsiness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Clumsiness.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Swords.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Swords.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Swords.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -92,9 +92,9 @@
 	{
 		if((affected instanceof MOB)&&(!super.tick(ticking,tickID)))
 			return false;
-		if(affected==invoker())
+		MOB M=invoker();
+		if(affected==M)
 		{
-			MOB M=invoker();
 			Weapon sword=null;
 			for(int i=0;i<M.location().numItems();i++)
 			{
@@ -111,7 +111,7 @@
 			if(sword==null) return true;
 			Dance newOne=(Dance)this.copyOf();
 			newOne.invokerManaCost=-1;
-			newOne.startTickDown(invoker(),sword,99999);
+			newOne.startTickDown(M,sword,99999);
 			return true;
 		}
 		else
@@ -119,19 +119,20 @@
 		&&(affected instanceof Item)
 		&&(((Item)affected).owner()!=null)
 		&&(((Item)affected).owner() instanceof Room)
-		&&(invoker()!=null)
-		&&(invoker().location().isContent((Item)affected))
-		&&(invoker().fetchEffect(ID())!=null)
-		&&(CMLib.flags().aliveAwakeMobile(invoker(),true)))
+		&&(M!=null)
+		&&(M.location().isContent((Item)affected))
+		&&(M.fetchEffect(ID())!=null)
+		&&(CMLib.flags().aliveAwakeMobile(M,true)))
 		{
-			if(invoker().isInCombat())
+			MOB victiM=M.getVictim();
+			if(M.isInCombat())
 			{
-				boolean isHit=(CMLib.combat().rollToHit(invoker().adjustedAttackBonus(invoker().getVictim())+((Item)affected).envStats().attackAdjustment(), invoker().getVictim().adjustedArmor()));
+				boolean isHit=(CMLib.combat().rollToHit(CMLib.combat().adjustedAttackBonus(M,victiM)+((Item)affected).envStats().attackAdjustment(), CMLib.combat().adjustedArmor(victiM), 0));
 				if((!isHit)||(!(affected instanceof Weapon)))
-					invoker().location().show(invoker(),invoker().getVictim(),affected,CMMsg.MSG_OK_ACTION,"<O-NAME> attacks <T-NAME> and misses!");
+					M.location().show(M,victiM,affected,CMMsg.MSG_OK_ACTION,"<O-NAME> attacks <T-NAME> and misses!");
 				else
-					CMLib.combat().postDamage(invoker(),invoker().getVictim(),affected,
-											CMLib.dice().roll(1,affected.envStats().damage(),5+getXLEVELLevel(invoker())),
+					CMLib.combat().postDamage(M,victiM,affected,
+											CMLib.dice().roll(1,affected.envStats().damage(),5+getXLEVELLevel(M)),
 											CMMsg.MASK_ALWAYS|CMMsg.TYP_WEAPONATTACK,
 											((Weapon)affected).weaponType(),affected.name()+" attacks and <DAMAGE> <T-NAME>!");
 			}
@@ -140,19 +141,19 @@
 			switch(CMLib.dice().roll(1,5,0))
 			{
 			case 1:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" twiches a bit.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" twiches a bit.");
 				break;
 			case 2:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" is looking for trouble.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" is looking for trouble.");
 				break;
 			case 3:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" practices its moves.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" practices its moves.");
 				break;
 			case 4:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" makes a few fake attacks.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" makes a few fake attacks.");
 				break;
 			case 5:
-				invoker().location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" dances around.");
+				M.location().showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" dances around.");
 				break;
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Butoh.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Butoh.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Butoh.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Manipuri.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Manipuri.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Manipuri.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Organs.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Organs.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Organs.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Prayercraft.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Prayercraft.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Prayercraft.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_SingleMindedness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_SingleMindedness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_SingleMindedness.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Songcraft.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Songcraft.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Songcraft.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Macabre.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Macabre.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Macabre.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Joke.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Joke.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Joke.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Inebriation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Inebriation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Inebriation.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Dance_Square.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Dance_Square.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Dance_Square.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Skill_Slapstick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Skill_Slapstick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Skill_Slapstick.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -111,7 +111,7 @@
 			}
 		}
 		else
-			return beneficialVisualFizzle(mob,target,"<S-NAME> attempt(s) to something silly to <T-NAMESELF>, but fail(s).");
+			return beneficialVisualFizzle(mob,target,"<S-NAME> attempt(s) to do something silly to <T-NAMESELF>, but fail(s).");
 
 		return success;
 	}
Index: planet_ink/coffee_mud/Abilities/Songs/Song_Babble.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Song_Babble.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Song_Babble.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Songs/Play_Instrument.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Songs/Play_Instrument.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Songs/Play_Instrument.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Noise.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Noise.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Noise.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_FlameBurst.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_FlameBurst.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_FlameBurst.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_SnakePit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_SnakePit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_SnakePit.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_GetSpell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_GetSpell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_GetSpell.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Get.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Get.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Get.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_AcidSpray.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_AcidSpray.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_AcidSpray.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Darkfall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Darkfall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Darkfall.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Infected.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Infected.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Infected.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Vanishing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Vanishing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Vanishing.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockGas.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Tripline.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Tripline.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Tripline.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Explosive.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Explosive.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Explosive.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_AcidBurst.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_AcidBurst.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_AcidBurst.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_EnterPit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_EnterPit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_EnterPit.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_GetNeedle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_GetNeedle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_GetNeedle.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_OpenSpell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_OpenSpell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_OpenSpell.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Popper.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Popper.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Popper.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Boomerang.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Boomerang.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Boomerang.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_GetGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_GetGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_GetGas.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Enter.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Enter.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Enter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_AcidPit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_AcidPit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_AcidPit.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Boulders.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Boulders.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Boulders.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Ignition.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Ignition.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Ignition.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Poison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Poison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Poison.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Spark.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Spark.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Spark.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_ElectricShock.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_ElectricShock.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_ElectricShock.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Gluey.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Gluey.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Gluey.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_NeedlePrick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_NeedlePrick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_NeedlePrick.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Smoke.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Smoke.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Smoke.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_EnterNeedle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_EnterNeedle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_EnterNeedle.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Water.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Water.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Water.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_OpenGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_OpenGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_OpenGas.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_FloodRoom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_FloodRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_FloodRoom.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_BearTrap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_BearTrap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_BearTrap.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_WeaponSwing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_WeaponSwing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_WeaponSwing.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Pepper.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Pepper.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Pepper.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_EnterBlade.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_EnterBlade.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_EnterBlade.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_CaveIn.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_CaveIn.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_CaveIn.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Noxious.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Noxious.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Noxious.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_SporeTrap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_SporeTrap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_SporeTrap.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_CrushingRoom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_CrushingRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_CrushingRoom.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockBlade.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockBlade.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockBlade.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Bomb_Spores.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Bomb_Spores.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Bomb_Spores.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_SpikePit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_SpikePit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_SpikePit.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_DeepPit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_DeepPit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_DeepPit.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -47,6 +47,8 @@
 		{
 			target.location().show(target,null,CMMsg.MSG_OK_ACTION,"<S-NAME> hit(s) the pit floor with a THUMP!");
 			int damage=CMLib.dice().roll(trapLevel()+abilityCode(),15,1);
+			int maxDamage = (int)Math.round(CMath.mul(target.baseState().getHitPoints(), .95)); 
+			if(damage >= maxDamage) damage=maxDamage;
 			CMLib.combat().postDamage(invoker(),target,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_JUSTICE,-1,null);
 		}
 		CMLib.commands().postLook(target,true);
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Needle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Needle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Needle.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Open.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Open.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Open.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Launcher.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Launcher.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Launcher.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_PoisonGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_PoisonGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_PoisonGas.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_SpellBlast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_SpellBlast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_SpellBlast.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Trap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Trap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Trap.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_GetBlade.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_GetBlade.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_GetBlade.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Snare.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Snare.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Snare.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_EnterSpell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_EnterSpell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_EnterSpell.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_OpenNeedle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_OpenNeedle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_OpenNeedle.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Avalanche.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Avalanche.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Avalanche.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_RoomPit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_RoomPit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_RoomPit.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_OpenBlade.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_OpenBlade.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_OpenBlade.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Greasy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Greasy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Greasy.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/StdTrap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/StdTrap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/StdTrap.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_Unlock.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_Unlock.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_Unlock.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockSpell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockSpell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockSpell.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_SleepGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_SleepGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_SleepGas.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_RatPit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_RatPit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_RatPit.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/StdBomb.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/StdBomb.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/StdBomb.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_MonsterCage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_MonsterCage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_MonsterCage.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_EnterGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_EnterGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_EnterGas.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockNeedle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockNeedle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Traps/Trap_UnlockNeedle.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Rotten.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Rotten.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Rotten.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Liquor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Liquor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Liquor.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Inebriation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Inebriation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Inebriation.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Peppersauce.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Peppersauce.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Peppersauce.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Glowgell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Glowgell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Glowgell.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Hives.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Hives.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Hives.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Heartstopper.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Heartstopper.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Heartstopper.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -56,7 +56,7 @@
 	protected String POISON_AFFECT(){return "<S-NAME> cringe(s) as the poison courses through <S-HIS-HER> blood.";}
 	protected String POISON_CAST(){return "^F^<FIGHT^><S-NAME> attempt(s) to poison <T-NAMESELF>!^</FIGHT^>^?";}
 	protected String POISON_FAIL(){return "<S-NAME> attempt(s) to poison <T-NAMESELF>, but fail(s).";}
-	protected int POISON_DAMAGE(){return (invoker!=null)?CMLib.dice().roll(2,invoker().envStats().level(),1):0;}
+	protected int POISON_DAMAGE(){return (invoker!=null)?CMLib.dice().roll(1,invoker().envStats().level(),1):0;}
     protected boolean processing=false;
 
 	protected int poisonTick=3;
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Ghoultouch.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Ghoultouch.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Ghoultouch.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Alcohol.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Alcohol.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Alcohol.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Venom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Venom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Venom.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_XXX.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_XXX.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_XXX.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_GoblinDrip.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_GoblinDrip.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_GoblinDrip.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Mindsap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Mindsap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Mindsap.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Caffeine.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Caffeine.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Caffeine.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_BeeSting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_BeeSting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_BeeSting.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Firebreather.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Firebreather.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Firebreather.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Slumberall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Slumberall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Slumberall.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Decreptifier.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Decreptifier.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Decreptifier.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Poisons/Poison_Bloodboil.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Poisons/Poison_Bloodboil.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Poisons/Poison_Bloodboil.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Undead_WeakEnergyDrain.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Undead_WeakEnergyDrain.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Undead_WeakEnergyDrain.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Gasbreath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Gasbreath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Gasbreath.java	(revision 2574)
@@ -13,7 +13,7 @@
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Prisoner.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Prisoner.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Prisoner.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Sinking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Sinking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Sinking.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Paralysis.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Paralysis.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Paralysis.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Allergies.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Allergies.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Allergies.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Bleeding.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Bleeding.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Bleeding.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Falling.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Falling.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Falling.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -91,14 +91,18 @@
 	{
 		if(reversed()) return true;
 		unInvoke();
-		if(isAirRoom(mob.location()))
-			mob.location().show(mob,null,CMMsg.MSG_OK_ACTION,"<S-NAME> stop(s) falling."+CMProps.msp("splat.wav",50));
-		else
-		if(isWaterSurface(mob.location())||isUnderWater(mob.location()))
-			mob.location().show(mob,null,CMMsg.MSG_OK_ACTION,"<S-NAME> hit(s) the water."+CMProps.msp("splat.wav",50));
-		else
-			mob.location().show(mob,null,CMMsg.MSG_OK_ACTION,"<S-NAME> hit(s) the ground."+CMProps.msp("splat.wav",50));
-		CMLib.combat().postDamage(mob,mob,this,damageToTake,CMMsg.MASK_ALWAYS|CMMsg.TYP_JUSTICE,-1,null);
+		Room R=mob.location();
+		if(R!=null)
+		{
+			if(isAirRoom(R))
+				R.show(mob,null,CMMsg.MSG_OK_ACTION,"<S-NAME> stop(s) falling."+CMProps.msp("splat.wav",50));
+			else
+			if(isWaterSurface(R)||isUnderWater(R))
+				R.show(mob,null,CMMsg.MSG_OK_ACTION,"<S-NAME> hit(s) the water."+CMProps.msp("splat.wav",50));
+			else
+				R.show(mob,null,CMMsg.MSG_OK_ACTION,"<S-NAME> hit(s) the ground."+CMProps.msp("splat.wav",50));
+			CMLib.combat().postDamage(mob,mob,this,damageToTake,CMMsg.MASK_ALWAYS|CMMsg.TYP_JUSTICE,-1,null);
+		}
 		mob.delEffect(this);
 		return false;
 	}
Index: planet_ink/coffee_mud/Abilities/Misc/WingFlying.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/WingFlying.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/WingFlying.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/WeakParalysis.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/WeakParalysis.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/WeakParalysis.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Soiled.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Soiled.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Soiled.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Injury.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Injury.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Injury.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Regeneration.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Regeneration.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Regeneration.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Frostbreath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Frostbreath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Frostbreath.java	(revision 2574)
@@ -13,7 +13,7 @@
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Immunities.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Immunities.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Immunities.java	(revision 2574)
@@ -15,7 +15,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/SoundEcho.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/SoundEcho.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/SoundEcho.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Age.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Age.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Age.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -72,6 +72,32 @@
 	public final static String otherBabyEmoter="min=1 max=5 chance=10;wants its mommy.;wants its daddy.;cries.;doesnt like you.;cries for its mommy.;cries for its daddy.";
 	public final static String downBabyEmoter="min=1 max=2 chance=50;wants its mommy.;wants its daddy.;cries.;cries!;cries.";
 
+	protected Race getMyRace()
+	{
+	    if((myRace==null)&&(affected != null))
+	    {
+	    	if(affected instanceof CagedAnimal)
+	    	{
+		        MOB M=((CagedAnimal)affected).unCageMe();
+		        if(M!=null)
+			        myRace=M.baseCharStats().getMyRace();
+		        else
+		        {
+		            Room R=CMLib.map().roomLocation(affected);
+		            if(R!=null)
+		                R.showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" died.");
+		            ((Item)affected).destroy();
+		        }
+	            M.delEffect(M.fetchEffect(ID()));
+	            M.destroy();
+	    	}
+	    	else
+	    	if(affected instanceof MOB)
+	    		myRace=((MOB)affected).charStats().getMyRace();
+	    }
+	    return myRace;
+	}
+	
     protected MOB getFollowing(Environmental babe)
     {
         MOB following=null;
@@ -134,21 +160,7 @@
 		if((affected instanceof Item)&&(affected instanceof CagedAnimal))
 		{
             ((Item)affected).setExpirationDate(0);
-		    if(myRace==null)
-		    {
-		        MOB M=((CagedAnimal)affected).unCageMe();
-		        if(M!=null)
-			        myRace=M.baseCharStats().getMyRace();
-		        else
-		        {
-		            Room R=CMLib.map().roomLocation(affected);
-		            if(R!=null)
-		                R.showHappens(CMMsg.MSG_OK_VISUAL,affected.name()+" died.");
-		            ((Item)affected).destroy();
-		        }
-                M.delEffect(M.fetchEffect(ID()));
-	            M.destroy();
-		    }
+            if(getMyRace()==null) return;
 			if(ellapsed>=myRace.getAgingChart()[1])
 			{
 				Room R=CMLib.map().roomLocation(affected);
@@ -214,7 +226,7 @@
 		{
 			MOB babe=(MOB)affected;
             MOB following=getFollowing(babe);
-		    if(myRace==null) myRace=babe.charStats().getMyRace();
+            if(getMyRace()==null) return;
 			if((babe.getLiegeID().length()==0)&&(!following.getLiegeID().equals(affected.Name())))
 				babe.setLiegeID(following.Name());
 			babe.setBitmap(CMath.unsetb(babe.getBitmap(),MOB.ATT_AUTOASSIST));
@@ -338,10 +350,18 @@
 						newMan.giveItem(babe.fetchInventory(i));
 					CMLib.utensils().outfit(newMan,newMan.baseCharStats().getMyRace().outfit(newMan));
 					CMLib.utensils().outfit(newMan,newMan.baseCharStats().getCurrentClass().outfit(newMan));
+					Vector<Integer> qualifiedStats = new Vector<Integer>();
+					for(int i=CharStats.STAT_MAX_STRENGTH_ADJ;i<CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.NUM_BASE_STATS;i++)
+						if(newMan.baseCharStats().getStat(i)<CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)+7)
+							qualifiedStats.addElement(Integer.valueOf(i));
+					if(qualifiedStats.size()>0)
+					{
+						int stat=qualifiedStats.elementAt(CMLib.dice().roll(1,qualifiedStats.size(),-1));
+						newMan.baseCharStats().setStat(stat,newMan.baseCharStats().getStat(stat)+1);
+					}
 					for(int i=0;i<CharStats.NUM_BASE_STATS;i++)
-						newMan.baseCharStats().setStat(i,newMan.baseCharStats().getStat(i)+1);
-					for(int i=CharStats.STAT_MAX_STRENGTH_ADJ;i<CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.NUM_BASE_STATS;i++)
-						newMan.baseCharStats().setStat(i,newMan.baseCharStats().getStat(i)+1);
+						if(newMan.baseCharStats().getStat(i)<CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT))
+							newMan.baseCharStats().setStat(i,newMan.baseCharStats().getStat(i)+1);
 					newMan.playerStats().setLastDateTime(System.currentTimeMillis());
 					newMan.playerStats().setLastUpdated(System.currentTimeMillis());
 					newMan.recoverCharStats();
@@ -415,6 +435,7 @@
 		if((affected!=null)
 		&&(!affected.amDestroyed()))
 		{
+            if(getMyRace()==null) return;
             if((msg.target()==affected)
             &&(msg.targetMinor()==CMMsg.TYP_EXAMINE))
             {
@@ -485,7 +506,7 @@
 				    if(affected instanceof MOB)
 				    {
 				        mob=(MOB)affected;
-					    if(myRace==null) myRace=((MOB)affected).charStats().getMyRace();
+			            if(getMyRace()==null) return;
 						if(divisor==0.0)
 						    divisor = (double)( CMLib.time().globalClock().getMonthsInYear() *
 						                        CMLib.time().globalClock().getDaysInMonth() *
Index: planet_ink/coffee_mud/Abilities/Misc/Dragonbreath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Dragonbreath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Dragonbreath.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Mike Rundell
+   Copyright 2000-2009 Mike Rundell
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -153,13 +153,13 @@
 				break;
 
 		}
-
-		if(success)
+		Room R=mob.location();
+		if((success)&&(R!=null))
 		{
-
+			
 			if(text().length()==0)
 				setMiscText("");
-			if(mob.location().show(mob,null,this,CMMsg.MSG_NOISYMOVEMENT,auto?autoPhrase:castPhrase))
+			if(R.show(mob,null,this,CMMsg.MSG_NOISYMOVEMENT,auto?autoPhrase:castPhrase))
 			for(Iterator f=h.iterator();f.hasNext();)
 			{
 				MOB target=(MOB)f.next();
@@ -169,9 +169,9 @@
 				// affected MOB.  Then tell everyone else
 				// what happened.
 				CMMsg msg=CMClass.getMsg(mob,target,this,CMMsg.MSK_MALICIOUS_MOVE|strikeType|(auto?CMMsg.MASK_ALWAYS:0),null);
-				if(mob.location().okMessage(mob,msg))
+				if(R.okMessage(mob,msg))
 				{
-					mob.location().send(mob,msg);
+					R.send(mob,msg);
 					invoker=mob;
 
 					int damage = 0;
Index: planet_ink/coffee_mud/Abilities/Misc/Burning.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Burning.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Burning.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -161,6 +161,7 @@
 								((Room)E).recoverRoomStats();
 								return super.tick(ticking,tickID);
 							}
+							((Room)E).showHappens(CMMsg.MSG_OK_VISUAL, affected.name()+" is no longer burning.");
 							((Item)affected).destroy();
 					    }
 						break;
Index: planet_ink/coffee_mud/Abilities/Misc/Undead_ColdTouch.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Undead_ColdTouch.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Undead_ColdTouch.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Antidote.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Antidote.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Antidote.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/ItemRejuv.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/ItemRejuv.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/ItemRejuv.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Firebreath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Firebreath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Firebreath.java	(revision 2574)
@@ -13,7 +13,7 @@
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Undead_LifeDrain.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Undead_LifeDrain.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Undead_LifeDrain.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Lighteningbreath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Lighteningbreath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Lighteningbreath.java	(revision 2574)
@@ -13,7 +13,7 @@
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/TemporaryImmunity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/TemporaryImmunity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/TemporaryImmunity.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Amputation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Amputation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Amputation.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -667,7 +667,7 @@
 					target.recoverEnvStats();
 					target.recoverMaxState();
 					target.location().recoverRoomStats();
-					target.confirmWearability();
+					CMLib.utensils().confirmWearability(target);
 					target.setVictim(vic);
 					mob.setVictim(vic2);
 				}
Index: planet_ink/coffee_mud/Abilities/Misc/Addictions.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Addictions.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Addictions.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Acidbreath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Acidbreath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Acidbreath.java	(revision 2574)
@@ -13,7 +13,7 @@
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/Pregnancy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Pregnancy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Pregnancy.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -297,7 +297,7 @@
 							babe.resetToMaxState();
 							Item I=CMClass.getItem("GenCaged");
 							((CagedAnimal)I).cageMe(babe);
-							I.baseEnvStats().setAbility(1);
+							I.baseEnvStats().setAbility(CagedAnimal.ABILITY_MOBPROGRAMMATICALLY);
 							I.addNonUninvokableEffect((Ability)AGE.copyOf());
 							I.recoverEnvStats();
 							mob.location().addItem(I);
Index: planet_ink/coffee_mud/Abilities/Misc/Undead_EnergyDrain.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Undead_EnergyDrain.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Undead_EnergyDrain.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/QuestBound.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/QuestBound.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/QuestBound.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.Vector;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -76,6 +76,7 @@
 	public boolean isAutoInvoked(){return true;}
 	public boolean isNowAnAutoEffect(){return true;}
 	public Vector externalFiles(){return null;}
+    public void clearExpertiseCache(){}
 
 	public boolean canBeTaughtBy(MOB teacher, MOB student){return false;}
 	public boolean canBePracticedBy(MOB teacher, MOB student){return false;}
Index: planet_ink/coffee_mud/Abilities/Misc/DiseaseCure.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/DiseaseCure.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/DiseaseCure.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Misc/CombatSleep.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/CombatSleep.java	(revision 0)
+++ planet_ink/coffee_mud/Abilities/Misc/CombatSleep.java	(revision 2574)
@@ -0,0 +1,159 @@
+package com.planet_ink.coffee_mud.Abilities.Misc;
+import com.planet_ink.coffee_mud.core.interfaces.*;
+import com.planet_ink.coffee_mud.core.*;
+import com.planet_ink.coffee_mud.Abilities.StdAbility;
+import com.planet_ink.coffee_mud.Abilities.interfaces.*;
+import com.planet_ink.coffee_mud.Areas.interfaces.*;
+import com.planet_ink.coffee_mud.Behaviors.interfaces.*;
+import com.planet_ink.coffee_mud.CharClasses.interfaces.*;
+import com.planet_ink.coffee_mud.Commands.interfaces.*;
+import com.planet_ink.coffee_mud.Common.interfaces.*;
+import com.planet_ink.coffee_mud.Exits.interfaces.*;
+import com.planet_ink.coffee_mud.Items.interfaces.*;
+import com.planet_ink.coffee_mud.Locales.interfaces.*;
+import com.planet_ink.coffee_mud.MOBS.interfaces.*;
+import com.planet_ink.coffee_mud.Races.interfaces.*;
+
+
+import java.util.*;
+
+/* 
+   Copyright 2000-2009 Bo Zimmerman
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+*/
+@SuppressWarnings("unchecked")
+public class CombatSleep extends StdAbility
+{
+	public String ID() { return "Spell_Sleep"; }
+	public String name(){return "Sleep";}
+	public String displayText(){ return "(Asleep)";}
+	protected int canAffectCode(){return CAN_MOBS;}
+	protected int canTargetCode(){return CAN_MOBS;}
+	public int abstractQuality(){return Ability.QUALITY_MALICIOUS;}
+	public boolean putInCommandlist(){return false;}
+	private static final String[] triggerStrings = {"COMBATSLEEP"};
+	public String[] triggerStrings(){return triggerStrings;}
+	public int classificationCode(){return Ability.ACODE_SKILL;}
+	public long flags(){return Ability.FLAG_UNHOLY|Ability.FLAG_PARALYZING;}
+
+	public boolean okMessage(Environmental myHost, CMMsg msg)
+	{
+		if((affected==null)||(!(affected instanceof MOB)))
+			return true;
+
+		MOB mob=(MOB)affected;
+
+		// when this spell is on a MOBs Affected list,
+		// it should consistantly prevent the mob
+		// from trying to do ANYTHING except sleep
+		if((msg.amISource(mob))
+		&&(!CMath.bset(msg.sourceMajor(),CMMsg.MASK_ALWAYS))
+		&&(msg.sourceMajor()>0))
+		{
+			mob.tell("You are way too drowsy.");
+			return false;
+		}
+		return super.okMessage(myHost,msg);
+	}
+
+	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
+	{
+		super.affectEnvStats(affected,affectableStats);
+		// when this spell is on a MOBs Affected list,
+		// it should consistantly put the mob into
+		// a sleeping state, so that nothing they do
+		// can get them out of it.
+		affectableStats.setDisposition(affectableStats.disposition()|EnvStats.IS_SLEEPING);
+	}
+
+
+	public void unInvoke()
+	{
+		// undo the affects of this spell
+		if((affected==null)||(!(affected instanceof MOB)))
+			return;
+		MOB mob=(MOB)affected;
+
+		super.unInvoke();
+		if(canBeUninvoked())
+		{
+			if((!mob.amDead())&&(mob.location()!=null))
+				mob.location().show(mob,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> do(es)n't seem so drowsy any more.");
+			CMLib.commands().postStand(mob,true);
+		}
+	}
+
+    public int castingQuality(MOB mob, Environmental target)
+    {
+        if(mob!=null)
+        {
+            if(target instanceof MOB)
+            {
+                if(((MOB)target).isInCombat())
+                    return Ability.QUALITY_INDIFFERENT;
+            }
+        }
+        return super.castingQuality(mob,target);
+    }
+
+	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
+	{
+		MOB target=this.getTarget(mob,commands,givenTarget);
+		if(target==null) return false;
+
+		// sleep has a 3 level difference for PCs, so check for this.
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*getXLEVELLevel(mob)));
+		if(levelDiff<0) levelDiff=0;
+		if(levelDiff>2) levelDiff=2;
+
+		// the invoke method for spells receives as
+		// parameters the invoker, and the REMAINING
+		// command line parameters, divided into words,
+		// and added as String objects to a vector.
+		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
+			return false;
+
+
+		boolean success=proficiencyCheck(mob,0,auto);
+
+		if(success)
+		{
+			// it worked, so build a copy of this ability,
+			// and add it to the affects list of the
+			// affected MOB.  Then tell everyone else
+			// what happened.
+			invoker=mob;
+			CMMsg msg=CMClass.getMsg(mob,target,this,verbalCastCode(mob,target,auto),auto?"":"^S<S-NAME> make(s) <T-NAMESELF> fall asleep!^?");
+			if(mob.location().okMessage(mob,msg))
+			{
+				mob.location().send(mob,msg);
+				if(msg.value()<=0)
+				{
+					success=maliciousAffect(mob,target,asLevel,3-levelDiff,CMMsg.MSK_CAST_MALICIOUS_VERBAL|CMMsg.TYP_MIND|(auto?CMMsg.MASK_ALWAYS:0));
+					if(success)
+						if(target.location()==mob.location())
+							target.location().show(target,null,CMMsg.MSG_OK_ACTION,"<S-NAME> fall(s) asleep!!");
+				}
+				target.makePeace();
+				if(mob.getVictim()==target) 
+					mob.makePeace();
+			}
+		}
+		else
+			return maliciousFizzle(mob,target,auto?"":"^S<S-NAME> tr(ys) to make <T-NAMESELF> fall asleep, but fails.^?");
+
+		// return whether it worked
+		return success;
+	}
+}
Index: planet_ink/coffee_mud/Abilities/Misc/Mood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Misc/Mood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Misc/Mood.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Resistance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Resistance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Resistance.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WeakBridge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WeakBridge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WeakBridge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqCapacity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqCapacity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqCapacity.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoChannel.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoChannel.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoChannel.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoOrdering.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoOrdering.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoOrdering.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_PracticeDummy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_PracticeDummy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_PracticeDummy.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_UseSpellCast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_UseSpellCast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_UseSpellCast.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoPKill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoPKill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoPKill.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqAlignments.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqAlignments.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqAlignments.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_TicketTaker.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_TicketTaker.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_TicketTaker.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoDamage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoDamage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoDamage.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RoomsForSale.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RoomsForSale.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RoomsForSale.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_FightSpellCast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_FightSpellCast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_FightSpellCast.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WearResister.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WearResister.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WearResister.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_EnterAdjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_EnterAdjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_EnterAdjuster.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -145,7 +145,7 @@
             mob.recoverCharStats();
             mob.recoverEnvStats();
             mob.recoverMaxState();
-            mob.confirmWearability();
+			CMLib.utensils().confirmWearability(mob);
         }
 		return super.okMessage(myHost,msg);
 	}
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_AstralSpirit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_AstralSpirit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_AstralSpirit.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqNoMOB.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqNoMOB.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqNoMOB.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqTattoo.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqTattoo.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqTattoo.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqPKill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqPKill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqPKill.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_OpenPassword.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_OpenPassword.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_OpenPassword.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_SafePet.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_SafePet.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_SafePet.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -33,29 +33,43 @@
 */
 public class Prop_SafePet extends Property
 {
-	boolean disabled=false;
 	public String ID() { return "Prop_SafePet"; }
 	public String name(){ return "Unattackable Pets";}
 	protected int canAffectCode(){return Ability.CAN_MOBS;}
+	boolean disabled=false;
 
 	public String accountForYourself()
 	{ return "Unattackable";	}
 
 	public boolean okMessage(Environmental myHost, CMMsg msg)
 	{
-		if((CMath.bset(msg.targetCode(),CMMsg.MASK_MALICIOUS)
-        &&(msg.target()==affected)
-        &&(affected instanceof MOB)
-        &&(!disabled)))
+		if(affected instanceof MOB)
 		{
+			if(CMath.bset(msg.targetCode(),CMMsg.MASK_MALICIOUS))
+			{
+		        if((msg.amITarget(affected))
+		        &&(!disabled))
+				{
+		            if(!CMath.bset(msg.sourceCode(),CMMsg.MASK_ALWAYS))
+		    			msg.source().tell("Ah, leave "+affected.name()+" alone.");
+		            ((MOB)affected).makePeace();
+					return false;
+				}
+				else
+				if(msg.amISource((MOB)affected))
+					disabled=true;
+			}
+			else
+			if(!((MOB)affected).isInCombat())
+				disabled=false;
+		}
+		else
+		if(CMath.bset(msg.targetCode(),CMMsg.MASK_MALICIOUS) && msg.amITarget(affected))
+		{
             if(!CMath.bset(msg.sourceCode(),CMMsg.MASK_ALWAYS))
     			msg.source().tell("Ah, leave "+affected.name()+" alone.");
-            ((MOB)affected).makePeace();
 			return false;
 		}
-		else
-		if((affected!=null)&&(affected instanceof MOB)&&(CMath.bset(msg.targetCode(),CMMsg.MASK_MALICIOUS))&&(msg.amISource((MOB)affected)))
-			disabled=true;
 		return super.okMessage(myHost,msg);
 	}
 }
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoCharm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoCharm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoCharm.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_LimitedItems.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_LimitedItems.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_LimitedItems.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_MOBEmoter.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_MOBEmoter.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_MOBEmoter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoTeleport.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoTeleport.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoTeleport.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_PeaceMaker.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_PeaceMaker.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_PeaceMaker.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_StatTrainer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_StatTrainer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_StatTrainer.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ClosedDayNight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ClosedDayNight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ClosedDayNight.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqLevels.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqLevels.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqLevels.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RideResister.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RideResister.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RideResister.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HaveResister.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HaveResister.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HaveResister.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RideZapper.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RideZapper.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RideZapper.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqClasses.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqClasses.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqClasses.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HaveZapper.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HaveZapper.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HaveZapper.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_AbsorbDamage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_AbsorbDamage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_AbsorbDamage.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqEntry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqEntry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqEntry.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_CommonTwister.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_CommonTwister.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_CommonTwister.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_TattooAdder.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_TattooAdder.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_TattooAdder.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoSummon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoSummon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoSummon.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RoomUnmappable.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RoomUnmappable.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RoomUnmappable.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_MagicFreedom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_MagicFreedom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_MagicFreedom.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RestrictSpells.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RestrictSpells.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RestrictSpells.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WizInvis.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WizInvis.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WizInvis.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_SparringRoom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_SparringRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_SparringRoom.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqStat.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqStat.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqStat.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoTeleportOut.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoTeleportOut.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoTeleportOut.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ModExperience.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ModExperience.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ModExperience.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_LangTranslator.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_LangTranslator.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_LangTranslator.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Artifact.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Artifact.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Artifact.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoRecall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoRecall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoRecall.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Trashcan.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Trashcan.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Trashcan.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Trainer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Trainer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Trainer.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqRaces.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqRaces.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqRaces.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NewDeathMsg.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NewDeathMsg.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NewDeathMsg.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RoomView.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RoomView.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RoomView.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WearSpellCast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WearSpellCast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WearSpellCast.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Tattoo.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Tattoo.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Tattoo.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Smell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Smell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Smell.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HaveEnabler.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HaveEnabler.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HaveEnabler.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RideEnabler.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RideEnabler.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RideEnabler.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_SpellAdder.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_SpellAdder.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_SpellAdder.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -47,6 +47,16 @@
     protected Vector compiledMask=null;
     protected Vector unrevocableSpells = null;
     
+    public void finalize()
+    {
+    	super.finalize();
+    	spellV=null;
+    	compiledMask=null;
+    	unrevocableSpells=null;
+    	if((invokerMOB!=null)&&(invokerMOB.Name().equals("invoker")))
+    		invokerMOB.destroy();
+    }
+    
     public String getMaskString(String newText)
     {
         int maskindex=newText.toUpperCase().indexOf("MASK=");
@@ -174,13 +184,13 @@
 	        Room R=CMLib.map().roomLocation(target);
 	        if(R==null) R=CMLib.map().roomLocation(target);
 	        if(R==null) R=CMLib.map().getRandomRoom();
-	        mob=CMLib.map().god(R);
+	        mob=CMLib.map().mobCreated(R);
+	        mob.setName("invoker");
 		}
 		invokerMOB=mob;
 		return invokerMOB;
 	}
 
-
     public Vector convertToV2(Vector spellsV, Environmental target)
     {
         Vector VTOO=new Vector();
@@ -278,6 +288,16 @@
         lastMOB=null;
     }
     
+    public void setAffectedOne(Environmental being) 
+    {
+    	super.setAffectedOne(being);
+    	if(being == null)
+    	{
+    		removeMyAffectsFromLastMOB();
+    		finalize();
+    	}
+    }
+    
 	public void removeMyAffectsFrom(Environmental E)
 	{
         if(E==null)return;
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WearZapper.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WearZapper.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WearZapper.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_SpellReflecting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_SpellReflecting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_SpellReflecting.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Transporter.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Transporter.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Transporter.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Crawlspace.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Crawlspace.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Crawlspace.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Property.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Property.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Property.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.Vector;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -249,6 +249,7 @@
 	public void makeNonUninvokable(){}
 	private static final int[] cost=new int[3];
 	public int[] usageCost(MOB mob,boolean ignoreCostOverride){return cost;}
+    public void clearExpertiseCache(){}
 
 
 	public void addEffect(Ability to){}
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Familiar.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Familiar.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Familiar.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WearEnabler.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WearEnabler.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WearEnabler.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_AddDamage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_AddDamage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_AddDamage.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ItemNoRuin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ItemNoRuin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ItemNoRuin.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoTelling.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoTelling.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoTelling.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ItemTransReceiver.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ItemTransReceiver.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ItemTransReceiver.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_LotsForSale.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_LotsForSale.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_LotsForSale.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Weather.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Weather.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Weather.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_LocationBound.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_LocationBound.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_LocationBound.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WearAdjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WearAdjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WearAdjuster.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ItemTransporter.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ItemTransporter.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ItemTransporter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RoomWatch.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RoomWatch.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RoomWatch.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Retainable.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Retainable.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Retainable.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_CombatAdjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_CombatAdjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_CombatAdjuster.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Doppleganger.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Doppleganger.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Doppleganger.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NarrowLedge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NarrowLedge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NarrowLedge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_EnlargeRoom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_EnlargeRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_EnlargeRoom.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Invisibility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Invisibility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Invisibility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RoomDark.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RoomDark.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RoomDark.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_NoPurge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_NoPurge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_NoPurge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ReqHeight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ReqHeight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ReqHeight.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Adjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Adjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Adjuster.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_ClosedSeason.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_ClosedSeason.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_ClosedSeason.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_AreaForSale.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_AreaForSale.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_AreaForSale.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HaveAdjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HaveAdjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HaveAdjuster.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HereAdjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HereAdjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HereAdjuster.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RideAdjuster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RideAdjuster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RideAdjuster.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_WeaponImmunity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_WeaponImmunity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_WeaponImmunity.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RoomForSale.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RoomForSale.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RoomForSale.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_AbilityImmunity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_AbilityImmunity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_AbilityImmunity.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_UseSpellCast2.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_UseSpellCast2.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_UseSpellCast2.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_StayAboard.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_StayAboard.java	(revision 0)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_StayAboard.java	(revision 2574)
@@ -0,0 +1,112 @@
+package com.planet_ink.coffee_mud.Abilities.Properties;
+import com.planet_ink.coffee_mud.core.interfaces.*;
+import com.planet_ink.coffee_mud.core.*;
+import com.planet_ink.coffee_mud.Abilities.interfaces.*;
+import com.planet_ink.coffee_mud.Areas.interfaces.*;
+import com.planet_ink.coffee_mud.Behaviors.interfaces.*;
+import com.planet_ink.coffee_mud.CharClasses.interfaces.*;
+import com.planet_ink.coffee_mud.Commands.interfaces.*;
+import com.planet_ink.coffee_mud.Common.interfaces.*;
+import com.planet_ink.coffee_mud.Exits.interfaces.*;
+import com.planet_ink.coffee_mud.Items.interfaces.*;
+import com.planet_ink.coffee_mud.Locales.interfaces.*;
+import com.planet_ink.coffee_mud.MOBS.interfaces.*;
+import com.planet_ink.coffee_mud.Races.interfaces.*;
+
+import java.util.*;
+
+/* 
+   Copyright 2000-2009 Bo Zimmerman
+
+   Licensed under the Apache License, Version 2.0 (the "License");
+   you may not use this file except in compliance with the License.
+   You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+   Unless required by applicable law or agreed to in writing, software
+   distributed under the License is distributed on an "AS IS" BASIS,
+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+   See the License for the specific language governing permissions and
+   limitations under the License.
+*/
+public class Prop_StayAboard extends Property
+{
+	public String ID() { return "Prop_StayAboard"; }
+	public String name(){ return "Stays on mounted thing";}
+	protected int canAffectCode(){return Ability.CAN_ITEMS|Ability.CAN_MOBS;}
+    protected Rideable rideable=null;
+    public String accountForYourself() { return "Stays on anything mounted to.";}
+    protected boolean noRepeat=false;
+    
+    public void setAffectedOne(Environmental E)
+    {
+    	super.setAffectedOne(E);
+    	if(E instanceof Rider) {
+    		rideable = ((Rider)E).riding();
+    	}
+    }
+    
+    public boolean tick(Tickable ticking, int tickID)
+    {
+    	if(!super.tick(ticking, tickID))
+    		return false;
+    	synchronized(this)
+    	{
+    		if(noRepeat) return true;
+    		try {
+	    		noRepeat=true;
+		    	if((tickID==Tickable.TICKID_MOB)
+		    	&&(ticking instanceof Rider)
+		    	&&(ticking instanceof MOB)
+		    	&&(rideable!=null))
+		    		stayAboard((Rider)ticking);
+    		} finally {
+    			noRepeat=false;
+    		}
+    	}
+    	return true;
+    }
+    
+    public void stayAboard(Rider R)
+    {
+		Room rideR=CMLib.map().roomLocation(rideable);
+		if((rideR!=null)
+		&&((CMLib.map().roomLocation(R)!=rideR)
+			||(R.riding()!=rideable)))
+		{
+			if(R.riding()!=null)
+				R.setRiding(null);
+			if(CMLib.map().roomLocation(R)!=rideR)
+				if(R instanceof Item)
+					rideR.bringItemHere((Item)R,-1,true);
+				else
+				if(R instanceof MOB)
+					rideR.bringMobHere((MOB)R,true);
+			R.setRiding(rideable);
+		}
+    }
+    
+    public void affectEnvStats(Environmental E, EnvStats affectableStats)
+    {
+    	super.affectEnvStats(E, affectableStats);
+    	synchronized(this)
+    	{
+    		if(noRepeat) return;
+    		try {
+	    		noRepeat=true;
+		    	if(E instanceof Rider)
+		    		if(rideable==null)
+			    		rideable=((Rider)E).riding();
+		    		else
+		    		if(!CMLib.flags().isInTheGame(rideable,true))
+		    			rideable=null;
+		    		else
+		    		if(E instanceof Item)
+		    			stayAboard((Rider)E);
+    		} finally {
+    			noRepeat=false;
+    		}
+    	}
+    }
+}
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_Hidden.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_Hidden.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_Hidden.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HaveSpellCast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HaveSpellCast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HaveSpellCast.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_HereSpellCast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_HereSpellCast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_HereSpellCast.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Properties/Prop_RideSpellCast.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Properties/Prop_RideSpellCast.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Properties/Prop_RideSpellCast.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/SuperPowers/Power_WebSpinning.java
===================================================================
--- planet_ink/coffee_mud/Abilities/SuperPowers/Power_WebSpinning.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/SuperPowers/Power_WebSpinning.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/SuperPowers/Power_TrapSense.java
===================================================================
--- planet_ink/coffee_mud/Abilities/SuperPowers/Power_TrapSense.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/SuperPowers/Power_TrapSense.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/SuperPowers/Power_SuperClimb.java
===================================================================
--- planet_ink/coffee_mud/Abilities/SuperPowers/Power_SuperClimb.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/SuperPowers/Power_SuperClimb.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/SuperPowers/Power_OctoArms.java
===================================================================
--- planet_ink/coffee_mud/Abilities/SuperPowers/Power_OctoArms.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/SuperPowers/Power_OctoArms.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/SuperPowers/SuperPower.java
===================================================================
--- planet_ink/coffee_mud/Abilities/SuperPowers/SuperPower.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/SuperPowers/SuperPower.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/SuperPowers/Power_OctoGrapple.java
===================================================================
--- planet_ink/coffee_mud/Abilities/SuperPowers/Power_OctoGrapple.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/SuperPowers/Power_OctoGrapple.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -160,7 +160,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*10;
 		else
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Safecracking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Safecracking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Safecracking.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Snatch.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Snatch.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Snatch.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_IdentifyTraps.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_IdentifyTraps.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_IdentifyTraps.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedPeek.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedPeek.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedPeek.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Flay.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Flay.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Flay.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Graffiti.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Graffiti.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Graffiti.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Observation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Observation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Observation.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SilentLoot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SilentLoot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SilentLoot.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Kamikaze.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Kamikaze.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Kamikaze.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedSwipe.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedSwipe.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedSwipe.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_UndergroundConnections.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_UndergroundConnections.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_UndergroundConnections.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Countertracking.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Countertracking.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Countertracking.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_DisablingCaltrops.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_DisablingCaltrops.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_DisablingCaltrops.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Search.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Search.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Search.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_RemoveTraps.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_RemoveTraps.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_RemoveTraps.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Hide.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Hide.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Hide.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_BackStab.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_BackStab.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_BackStab.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Espionage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Espionage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Espionage.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_HideOther.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_HideOther.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_HideOther.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_StrategicRetreat.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_StrategicRetreat.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_StrategicRetreat.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Distract.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Distract.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Distract.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_HighMarks.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_HighMarks.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_HighMarks.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Detection.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Detection.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Detection.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedSteal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedSteal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedSteal.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/ThiefSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/ThiefSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/ThiefSkill.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SlipperyMind.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SlipperyMind.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SlipperyMind.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SenseLaw.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SenseLaw.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SenseLaw.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_ConcealItem.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_ConcealItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_ConcealItem.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Bribe.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Bribe.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Bribe.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SilentDrop.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SilentDrop.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SilentDrop.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Peek.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Peek.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Peek.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_UsePoison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_UsePoison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_UsePoison.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Shadow.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Shadow.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Shadow.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_EscapeBonds.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_EscapeBonds.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_EscapeBonds.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Pick.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Pick.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Pick.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SneakAttack.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SneakAttack.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SneakAttack.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Nondetection.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Nondetection.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Nondetection.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Palm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Palm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Palm.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedCaltrops.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedCaltrops.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_ImprovedCaltrops.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_IdentifyBombs.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_IdentifyBombs.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_IdentifyBombs.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_TrophyCount.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_TrophyCount.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_TrophyCount.java	(revision 2574)
@@ -18,7 +18,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Alertness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Alertness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Alertness.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SilentGold.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SilentGold.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SilentGold.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_FrameMark.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_FrameMark.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_FrameMark.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Racketeer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Racketeer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Racketeer.java	(revision 2574)
@@ -9,7 +9,7 @@
 import com.planet_ink.coffee_mud.core.interfaces.*;
 
 /*
- * Copyright 2000-2008 Bo Zimmerman, Lee Fox Licensed under the Apache License,
+ * Copyright 2000-2009 Bo Zimmerman, Lee Fox Licensed under the Apache License,
  * Version 2.0 (the "License"); you may not use this file except in compliance
  * with the License. You may obtain a copy of the License at
  * http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Trap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Trap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Trap.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Lure.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Lure.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Lure.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_SetAlarm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_SetAlarm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_SetAlarm.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Comprehension.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Comprehension.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Comprehension.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_TagTurf.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_TagTurf.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_TagTurf.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Embezzle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Embezzle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Embezzle.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Assassinate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Assassinate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Assassinate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Ambush.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Ambush.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Ambush.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Autocaltrops.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Autocaltrops.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Autocaltrops.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_TapRoom.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_TapRoom.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_TapRoom.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_DisassembleTrap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_DisassembleTrap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_DisassembleTrap.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Safehouse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Safehouse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Safehouse.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_DetectTraps.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_DetectTraps.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_DetectTraps.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Panhandling.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Panhandling.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Panhandling.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Sap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Sap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Sap.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -151,7 +151,7 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*3;
 		else
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_ContractHit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_ContractHit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_ContractHit.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -103,6 +103,7 @@
 					M.text(); // this establishes his current state.
 					hitmen.addElement(M);
 					M.bringToLife(mob.location(),true);
+					M.setStartRoom(null);
 					M.setVictim(mob);
 					mob.setVictim(M);
 					Ability A=M.fetchAbility("Thief_Hide");
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_AutoDetectTraps.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_AutoDetectTraps.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_AutoDetectTraps.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Thief/Thief_Bind.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Thief/Thief_Bind.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Thief/Thief_Bind.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -199,7 +199,7 @@
 						amountRemaining=(mob.charStats().getStat(CharStats.STAT_STRENGTH)+mob.envStats().level()+(2*getXLEVELLevel(mob)))*((int)Math.round(5.0+prof));
 					}
 					else
-						amountRemaining=(adjustedLevel(mob,asLevel)+getXLEVELLevel(mob))*25;
+						amountRemaining=(adjustedLevel(mob,asLevel))*25;
 					if((target.location()==mob.location())||(auto))
 						success=maliciousAffect(mob,target,asLevel,Integer.MAX_VALUE-1000,-1);
 				}
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Obesity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Obesity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Obesity.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -87,10 +87,16 @@
         setMiscText(""+(amountOfFat()+change));
 	}
 
+	public void affectCharStats(MOB affectedMob, CharStats affectableStats)
+	{
+		super.affectCharStats(affectedMob, affectableStats);
+	    affectableStats.setStat(CharStats.STAT_WEIGHTADJ, 
+    		affectableStats.getStat(CharStats.STAT_WEIGHTADJ)
+    		+(int)Math.round(CMath.mul(affectedMob.baseEnvStats().weight(),CMath.div(CMath.s_int(text()),100.0))));
+	}
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 	    super.affectEnvStats(affected,affectableStats);
-	    affectableStats.setWeight(affectableStats.weight()+(int)Math.round(CMath.mul(affectableStats.weight(),CMath.div(CMath.s_int(text()),100.0))));
 	}
 	
 	public void affectCharState(MOB affected, CharState affectableState)
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Narcolepsy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Narcolepsy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Narcolepsy.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Aids.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Aids.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Aids.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Giggles.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Giggles.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Giggles.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Tetnus.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Tetnus.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Tetnus.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Lepresy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Lepresy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Lepresy.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Gonorrhea.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Gonorrhea.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Gonorrhea.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_MummyRot.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_MummyRot.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_MummyRot.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Blahs.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Blahs.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Blahs.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Fleas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Fleas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Fleas.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Chlamydia.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Chlamydia.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Chlamydia.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_Cancer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_Cancer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_Cancer.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_PoisonIvy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_PoisonIvy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_PoisonIvy.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Diseases/Disease_FrostBite.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Diseases/Disease_FrostBite.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Diseases/Disease_FrostBite.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_EdgedWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_EdgedWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_EdgedWeapon.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Staff.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Staff.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Staff.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Natural.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Natural.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Natural.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -48,7 +48,7 @@
 		&&(affected instanceof MOB)
 		&&(msg.amISource((MOB)affected))
 		&&(msg.targetMinor()==CMMsg.TYP_WEAPONATTACK)
-		&&((msg.tool()==null)))
+		&&((!(msg.tool() instanceof Weapon))||(((Weapon)msg.tool()).weaponClassification()==Weapon.CLASS_NATURAL)))
 			helpProficiency((MOB)affected);
 	}
 
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Hammer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Hammer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Hammer.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Weapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Weapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Weapon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -93,7 +93,7 @@
 			&&(msg.tool() instanceof Weapon)
 			&&(!((Weapon)msg.tool()).amWearingAt(Item.IN_INVENTORY))
 			&&(msg.value()>0))
-				msg.setValue(msg.value()+(2*this.getDamageBonus(msg.source(),((Weapon)msg.tool()).weaponType())));
+				msg.setValue(msg.value()+(this.getDamageBonus(msg.source(),((Weapon)msg.tool()).weaponType())));
 		}
 	}
 
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_FlailedWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_FlailedWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_FlailedWeapon.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Axe.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Axe.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Axe.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_BluntWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_BluntWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_BluntWeapon.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Sword.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Sword.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Sword.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Polearm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Polearm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Polearm.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Specializations/Specialization_Ranged.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Specializations/Specialization_Ranged.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Specializations/Specialization_Ranged.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_WildernessLore.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_WildernessLore.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_WildernessLore.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_MountedCombat.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_MountedCombat.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_MountedCombat.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_ArrestingSap.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_ArrestingSap.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_ArrestingSap.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -196,7 +196,7 @@
 			    return false;
 			}
 		}
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*3;
 		else
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Recall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Recall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Recall.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -52,11 +52,17 @@
 		if(success)
 		{
 			Room recalledRoom=mob.location();
+			if(recalledRoom == null) return false;
 			Room recallRoom=CMLib.map().getStartRoom(mob);
             if((recallRoom==null)&&(!mob.isMonster()))
             {
                 mob.setStartRoom(CMLib.login().getDefaultStartRoom(mob));
                 recallRoom=CMLib.map().getStartRoom(mob);
+                if(recallRoom == null)
+                {
+                	mob.tell("You've nowhere to recall TO!");
+                	return false;
+                }
             }
             
 			CMMsg msg=CMClass.getMsg(mob,recalledRoom,this,CMMsg.MSG_RECALL,CMMsg.MSG_LEAVE,CMMsg.MSG_RECALL,auto?"<S-NAME> disappear(s) into the Java Plain!":"<S-NAME> recall(s) body and spirit to the Java Plain!");
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Feint.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Feint.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Feint.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_WandUse.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_WandUse.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_WandUse.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Slip.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Slip.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Slip.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_RegionalAwareness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_RegionalAwareness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_RegionalAwareness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Flee.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Flee.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Flee.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Bash.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Bash.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Bash.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -106,7 +106,7 @@
 					w.setName(thisShield.name());
 					w.setDisplayText(thisShield.displayText());
 					w.setDescription(thisShield.description());
-					w.baseEnvStats().setDamage(thisShield.envStats().level()+5+(2*getXLEVELLevel(mob)));
+					w.baseEnvStats().setDamage(thisShield.envStats().level()+(2*getXLEVELLevel(mob)));
 					if((CMLib.combat().postAttack(mob,target,w))
 					&&(target.charStats().getBodyPart(Race.BODY_LEG)>0)
 					&&(target.envStats().weight()<(mob.envStats().weight()*2)))
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Leeching.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Leeching.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Leeching.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Trip.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Trip.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Trip.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Swim.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Swim.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Swim.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Convert.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Convert.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Convert.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Climb.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Climb.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Climb.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Haggle.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Haggle.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Haggle.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Write.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Write.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Write.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Attack3.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Attack3.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Attack3.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Parry.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Parry.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Parry.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -83,7 +83,7 @@
 				&&(((Weapon)attackerWeapon).weaponClassification()!=Weapon.CLASS_THROWN))
 				{
 					CMMsg msg2=CMClass.getMsg(mob,msg.source(),this,CMMsg.MSG_NOISYMOVEMENT,"<S-NAME> parr(ys) "+attackerWeapon.name()+" attack from <T-NAME>!");
-					if((proficiencyCheck(null,mob.charStats().getStat(CharStats.STAT_DEXTERITY)-90+(2*getXLEVELLevel(mob)),false))
+					if((proficiencyCheck(null,mob.charStats().getStat(CharStats.STAT_DEXTERITY)-90+(getXLEVELLevel(mob)),false))
 					&&(mob.location().okMessage(mob,msg2)))
 					{
 						doneThisRound=true;
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_BellyRolling.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_BellyRolling.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_BellyRolling.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Cage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Cage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Cage.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Resistance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Resistance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Resistance.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_ControlUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_ControlUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_ControlUndead.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Dirt.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Dirt.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Dirt.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_AttackHalf.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_AttackHalf.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_AttackHalf.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_TwoWeaponFighting.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_TwoWeaponFighting.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_TwoWeaponFighting.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_IdentifyPoison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_IdentifyPoison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_IdentifyPoison.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Track.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Track.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Track.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_TurnUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_TurnUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_TurnUndead.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Map.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Map.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Map.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Explosive.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Explosive.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Explosive.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_HandCuff.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_HandCuff.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_HandCuff.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Disarm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Disarm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Disarm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Dodge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Dodge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Dodge.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -67,7 +67,7 @@
 			  &&(((Weapon)msg.tool()).weaponClassification()!=Weapon.CLASS_THROWN))))
 		{
 			CMMsg msg2=CMClass.getMsg(mob,msg.source(),null,CMMsg.MSG_QUIETMOVEMENT,"<S-NAME> dodge(s) the attack by <T-NAME>!");
-			if((proficiencyCheck(null,mob.charStats().getStat(CharStats.STAT_DEXTERITY)-93+(3*getXLEVELLevel(mob)),false))
+			if((proficiencyCheck(null,mob.charStats().getStat(CharStats.STAT_DEXTERITY)-93+(getXLEVELLevel(mob)),false))
 			&&(msg.source().getVictim()==mob)
 		    &&(!doneThisRound)
 			&&(mob.location().okMessage(mob,msg2)))
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_CollectBounty.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_CollectBounty.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_CollectBounty.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_JailKey.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_JailKey.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_JailKey.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_ScrollCopy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_ScrollCopy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_ScrollCopy.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Attack2.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Attack2.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Attack2.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/StdSkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/StdSkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/StdSkill.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Revoke.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Revoke.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Revoke.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Chirgury.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Chirgury.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Chirgury.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_AllBreathing.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_AllBreathing.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_AllBreathing.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Enslave.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Enslave.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Enslave.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Meditation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Meditation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Meditation.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_UndeadInvisibility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_UndeadInvisibility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_UndeadInvisibility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Spellcraft.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Spellcraft.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Spellcraft.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Skills/Skill_Arrest.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Skills/Skill_Arrest.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Skills/Skill_Arrest.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -110,7 +110,7 @@
 				return false;
 			}
 		}
-		int levelDiff=target.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff>0)
 			levelDiff=levelDiff*3;
 		else
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistIndignities.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistIndignities.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistIndignities.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Light.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Light.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Light.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistArrows.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistArrows.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistArrows.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Boomerang.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Boomerang.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Boomerang.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_LightenItem.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_LightenItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_LightenItem.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FleshStone.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FleshStone.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FleshStone.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectGold.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectGold.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectGold.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_AlterSubstance.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_AlterSubstance.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_AlterSubstance.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Disenchant.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Disenchant.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Disenchant.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_EnchantArmor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_EnchantArmor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_EnchantArmor.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -53,7 +53,7 @@
 			mob.tell(mob,target,null,"You can't enchant <T-NAME> with an Enchant Armor spell!");
 			return false;
 		}
-		if((target.envStats().ability()>2)&&(!auto))
+		if(target.envStats().ability()>2)
 		{
 			mob.tell(target.name()+" cannot be enchanted further.");
 			return false;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_RogueLimb.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_RogueLimb.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_RogueLimb.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -138,8 +138,8 @@
 					rogueLimb=CMClass.getMOB("GenMob");
 					rogueLimb.setName(target.name()+"'s "+limb);
 					rogueLimb.setDisplayText(rogueLimb.name()+" is misbehaving here.");
-					rogueLimb.baseEnvStats().setAttackAdjustment((-target.adjustedArmor())+50);
-					rogueLimb.baseEnvStats().setArmor(100-target.adjustedAttackBonus(null));
+					rogueLimb.baseEnvStats().setAttackAdjustment(target.envStats().attackAdjustment());
+					rogueLimb.baseEnvStats().setArmor(target.envStats().armor());
 					rogueLimb.baseCharStats().setMyRace(theRace);
 					int hp=100;
 					if(hp>(target.baseState().getHitPoints()/3))
@@ -154,6 +154,7 @@
 					rogueLimb.recoverCharStats();
 					rogueLimb.recoverEnvStats();
 					rogueLimb.resetToMaxState();
+					rogueLimb.setStartRoom(null);
 					rogueLimb.bringToLife(mob.location(),true);
 					CMLib.beanCounter().clearZeroMoney(rogueLimb,null);
 					rogueLimb.setVictim(target);
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_KnowOrigin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_KnowOrigin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_KnowOrigin.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -61,7 +61,7 @@
 				if(E!=null) return CMLib.map().getStartRoom(E);
 				E=CMLib.map().findFirstInventory(CMLib.map().rooms(), mob, srchStr, 10);
 				if(E!=null) return CMLib.map().getStartRoom(E);
-		    	return CMLib.map().findWorldRoomLiberally(mob,srchStr, "I",10);
+		    	return CMLib.map().findWorldRoomLiberally(mob,srchStr, "I",10,600);
 		    }catch(NoSuchElementException nse){}
 		}
 		return null;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SummonMonster.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SummonMonster.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SummonMonster.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Daydream.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Daydream.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Daydream.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SongShield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SongShield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SongShield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Siphon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Siphon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Siphon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Blur.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Blur.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Blur.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_HeatMetal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_HeatMetal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_HeatMetal.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DispelDivination.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DispelDivination.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DispelDivination.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Cogniportive.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Cogniportive.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Cogniportive.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectMagic.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectMagic.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectMagic.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Mute.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Mute.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Mute.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ForkedLightning.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ForkedLightning.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ForkedLightning.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -79,7 +79,7 @@
 					invoker=mob;
 
 					int maxDie=(int)Math.round(CMath.div(adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob)),2.0));
-					int damage = CMLib.dice().roll(maxDie,8,1);
+					int damage = CMLib.dice().roll(maxDie,7,1);
 					if((msg.value()>0)||(msg2.value()>0))
 						damage = (int)Math.round(CMath.div(damage,2.0));
 					if(target.location()==mob.location())
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MarkerSummoning.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MarkerSummoning.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MarkerSummoning.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FakeFood.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FakeFood.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FakeFood.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Hungerless.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Hungerless.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Hungerless.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Blindness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Blindness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Blindness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistBludgeoning.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistBludgeoning.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistBludgeoning.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FakeSpring.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FakeSpring.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FakeSpring.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Fly.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Fly.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Fly.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Claireaudience.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Claireaudience.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Claireaudience.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_IncreaseGravity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_IncreaseGravity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_IncreaseGravity.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Delude.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Delude.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Delude.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -55,6 +55,7 @@
                 mob.playerStats().setLastUpdated(0);
 			CMLib.factions().postFactionChange(mob,this, CMLib.factions().AlignID(), previousAlignment-mob.fetchFaction(CMLib.factions().AlignID()));
 			mob.tell("Your attitude returns to normal.");
+			CMLib.utensils().confirmWearability(mob);
 		}
 	}
 
@@ -126,6 +127,7 @@
                                     }
                                 }
             					CMLib.factions().postFactionChange(mob,this, CMLib.factions().AlignID(), newAlign-mob.fetchFaction(CMLib.factions().AlignID()));
+            					CMLib.utensils().confirmWearability(mob);
                                 return true;
                             case 2:
                                 // find an evil range, set them within that
@@ -142,6 +144,7 @@
                                     }
                                 }
             					CMLib.factions().postFactionChange(mob,this, CMLib.factions().AlignID(), newAlign-mob.fetchFaction(CMLib.factions().AlignID()));
+            					CMLib.utensils().confirmWearability(mob);
                                 return true;
                         }
 					}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DemonGate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DemonGate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DemonGate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -95,17 +95,6 @@
 		}
 	}
 
-
-	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
-	{
-		super.affectEnvStats(affected,affectableStats);
-		int xlvl=super.getXLEVELLevel(invoker());
-		affectableStats.setDamage(affectableStats.damage()+20+xlvl);
-		affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+100+(5*xlvl));
-		affectableStats.setArmor(affectableStats.armor()+20+(2*xlvl));
-		affectableStats.setSpeed(affectableStats.speed()+2);
-	}
-
 	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
 	{
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
@@ -154,14 +143,14 @@
 	{
 		MOB newMOB=CMClass.getMOB("GenRideable");
 		Rideable ride=(Rideable)newMOB;
-		newMOB.baseEnvStats().setAbility(43);
-		newMOB.baseEnvStats().setLevel(level+10);
+		newMOB.baseEnvStats().setAbility(22 + super.getXLEVELLevel(caster));
+		newMOB.baseEnvStats().setLevel(level+ 2 + super.getXLEVELLevel(caster));
 		CMLib.factions().setAlignment(newMOB,Faction.ALIGN_EVIL);
 		newMOB.baseEnvStats().setWeight(850);
 		newMOB.baseEnvStats().setRejuv(Integer.MAX_VALUE);
-		newMOB.baseCharStats().setStat(CharStats.STAT_STRENGTH,25);
-		newMOB.baseCharStats().setStat(CharStats.STAT_DEXTERITY,25);
-		newMOB.baseCharStats().setStat(CharStats.STAT_CONSTITUTION,25);
+		newMOB.baseCharStats().setStat(CharStats.STAT_STRENGTH,18);
+		newMOB.baseCharStats().setStat(CharStats.STAT_DEXTERITY,18);
+		newMOB.baseCharStats().setStat(CharStats.STAT_CONSTITUTION,18);
 		newMOB.baseCharStats().setMyRace(CMClass.getRace("Demon"));
 		newMOB.baseCharStats().getMyRace().startRacing(newMOB,false);
 		newMOB.baseCharStats().setStat(CharStats.STAT_GENDER,'M');
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistGas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistGas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistGas.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfIce.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfIce.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfIce.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_TeleportationWard.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_TeleportationWard.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_TeleportationWard.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Ignite.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Ignite.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Ignite.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Counterspell.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Counterspell.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Counterspell.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MajorGlobe.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MajorGlobe.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MajorGlobe.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistMagicMissiles.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistMagicMissiles.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistMagicMissiles.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Misstep.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Misstep.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Misstep.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SpiderClimb.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SpiderClimb.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SpiderClimb.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Blink.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Blink.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Blink.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ArcaneMark.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ArcaneMark.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ArcaneMark.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MassDisintegrate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MassDisintegrate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MassDisintegrate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistParalyzation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistParalyzation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistParalyzation.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Sleep.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Sleep.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Sleep.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_StoneFlesh.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_StoneFlesh.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_StoneFlesh.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Flameshield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Flameshield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Flameshield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MirrorImage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MirrorImage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MirrorImage.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Enlarge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Enlarge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Enlarge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Invisibility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Invisibility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Invisibility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfDarkness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfDarkness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfDarkness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WeaknessElectricity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WeaknessElectricity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WeaknessElectricity.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WeaknessCold.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WeaknessCold.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WeaknessCold.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_LimbRack.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_LimbRack.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_LimbRack.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -82,7 +82,7 @@
                 if(mob.fetchEffect(A.ID())==null)
                     mob.addNonUninvokableEffect(A);
 		    }
-			mob.confirmWearability();
+			CMLib.utensils().confirmWearability(mob);
 	    }
 	    super.unInvoke();
 	}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_KnowPain.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_KnowPain.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_KnowPain.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FaerieFog.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FaerieFog.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FaerieFog.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Dismissal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Dismissal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Dismissal.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DisenchantWand.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DisenchantWand.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DisenchantWand.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfFire.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfFire.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfFire.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Friends.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Friends.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Friends.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Alarm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Alarm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Alarm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Teleport.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Teleport.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Teleport.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_GraceOfTheCat.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_GraceOfTheCat.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_GraceOfTheCat.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -40,23 +40,28 @@
 	public int abstractQuality(){ return Ability.QUALITY_BENEFICIAL_OTHERS;}
 	protected int canAffectCode(){return CAN_MOBS;}
 	public int classificationCode(){ return Ability.ACODE_SPELL|Ability.DOMAIN_TRANSMUTATION;}
-
+	int increase = -1;
+	
 	public void affectCharStats(MOB affected, CharStats affectableStats)
 	{
 		super.affectCharStats(affected,affectableStats);
-		int increase = 4;
-		if (affectableStats.getCurrentClass().baseClass().equals("Thief"))
-			increase = 8;
-		if (affectableStats.getCurrentClass().baseClass().equals("Bard"))
-			increase = 8;
-		if (affectableStats.getCurrentClass().baseClass().equals("Fighter"))
-			increase = 6;
-		if (affectableStats.getCurrentClass().baseClass().equals("Mage"))
-			increase = 6;
-		if (affectableStats.getCurrentClass().baseClass().equals("Cleric"))
-			increase = 4;
-		if (affectableStats.getCurrentClass().baseClass().equals("Druid"))
-			increase = 4;
+		if(increase <= 0)
+		{
+			increase = 1;
+			if (affectableStats.getCurrentClass().baseClass().equals("Thief"))
+				increase = 2;
+			if (affectableStats.getCurrentClass().baseClass().equals("Bard"))
+				increase = 2;
+			if (affectableStats.getCurrentClass().baseClass().equals("Fighter"))
+				increase = 3;
+			if (affectableStats.getCurrentClass().baseClass().equals("Mage"))
+				increase = 2;
+			if (affectableStats.getCurrentClass().baseClass().equals("Cleric"))
+				increase = 1;
+			if (affectableStats.getCurrentClass().baseClass().equals("Druid"))
+				increase = 1;
+			increase += (getXLEVELLevel(invoker())+2)/3;
+		}
 		affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY) + increase);
 	}
 
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Ventriloquate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Ventriloquate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Ventriloquate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ManaShield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ManaShield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ManaShield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Youth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Youth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Youth.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ClanDonate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ClanDonate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ClanDonate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -82,6 +82,7 @@
 			CMMsg msg=CMClass.getMsg(mob,target,this,verbalCastCode(mob,target,auto),"^S<S-NAME> invoke(s) a donation spell upon <T-NAMESELF>.^?");
 			if(mob.location().okMessage(mob,msg))
 			{
+				MOB victim=mob.getVictim();
                 boolean proceed=(target instanceof Coins);
                 if(!proceed){
                     Room prevRoom=mob.location();
@@ -110,6 +111,7 @@
                         clanDonateRoom.sendOthers(mob,msg);
                     }
                 }
+                mob.setVictim(victim);
 			}
 
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Darkness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Darkness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Darkness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistElectricity.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistElectricity.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistElectricity.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_KnowBliss.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_KnowBliss.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_KnowBliss.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Geas.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Geas.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Geas.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Gate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Gate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Gate.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Fireball.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Fireball.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Fireball.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DestroyObject.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DestroyObject.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DestroyObject.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Blademouth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Blademouth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Blademouth.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_GreaterInvisibility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_GreaterInvisibility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_GreaterInvisibility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Dream.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Dream.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Dream.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Nondetection.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Nondetection.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Nondetection.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Ugliness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Ugliness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Ugliness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Lee Fox
+   Copyright 2000-2009 Lee Fox
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ElementalStorm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ElementalStorm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ElementalStorm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -85,7 +85,7 @@
 					if(msg.value()<=0)
 					{
 						int damage = 0;
-						damage += CMLib.dice().roll(1,3,0);
+						damage += CMLib.dice().roll(1,3+(adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob)))/10,0);
 						if(target.location()==mob.location())
 							CMLib.combat().postDamage(mob,target,this,damage,CMMsg.MASK_ALWAYS|types[i],dames[i],"^S"+ds[i]+" <DAMAGE> <T-NAME>!^?");
 					}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MysticShine.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MysticShine.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MysticShine.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_PhantomHound.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_PhantomHound.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_PhantomHound.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Transformation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Transformation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Transformation.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectScrying.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectScrying.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectScrying.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Refit.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Refit.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Refit.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Weaken.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Weaken.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Weaken.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Anchor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Anchor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Anchor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistCold.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistCold.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistCold.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Augury.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Augury.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Augury.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ObscureSelf.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ObscureSelf.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ObscureSelf.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Dragonfire.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Dragonfire.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Dragonfire.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -87,7 +87,7 @@
 					invoker=mob;
 
 					int maxDie =  adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob));
-					int damage = CMLib.dice().roll(maxDie,6,maxDie);
+					int damage = CMLib.dice().roll(maxDie,5,maxDie);
 					if((msg.value()>0)||(msg2.value()>0))
 						damage = (int)Math.round(CMath.div(damage,2.0));
 					CMLib.combat().postDamage(mob,target,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_FIRE,Weapon.TYPE_BURNING,"The dragonfire <DAMAGE> <T-NAME>!");
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SummonCompanion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SummonCompanion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SummonCompanion.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_AnalyzeDweomer.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_AnalyzeDweomer.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_AnalyzeDweomer.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Infravision.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Infravision.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Infravision.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_AnimateWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_AnimateWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_AnimateWeapon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -52,7 +52,7 @@
 		{
 			if(invoker().isInCombat())
 			{
-				boolean isHit=(CMLib.combat().rollToHit(invoker().adjustedAttackBonus(invoker().getVictim())+((Item)affected).envStats().attackAdjustment(),invoker().getVictim().adjustedArmor()));
+				boolean isHit=(CMLib.combat().rollToHit(CMLib.combat().adjustedAttackBonus(invoker(),invoker().getVictim())+((Item)affected).envStats().attackAdjustment(),CMLib.combat().adjustedArmor(invoker().getVictim()), 0));
 				if((!isHit)||(!(affected instanceof Weapon)))
 					invoker().location().show(invoker(),invoker().getVictim(),affected,CMMsg.MSG_OK_ACTION,"<O-NAME> attacks <T-NAME> and misses!");
 				else
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Choke.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Choke.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Choke.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Breadcrumbs.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Breadcrumbs.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Breadcrumbs.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistPetrification.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistPetrification.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistPetrification.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Charm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Charm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Charm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Ensnare.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Ensnare.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Ensnare.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_LocateObject.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_LocateObject.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_LocateObject.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Erase.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Erase.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Erase.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistPoison.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistPoison.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistPoison.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_IllusoryWall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_IllusoryWall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_IllusoryWall.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Confusion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Confusion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Confusion.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Mirage.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Mirage.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Mirage.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Scribe.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Scribe.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Scribe.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Shield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Shield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Shield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -44,7 +44,7 @@
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
-		affectableStats.setArmor(affectableStats.armor() - 20-(4*getXLEVELLevel(invoker())));
+		affectableStats.setArmor(affectableStats.armor() - 10-(2*getXLEVELLevel(invoker())));
 	}
 
 	public void unInvoke()
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectAmbush.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectAmbush.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectAmbush.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Toadstool.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Toadstool.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Toadstool.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -131,7 +131,7 @@
 							M.makePeace();
 					}
 					target.recoverCharStats();
-					target.confirmWearability();
+					CMLib.utensils().confirmWearability(target);
 					target.resetToMaxState();
 				}
 			}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WizardLock.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WizardLock.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WizardLock.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,6 +64,9 @@
 		case CMMsg.TYP_UNLOCK:
 			mob.tell(affected.name()+" appears to be magically locked.");
 			return false;
+		case CMMsg.TYP_JUSTICE:
+			if(!CMath.bset(msg.targetMajor(),CMMsg.MASK_DELICATE))
+				return true;
 		case CMMsg.TYP_DELICATE_HANDS_ACT:
 			mob.tell(affected.name()+" appears to be magically protected.");
 			return false;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_PredictWeather.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_PredictWeather.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_PredictWeather.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Wish.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Wish.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Wish.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -778,7 +778,7 @@
 			||(myWish.indexOf(" WAS A")>=0)
 			||(myWish.indexOf(" TRANSFORM")>=0)))
 			{
-				Race R=CMClass.getRace((String)wishV.lastElement());
+				Race R=CMClass.findRace((String)wishV.lastElement());
 				if(R!=null)
 				{
 					if(!((MOB)target).isMonster())
@@ -791,7 +791,7 @@
 					((MOB)target).baseCharStats().setMyRace(R);
 					((MOB)target).baseCharStats().getMyRace().startRacing(((MOB)target),true);
 					((MOB)target).baseCharStats().getMyRace().setHeightWeight(((MOB)target).baseEnvStats(),(char)((MOB)target).baseCharStats().getStat(CharStats.STAT_GENDER));
-					((MOB)target).confirmWearability();
+					CMLib.utensils().confirmWearability((MOB)target);
 					((MOB)target).recoverCharStats();
 					((MOB)target).recoverEnvStats();
 					if(!((MOB)target).isMonster())
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MassFly.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MassFly.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MassFly.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DispelMagic.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DispelMagic.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DispelMagic.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Irritation.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Irritation.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Irritation.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SeeAura.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SeeAura.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SeeAura.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FeignInvisibility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FeignInvisibility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FeignInvisibility.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DivineBeauty.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DivineBeauty.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DivineBeauty.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FoolsGold.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FoolsGold.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FoolsGold.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Polymorph.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Polymorph.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Polymorph.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -118,7 +118,7 @@
 					mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> become(s) a "+newRace.name()+"!");
 					success=beneficialAffect(mob,target,asLevel,0);
 					target.recoverCharStats();
-					target.confirmWearability();
+					CMLib.utensils().confirmWearability(target);
 				}
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectUndead.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectUndead.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectUndead.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_EnchantWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_EnchantWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_EnchantWeapon.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -53,7 +53,7 @@
 			mob.tell(mob,target,null,"You can't enchant <T-NAME> with an Enchant Weapon spell!");
 			return false;
 		}
-		if((target.envStats().ability()>2)&&(!auto))
+		if(target.envStats().ability()>2)
 		{
 			mob.tell(target.name()+" cannot be enchanted further.");
 			return false;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_PrayerShield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_PrayerShield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_PrayerShield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FloatingDisc.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FloatingDisc.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FloatingDisc.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectSentience.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectSentience.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectSentience.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MassSlow.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MassSlow.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MassSlow.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_InsatiableThirst.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_InsatiableThirst.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_InsatiableThirst.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Fear.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Fear.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Fear.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DetectInvisible.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DetectInvisible.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DetectInvisible.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Stoneskin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Stoneskin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Stoneskin.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -47,7 +47,7 @@
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
-		affectableStats.setArmor(affectableStats.armor() - 10-getXLEVELLevel(invoker()));
+		affectableStats.setArmor(affectableStats.armor() - 5-getXLEVELLevel(invoker()));
 	}
 
 	public void unInvoke()
@@ -114,7 +114,7 @@
 			{
 				mob.location().send(mob,msg);
 				mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> watch(es) <S-HIS-HER> skin turn hard as stone!");
-				HitsRemaining = 5 + ( adjustedLevel( mob, asLevel ) / 2 );
+				HitsRemaining = 3 + ( adjustedLevel( mob, asLevel ) / 5 );
 				beneficialAffect(mob,target,asLevel,0);
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FeatherFall.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FeatherFall.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FeatherFall.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Nightmare.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Nightmare.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Nightmare.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Silence.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Silence.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Silence.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Mend.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Mend.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Mend.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SlowProjectiles.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SlowProjectiles.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SlowProjectiles.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_AddLimb.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_AddLimb.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_AddLimb.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -61,7 +61,7 @@
     			if((mob.location()!=null)&&(!mob.amDead()))
     				mob.location().show(mob,null,CMMsg.MSG_OK_VISUAL,"<S-YOUPOSS> extra limb fades away.");
     			mob.recoverCharStats();
-    			mob.confirmWearability();
+				CMLib.utensils().confirmWearability(mob);
     		}
         }
         finally
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_GhostSound.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_GhostSound.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_GhostSound.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_DistantVision.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_DistantVision.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_DistantVision.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Clone.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Clone.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Clone.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -46,13 +46,22 @@
 	public void executeMsg(Environmental myHost, CMMsg msg)
 	{
 		super.executeMsg(myHost,msg);
-		if((affected!=null)
-		&&(affected instanceof MOB)
-		&&(msg.amISource((MOB)affected)||msg.amISource(((MOB)affected).amFollowing()))
-		&&(msg.sourceMinor()==CMMsg.TYP_QUIT))
+		if((affected!=null)&&(affected instanceof MOB))
 		{
-			unInvoke();
-			if(msg.source().playerStats()!=null) msg.source().playerStats().setLastUpdated(0);
+			if((msg.amISource((MOB)affected)||msg.amISource(((MOB)affected).amFollowing()))
+			&&(msg.sourceMinor()==CMMsg.TYP_QUIT))
+			{
+				unInvoke();
+				if(msg.source().playerStats()!=null) msg.source().playerStats().setLastUpdated(0);
+			}
+			else
+			if(msg.amISource((MOB)affected))
+			{
+				if(msg.sourceMinor()==CMMsg.TYP_DEATH)
+				{
+					unInvoke();
+				}
+			}
 		}
 	}
 
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MarkerPortal.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MarkerPortal.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MarkerPortal.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_PolymorphSelf.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_PolymorphSelf.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_PolymorphSelf.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -161,7 +161,7 @@
 					mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> become(s) a "+newRace.name()+"!");
 					success=beneficialAffect(mob,target,asLevel,0);
 					target.recoverCharStats();
-					target.confirmWearability();
+					CMLib.utensils().confirmWearability(target);
 				}
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Scatter.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Scatter.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Scatter.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -106,6 +106,9 @@
 		}
 
 		Vector targets=new Vector();
+	    if(givenTarget != null)
+	    	targets.addElement(givenTarget);
+	    else
 		if(target!=null)
 		    targets.addElement(target);
 		else
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ResistDisease.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ResistDisease.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ResistDisease.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Phantasm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Phantasm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Phantasm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_StinkingCloud.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_StinkingCloud.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_StinkingCloud.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Summon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Summon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Summon.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Grow.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Grow.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Grow.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -102,7 +102,7 @@
 				aff=aff*aff;
 				target.baseEnvStats().setWeight((int)Math.round(CMath.mul(target.baseEnvStats().weight(),aff)));
 				beneficialAffect(mob,target,asLevel,0);
-				target.confirmWearability();
+				CMLib.utensils().confirmWearability(target);
 			}
 
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ArcanePossession.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ArcanePossession.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ArcanePossession.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FakeWeapon.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FakeWeapon.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FakeWeapon.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MeteorStorm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MeteorStorm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MeteorStorm.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_BurningHands.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_BurningHands.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_BurningHands.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -70,7 +70,7 @@
 				invoker=mob;
 				mob.location().send(mob,msg2);
 				int damage = 0;
-				int maxDie =  adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob));
+				int maxDie =  (adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob))/2);
 				damage += CMLib.dice().roll(1,maxDie,15);
 				if((msg2.value()>0)||(msg.value()>0))
 					damage = (int)Math.round(CMath.div(damage,2.0));
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MindFog.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MindFog.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MindFog.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Shove.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Shove.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Shove.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ContinualLight.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ContinualLight.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ContinualLight.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_AchillesArmor.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_AchillesArmor.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_AchillesArmor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Exhaustion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Exhaustion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Exhaustion.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Deafness.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Deafness.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Deafness.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_FreeMovement.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_FreeMovement.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_FreeMovement.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfStone.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfStone.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WallOfStone.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_MagicItem.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_MagicItem.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_MagicItem.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -68,17 +68,20 @@
 
 		String spellName=CMParms.combine(commands,0).trim();
 		Spell wandThis=null;
+		Vector ables=new Vector();
 		for(int a=0;a<mob.numAbilities();a++)
 		{
 			Ability A=mob.fetchAbility(a);
 			if((A!=null)
 			&&(A instanceof Spell)
 			&&((!A.savable())||(CMLib.ableMapper().qualifiesByLevel(mob,A)))
-			&&(A.name().toUpperCase().startsWith(spellName.toUpperCase()))
 			&&(!A.ID().equals(this.ID())))
-				wandThis=(Spell)A;
+				ables.addElement(A);
 		}
+		wandThis = (Spell)CMLib.english().fetchEnvironmental(ables,spellName,true);
 		if(wandThis==null)
+			wandThis = (Spell)CMLib.english().fetchEnvironmental(ables,spellName,false);
+		if(wandThis==null)
 		{
 			mob.tell("You don't know how to enchant anything with '"+spellName+"'.");
 			return false;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_SummonEnemy.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_SummonEnemy.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_SummonEnemy.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -105,7 +105,7 @@
 		if(caster.location()==null) return null;
 		if(caster.location().getArea()==null) return null;
 		MOB monster=null;
-		int tries=10000000;
+		int tries=10000;
 		while((monster==null)&&((--tries)>0))
 		{
 			Room room=CMLib.map().getRandomRoom();
@@ -115,11 +115,13 @@
 				if((mob!=null)
 				&&(!(mob instanceof Deity))
 				&&(mob.envStats().level()>=level)
+				&&(mob.envStats().level()<=(level + 1 + CMProps.getIntVar(CMProps.SYSTEMI_EXPRATE)))
 				&&(mob.charStats()!=null)
 				&&(mob.charStats().getMyRace()!=null)
 				&&(CMProps.isTheme(mob.charStats().getMyRace().availabilityCode()))
 				&&(CMath.bset(mob.charStats().getMyRace().availabilityCode(),Area.THEME_SKILLONLYMASK))
-                &&( (CMLib.flags().isGood(caster)&&CMLib.flags().isEvil(mob)) || (CMLib.flags().isEvil(caster)&&CMLib.flags().isGood(mob))))
+                &&((CMLib.flags().isGood(caster)&&CMLib.flags().isEvil(mob)) 
+            		|| (CMLib.flags().isEvil(caster)&&CMLib.flags().isGood(mob))))
         			monster=mob;
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_GiantStrength.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_GiantStrength.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_GiantStrength.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -44,24 +44,25 @@
 	public void affectCharStats(MOB affected, CharStats affectableStats)
 	{
 		super.affectCharStats(affected,affectableStats);
-		int increase = 4;
+		int increase = 1;
 		if (affectableStats.getCurrentClass().baseClass().equals("Fighter"))
-			increase = 8;
+			increase = 4;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Mage"))
-			increase = 5;
+			increase = 3;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Thief"))
-			increase = 7;
+			increase = 2;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Bard"))
-			increase = 7;
+			increase = 2;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Cleric"))
-			increase = 6;
+			increase = 1;
 		else
 		if (affectableStats.getCurrentClass().baseClass().equals("Druid"))
-			increase = 6;
+			increase = 1;
+		increase += (getXLEVELLevel(invoker())+2)/3;
 		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH) + increase);
 	}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Hold.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Hold.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Hold.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -98,7 +98,7 @@
 				mob.location().send(mob,msg);
 				if(msg.value()<=0)
 				{
-					success=maliciousAffect(mob,target,asLevel,8-levelDiff,-1);
+					success=maliciousAffect(mob,target,asLevel,7-levelDiff,-1);
 					if(success)
 						if(target.location()==mob.location())
 							target.location().show(target,null,CMMsg.MSG_OK_ACTION,"<S-NAME> become(s) perfectly still!!");
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Shrink.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Shrink.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Shrink.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -128,7 +128,7 @@
                 {
     				beneficialAffect(mob,target,asLevel,0);
     				if(target instanceof MOB)
-    					((MOB)target).confirmWearability();
+    					CMLib.utensils().confirmWearability((MOB)target);
                 }
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Delay.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Delay.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Delay.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -56,6 +56,7 @@
 			return;
 		if(canBeUninvoked())
 		{
+			shooter = (Ability)shooter.copyOf();
 			MOB newCaster=CMClass.getMOB("StdMOB");
 			newCaster.setName("the thin air");
 			newCaster.setDescription(" ");
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ShockingGrasp.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ShockingGrasp.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ShockingGrasp.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -71,7 +71,7 @@
 					if(msg2.value()<=0)
 					{
 						invoker=mob;
-						int damage = CMLib.dice().roll(1,8,adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob)));
+						int damage = CMLib.dice().roll(1,8,(adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob)))/2);
 						CMLib.combat().postDamage(mob,target,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_ELECTRIC,Weapon.TYPE_STRIKING,auto?"<T-NAME> gasp(s) in shock and pain!":"The shocking grasp <DAMAGE> <T-NAME>!");
 					}
 				}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Disintegrate.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Disintegrate.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Disintegrate.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -70,23 +70,25 @@
 				affectType=affectType|CMMsg.MASK_MALICIOUS;
 		}
 		int levelDiff=target.envStats().level()-(mob.envStats().level()+(2*getXLEVELLevel(mob)));
+		if(target instanceof MOB) levelDiff+=6;
 		if(levelDiff<0) levelDiff=0;
-		success=proficiencyCheck(mob,-(levelDiff*25),auto);
+		success=proficiencyCheck(mob,-(levelDiff*15),auto);
 
 		if(auto)affectType=affectType|CMMsg.MASK_ALWAYS;
 
 		if(success)
 		{
+			Room R=mob.location();
 			CMMsg msg=CMClass.getMsg(mob,target,this,affectType,(auto?"":"^S<S-NAME> point(s) at <T-NAMESELF> and utter(s) a treacherous spell!^?")+CMProps.msp("spelldam2.wav",40));
-			if(mob.location().okMessage(mob,msg))
+			if((R!=null)&&(R.okMessage(mob,msg)))
 			{
-				mob.location().send(mob,msg);
+				R.send(mob,msg);
 				if(msg.value()<=0)
 				{
 					Hashtable V=new Hashtable();
-					for(int i=0;i<mob.location().numItems();i++)
+					for(int i=0;i<R.numItems();i++)
 					{
-						Item item=mob.location().fetchItem(i);
+						Item item=R.fetchItem(i);
 						if((item!=null)&&(item instanceof DeadBody))
 							V.put(item,item);
 					}
@@ -96,29 +98,29 @@
 						if(((MOB)target).curState().getHitPoints()>0)
 							CMLib.combat().postDamage(mob,(MOB)target,this,(((MOB)target).curState().getHitPoints()*10),CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,Weapon.TYPE_BURSTING,"^SThe spell <DAMAGE> <T-NAME>!^?");
 						if(((MOB)target).amDead())
-							mob.location().show(mob,target,CMMsg.MSG_OK_ACTION,"<T-NAME> disintegrate(s)!");
+							R.show(mob,target,CMMsg.MSG_OK_ACTION,"<T-NAME> disintegrate(s)!");
 						else
 							return false;
 					}
 					else
-						mob.location().show(mob,target,CMMsg.MSG_OK_ACTION,"<T-NAME> disintegrate(s)!");
+						R.show(mob,target,CMMsg.MSG_OK_ACTION,"<T-NAME> disintegrate(s)!");
 
 					if(target instanceof Item)
 						((Item)target).destroy();
 					else
 					{
 						int i=0;
-						while(i<mob.location().numItems())
+						while(i<R.numItems())
 						{
-							int s=mob.location().numItems();
-							Item item=mob.location().fetchItem(i);
+							int s=R.numItems();
+							Item item=R.fetchItem(i);
 							if((item!=null)&&(item instanceof DeadBody)&&(V.get(item)==null))
 								item.destroy();
-							if(s==mob.location().numItems())
+							if(s==R.numItems())
 								i++;
 						}
 					}
-					mob.location().recoverRoomStats();
+					R.recoverRoomStats();
 				}
 
 			}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_TeleportObject.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_TeleportObject.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_TeleportObject.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,14 +64,29 @@
 			mob.tell("You don't seem to have an item '"+objectName+"'.");
 			return false;
 		}
-		if(!target.amWearingAt(Item.IN_INVENTORY))
+		if(target.amWearingAt(Item.IN_INVENTORY))
 		{
 			mob.tell("You seem to be wearing or holding the item '"+objectName+"'.");
 			return false;
 		}
-		
+		String searchWhat=null;
+		if(commands.size()>2)
+		{
+			String s=(String)commands.elementAt(1);
+			if(s.equalsIgnoreCase("room")) searchWhat="R";
+			if(s.equalsIgnoreCase("area")) searchWhat="E";
+			if(s.equalsIgnoreCase("mob")) searchWhat="M";
+			if(s.equalsIgnoreCase("monster")) searchWhat="M";
+			if(s.equalsIgnoreCase("player")) searchWhat="P";
+			if(s.equalsIgnoreCase("user")) searchWhat="P";
+			if(s.equalsIgnoreCase("item")) searchWhat="I";
+			if(s.equalsIgnoreCase("object")) searchWhat="I";
+			if(searchWhat!=null)
+				commands.removeElementAt(1);
+		}
+		if(searchWhat==null) searchWhat="ERIPM";
 		String destinationString=CMParms.combine(commands,1).trim().toUpperCase();
-		Vector candidates=CMLib.map().findWorldRoomsLiberally(mob,destinationString,"ERIPM",10);
+		Vector candidates=CMLib.map().findWorldRoomsLiberally(mob,destinationString,searchWhat,10,600);
 		if(candidates.size()==0)
 		{
 			mob.tell("You don't know of an place called '"+destinationString.toLowerCase()+"'.");
@@ -117,6 +132,7 @@
 		{
 			oldRoom.send(mob,msg);
 			newRoom.bringMobHere(mob,false);
+			target.unWear();
 			success=CMLib.commands().postDrop(mob,target,true,false) && (!mob.isMine(target));
 			oldRoom.bringMobHere(mob,false);
 			if(success)
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Knock.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Knock.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Knock.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -99,7 +99,7 @@
 			return false;
 
 
-		int levelDiff=openThis.envStats().level()-adjustedLevel(mob,asLevel);
+		int levelDiff=openThis.envStats().level()-(mob.envStats().level()+(2*super.getXLEVELLevel(mob)));
 		if(levelDiff<0) levelDiff=0;
 		boolean success=proficiencyCheck(mob,-(levelDiff*25),auto);
 
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Frailty.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Frailty.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Frailty.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -50,9 +50,15 @@
 			return true;
 
 		MOB mob=(MOB)affected;
-		if((msg.amITarget(mob))&&(msg.targetMinor()==CMMsg.TYP_DAMAGE))
+		if((msg.amITarget(mob))
+		&&(msg.targetMinor()==CMMsg.TYP_DAMAGE)
+		&&((msg.tool()==null)
+				||(!(msg.tool() instanceof Ability))
+				||((((Ability)msg.tool()).classificationCode()&Ability.ALL_ACODES)==Ability.ACODE_SKILL)
+				||((((Ability)msg.tool()).classificationCode()&Ability.ALL_ACODES)==Ability.ACODE_THIEF_SKILL)
+				))
 		{
-			int recovery=(int)Math.round(CMath.div((msg.value()),2.0));
+			int recovery=(int)Math.round(CMath.div((msg.value()),3.0));
 			msg.setValue(msg.value()+recovery);
 		}
 		return true;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Repulsion.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Repulsion.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Repulsion.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -128,6 +128,7 @@
 							int level=2;
 							if((CMLib.ableMapper().qualifyingClassLevel(mob,this)>0)&&((adjustedLevel(mob,asLevel)-CMLib.ableMapper().qualifyingClassLevel(mob,this))>10))
 								level+=((adjustedLevel(mob,asLevel)-CMLib.ableMapper().qualifyingClassLevel(mob,this))-10)/10;
+							if(level<2) level=2;
 							target.location().show(target,null,CMMsg.MSG_OK_ACTION,"<S-NAME> become(s) repelled!");
 							if((target.getVictim()!=null)&&(target.rangeToTarget()>0))
 								target.setAtRange(target.rangeToTarget());
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ChainLightening.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ChainLightening.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ChainLightening.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -63,8 +63,8 @@
 		if(!super.invoke(mob,commands,givenTarget,auto,asLevel))
 			return false;
 
-		int maxDie=adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob));
-		int damage = CMLib.dice().roll(maxDie,8,1);
+		int maxDie=(adjustedLevel(mob,asLevel)+(2*super.getX1Level(mob)))/2;
+		int damage = CMLib.dice().roll(maxDie,8,maxDie);
 
 		boolean success=proficiencyCheck(mob,0,auto);
 		if(success)
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_WizardsChest.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_WizardsChest.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_WizardsChest.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,6 +64,9 @@
 		case CMMsg.TYP_UNLOCK:
 			mob.tell(affected.name()+" appears to be magically protected.");
 			return false;
+		case CMMsg.TYP_JUSTICE:
+			if(!CMath.bset(msg.targetMajor(),CMMsg.MASK_DELICATE))
+				return true;
 		case CMMsg.TYP_DELICATE_HANDS_ACT:
 			mob.tell(affected.name()+" appears to be magically protected.");
 			return false;
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Cloudkill.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Cloudkill.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Cloudkill.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -116,10 +116,10 @@
 						damage = (int)Math.round(CMath.div(damage,2.0));
 
 					if(damage<=0) damage=1;
-					if((target.location()==mob.location())
-					&&(target.charStats().getBodyPart(Race.BODY_LEG)>0))
+					if(target.location()==mob.location())
 					{
-						maliciousAffect(mob,target,asLevel,2,-1);
+						if(target.charStats().getBodyPart(Race.BODY_LEG)>0)
+							maliciousAffect(mob,target,asLevel,2,-1);
 						CMLib.combat().postDamage(mob,target,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_GAS,Weapon.TYPE_GASSING,"The gas <DAMAGE> <T-NAME>. <T-NAME> collapse(s)!");
 					}
 				}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Laughter.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Laughter.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Laughter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -111,20 +111,21 @@
 			// affected MOB.  Then tell everyone else
 			// what happened.
 			invoker=mob;
+			Room R=mob.location();
 			CMMsg msg=CMClass.getMsg(mob,target,this,verbalCastCode(mob,target,auto),auto?"":"^S<S-NAME> tell(s) <T-NAMESELF> a magical joke.^?");
 			CMMsg msg2=CMClass.getMsg(mob,target,this,CMMsg.MSK_CAST_MALICIOUS_VERBAL|CMMsg.TYP_MIND|(auto?CMMsg.MASK_ALWAYS:0),null);
-			if((mob.location().okMessage(mob,msg))&&(mob.location().okMessage(mob,msg2)))
+			if((R.okMessage(mob,msg))&&(mob.location().okMessage(mob,msg2)))
 			{
-				mob.location().send(mob,msg);
-				mob.location().send(mob,msg2);
+				R.send(mob,msg);
+				R.send(mob,msg2);
 				if((msg.value()<=0)&&(msg2.value()<=0))
 				{
                     int ticks=8-levelDiff;
-                    if(ticks<0) ticks=1;
-					success=maliciousAffect(mob,target,asLevel,8-levelDiff,-1);
+                    if(ticks<=0) ticks=1;
+					success=maliciousAffect(mob,target,asLevel,ticks,-1);
 					if(success)
-						if(target.location()==mob.location())
-							target.location().show(target,null,CMMsg.MSG_OK_ACTION,"<S-NAME> begin(s) laughing uncontrollably, unable to move!!");
+						if(target.location()==R)
+							R.show(target,null,CMMsg.MSG_OK_ACTION,"<S-NAME> begin(s) laughing uncontrollably, unable to move!!");
 				}
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_Shockshield.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_Shockshield.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_Shockshield.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -101,7 +101,7 @@
 		super.affectEnvStats(affected,affectableStats);
 		if(affected==null) return;
 		if(!(affected instanceof MOB)) return;
-		affectableStats.setArmor(affectableStats.armor()-10-(getXLEVELLevel(invoker())));
+		affectableStats.setArmor(affectableStats.armor()-5-(getXLEVELLevel(invoker())));
 	}
 
 	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_AcidArrow.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_AcidArrow.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_AcidArrow.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -81,7 +81,7 @@
 				R.send(mob,msg);
 				R.send(mob,msg2);
 				invoker=mob;
-                int numDice = adjustedLevel(mob,asLevel)+(2*super.getX1Level(invoker()));
+                int numDice = (adjustedLevel(mob,asLevel)+(2*super.getX1Level(invoker())))/2;
 				int damage = CMLib.dice().roll(1, numDice+10, 5);
 				if((msg2.value()>0)||(msg.value()>0))
 					damage = (int)Math.round(CMath.div(damage,2.0));
Index: planet_ink/coffee_mud/Abilities/Spells/Spell_ImprovedPolymorph.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Spells/Spell_ImprovedPolymorph.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Spells/Spell_ImprovedPolymorph.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -185,7 +185,7 @@
 					mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> become(s) a "+newRace.name()+"!");
 					success=beneficialAffect(mob,target,asLevel,0);
 					target.recoverCharStats();
-					target.confirmWearability();
+					CMLib.utensils().confirmWearability(target);
 				}
 			}
 		}
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_GrowOak.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_GrowOak.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_GrowOak.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -76,13 +76,15 @@
 	public boolean tick(Tickable ticking, int tickID)
 	{
 		if(!super.tick(ticking,tickID)) return false;
-		if((PlantsLocation==null)||(littlePlants==null)) return false;
+		Room plantsLocation = PlantsLocation;
+		MOB invoker = invoker();
+		if((plantsLocation==null)||(littlePlants==null)) return false;
 		if(invoker!=null)
 		{
 			if((lastHp>invoker.curState().getHitPoints())&&(lastHp>0))
 			{
 				int dmg=lastHp-invoker.curState().getHitPoints();
-				if(invoker.location()!=PlantsLocation)
+				if(invoker.location()!=plantsLocation)
 					dmg=dmg/2;
 				if(dmg>0)
 				{
@@ -95,9 +97,9 @@
 			}
 			lastHp=invoker.curState().getHitPoints();
 		}
-		for(int i=0;i<PlantsLocation.numInhabitants();i++)
+		for(int i=0;i<plantsLocation.numInhabitants();i++)
 		{
-			MOB M=PlantsLocation.fetchInhabitant(i);
+			MOB M=plantsLocation.fetchInhabitant(i);
 			if(M.fetchEffect("Chopping")!=null)
 			{
 				int dmg=CMLib.dice().roll(1,50,50);
Index: planet_ink/coffee_mud/Abilities/Druid/Druid_ShapeShift.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Druid_ShapeShift.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Druid_ShapeShift.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -104,11 +104,11 @@
 			newRace.setHeightWeight(affectableStats,(char)((MOB)affected).charStats().getStat(CharStats.STAT_GENDER));
 			if(oldAdd>0) affectableStats.setWeight(affectableStats.weight()+oldAdd);
 			affectableStats.setAttackAdjustment(affectableStats.attackAdjustment()+
-												(int)Math.round(CMath.mul(affectableStats.level()+xlvl,attadj[getRaceCode()])));
+												(int)Math.round(CMath.mul(affectableStats.level()+xlvl,attadj[getRaceCode()])/2.0));
 			affectableStats.setArmor(affectableStats.armor()+
-									(int)Math.round(CMath.mul(affectableStats.level()+xlvl,armadj[getRaceCode()])));
+									(int)Math.round(CMath.mul(affectableStats.level()+xlvl,armadj[getRaceCode()])/2.0));
 			affectableStats.setDamage(affectableStats.damage()+
-									(int)Math.round(CMath.mul(affectableStats.level()+xlvl,dmgadj[getRaceCode()])));
+									(int)Math.round(CMath.mul(affectableStats.level()+xlvl,dmgadj[getRaceCode()])/2.0));
 		}
 	}
 
@@ -362,7 +362,7 @@
 				mob.location().show(mob,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> take(s) on "+raceName.toLowerCase()+" form.");
 				beneficialAffect(mob,mob,asLevel,Integer.MAX_VALUE);
 				raceName=CMStrings.capitalizeAndLower(CMLib.english().startWithAorAn(raceName.toLowerCase()));
-				mob.confirmWearability();
+				CMLib.utensils().confirmWearability(mob);
 			}
 		}
 		else
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_Thorns.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_Thorns.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_Thorns.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -103,9 +103,7 @@
 		super.affectEnvStats(affected,affectableStats);
 		if(affected==null) return;
 		if(!(affected instanceof MOB)) return;
-		MOB mob=(MOB)affected;
-
-		affectableStats.setArmor(affectableStats.armor()-mob.envStats().level()-(2*super.getXLEVELLevel(invoker())));
+		affectableStats.setArmor(affectableStats.armor()-10-(2*super.getXLEVELLevel(invoker())));
 	}
 
 	public boolean invoke(MOB mob, Vector commands, Environmental givenTarget, boolean auto, int asLevel)
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_HardenSkin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_HardenSkin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_HardenSkin.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,7 +45,7 @@
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
-		affectableStats.setArmor(affectableStats.armor() - (2*adjustedLevel(invoker(),0)));
+		affectableStats.setArmor(affectableStats.armor() - 10 - (2*getXLEVELLevel(invoker())));
 	}
 
 	public void affectCharStats(MOB affected, CharStats affectableStats)
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_SenseAge.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_SenseAge.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_SenseAge.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -68,7 +68,7 @@
 					success=false;
 				}
 				else
-				if((A==null)||(A.displayText().length()==0))
+				if((target instanceof MOB)&&((A==null)||(A.displayText().length()==0)))
 				{
 					MOB M=(MOB)target;
 					if(M.baseCharStats().getStat(CharStats.STAT_AGE)<=0)
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_Boulderbash.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_Boulderbash.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_Boulderbash.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_AnimalGrowth.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_AnimalGrowth.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_AnimalGrowth.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -62,12 +62,14 @@
 		super.affectCharStats(affectedMOB,affectedStats);
 		affectedStats.setStat(CharStats.STAT_STRENGTH,affectedStats.getStat(CharStats.STAT_STRENGTH)+5);
 		affectedStats.setStat(CharStats.STAT_DEXTERITY,affectedStats.getStat(CharStats.STAT_DEXTERITY)-3);
+		affectedStats.setStat(CharStats.STAT_WEIGHTADJ,
+				affectedStats.getStat(CharStats.STAT_WEIGHTADJ)
+				+(affectedMOB.baseEnvStats().weight()*3));
 	}
 
 	public void affectEnvStats(Environmental affected, EnvStats affectedStats)
 	{
 		super.affectEnvStats(affected,affectedStats);
-		affectedStats.setWeight(affectedStats.weight()*3);
 		affectedStats.setHeight(affectedStats.height()*2);
 		String oldName=affected.Name().toUpperCase();
 		if(oldName.startsWith("A "))
Index: planet_ink/coffee_mud/Abilities/Druid/Druid_GolemForm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Druid_GolemForm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Druid_GolemForm.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -294,7 +294,7 @@
 				beneficialAffect(mob,mob,asLevel,Integer.MAX_VALUE);
 				raceName=CMStrings.capitalizeAndLower(CMLib.english().startWithAorAn(raceName.toLowerCase()));
 				mob.location().show(mob,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> take(s) on "+raceName.toLowerCase()+" form.");
-				mob.confirmWearability();
+				CMLib.utensils().confirmWearability(mob);
 			}
 		}
 		else
Index: planet_ink/coffee_mud/Abilities/Druid/Chant_Barkskin.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Chant_Barkskin.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Chant_Barkskin.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,7 +45,7 @@
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
-		affectableStats.setArmor(affectableStats.armor() - (2*adjustedLevel(invoker(),0)));
+		affectableStats.setArmor(affectableStats.armor() - 10 - (2*getXLEVELLevel(invoker())));
 	}
 
 	public void unInvoke()
Index: planet_ink/coffee_mud/Abilities/Druid/Druid_PlantForm.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Druid/Druid_PlantForm.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Druid/Druid_PlantForm.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -283,7 +283,7 @@
 				beneficialAffect(mob,mob,asLevel,Integer.MAX_VALUE);
 				raceName=CMStrings.capitalizeAndLower(CMLib.english().startWithAorAn(raceName.toLowerCase()));
 				mob.location().show(mob,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> take(s) on "+raceName.toLowerCase()+" form.");
-				mob.confirmWearability();
+				CMLib.utensils().confirmWearability(mob);
 			}
 		}
 		else
Index: planet_ink/coffee_mud/Abilities/GenAbility.java
===================================================================
--- planet_ink/coffee_mud/Abilities/GenAbility.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/GenAbility.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Abilities/Paladin/Paladin_Aura.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Paladin/Paladin_Aura.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Paladin/Paladin_Aura.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -60,7 +60,7 @@
 				if(CMLib.flags().isEvil(mob))
 				{
 					int damage=(int)Math.round(CMath.div(mob.envStats().level()+(2*getXLEVELLevel(invoker)),3.0));
-					CMLib.combat().postDamage(invoker,mob,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,Weapon.TYPE_BURSTING,"^SThe aura around <S-NAME> <DAMAGE> <T-NAME>!^?");
+					CMLib.combat().postDamage(invoker,mob,this,damage,CMMsg.MASK_ALWAYS|CMMsg.TYP_CAST_SPELL,Weapon.TYPE_BURSTING,"^SThe aura around <S-NAME> <DAMAGES> <T-NAME>!^?");
 				}
 			}
 			catch(java.lang.ArrayIndexOutOfBoundsException e)
Index: planet_ink/coffee_mud/Abilities/Archon/Archon_Wrath.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Archon/Archon_Wrath.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Archon/Archon_Wrath.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -89,7 +89,7 @@
                 {
                 	Command C=CMClass.getCommand("Announce");
                 	try{
-	            		C.execute(mob,CMParms.makeVector("ANNOUNCE",target.name()+"is knocked out of "+target.charStats().hisher()+" shoes!!!"),Command.METAFLAG_FORCED);
+	            		C.execute(mob,CMParms.makeVector("ANNOUNCE",target.name()+" is knocked out of "+target.charStats().hisher()+" shoes!!!"),Command.METAFLAG_FORCED);
                 	}catch(Exception e){}
                 }
 			}
Index: planet_ink/coffee_mud/Abilities/Archon/Archon_Freeze.java
===================================================================
--- planet_ink/coffee_mud/Abilities/Archon/Archon_Freeze.java	(revision 2354)
+++ planet_ink/coffee_mud/Abilities/Archon/Archon_Freeze.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -110,7 +110,7 @@
 			if(mob.location().okMessage(mob,msg))
 			{
 				mob.location().send(mob,msg);
-				mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> <S-IS-ARE> freezed!");
+				mob.location().show(target,null,CMMsg.MSG_OK_VISUAL,"<S-NAME> <S-IS-ARE> frozen!");
 				beneficialAffect(mob,target,asLevel,Integer.MAX_VALUE/2);
                 Log.sysOut("Freeze",mob.name()+" freezed "+target.name()+".");
 			}
Index: planet_ink/coffee_mud/core/CMFile.java
===================================================================
--- planet_ink/coffee_mud/core/CMFile.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMFile.java	(revision 2574)
@@ -15,11 +15,12 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 import java.io.*;
+import java.nio.charset.Charset;
 import java.util.*;
 import java.util.regex.Pattern;
 
 /*
-Copyright 2000-2008 Bo Zimmerman
+Copyright 2000-2009 Bo Zimmerman
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
@@ -48,6 +49,10 @@
     private static final int VFS_MASK_NOREADLOCAL=128;
 
     private static final char pathSeparator=File.separatorChar;
+    
+    private static final String inCharSet = Charset.defaultCharset().name();
+    @SuppressWarnings("unused")
+	private static final String outCharSet = Charset.defaultCharset().name();
     
     private static Vector[] vfs=new Vector[256];
     private boolean logErrors=false;
@@ -378,8 +383,11 @@
         BufferedReader reader = null;
         try
         {
-            FileReader F=new FileReader(getIOReadableLocalPathAndName());
-            reader=new BufferedReader(F);
+        	reader=new BufferedReader(
+        		   new InputStreamReader(
+            	   new FileInputStream(
+		           	getIOReadableLocalPathAndName()
+            ),inCharSet));
             String line="";
             while((line!=null)&&(reader.ready()))
             {
@@ -444,10 +452,13 @@
             return buf;
         }
 
-        FileReader F = null;
+        Reader F = null;
         try
         {
-            F=new FileReader(getIOReadableLocalPathAndName());
+        	F=new InputStreamReader(
+         	  new FileInputStream(
+	           	getIOReadableLocalPathAndName()
+             ),inCharSet);
             char c=' ';
             while(F.ready())
             {
Index: planet_ink/coffee_mud/core/http/HTTPserver.java
===================================================================
--- planet_ink/coffee_mud/core/http/HTTPserver.java	(revision 2354)
+++ planet_ink/coffee_mud/core/http/HTTPserver.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 /*
    Portions Copyright 2002 Jeff Kamenek
-   Portions Copyright 2002-2008 Bo Zimmerman
+   Portions Copyright 2002-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/core/http/ProcessHTTPrequest.java
===================================================================
--- planet_ink/coffee_mud/core/http/ProcessHTTPrequest.java	(revision 2354)
+++ planet_ink/coffee_mud/core/http/ProcessHTTPrequest.java	(revision 2574)
@@ -24,7 +24,7 @@
 
 /*
    Portions Copyright 2002 Jeff Kamenek
-   Portions Copyright 2002-2008 Bo Zimmerman
+   Portions Copyright 2002-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -915,6 +915,7 @@
 			headersOnly = false;
 
 			virtualPage = false;
+			sock.setSoTimeout(10000);
             String totalRequest=getHTTPRequest(sock.getInputStream());
 			boolean processOK = process(totalRequest);
 
@@ -1244,6 +1245,7 @@
 			int contentLength=-1;
 			byte c=-1;
             long startTime=System.currentTimeMillis();
+            int byteCounter = 0;
 			while(((contentLength<0)||(out.size()<contentLength))
             &&((System.currentTimeMillis()-startTime)<20000))
 			{
@@ -1261,14 +1263,19 @@
 						String s=new String(out.toByteArray());
 						out=new ByteArrayOutputStream();
 						data.addElement(s);
-                        if(s.startsWith("GET ")) return data;
+                        if(s.startsWith("GET ")||s.startsWith("MUD")) return data;
 					}
 				}
 				else
 				if((c!=10)||((contentLength>0)&&(out.size()>0)))
 				{
 					out.write(c);
-                    if(out.size()>100000000){ return data;}
+					if((++byteCounter)>1024)
+					{
+						byteCounter=0;
+	                    if(out.size()>=(Runtime.getRuntime().freeMemory()/10))
+	                    	return data;
+					}
 					if((contentLength>0)&&(out.size()>=contentLength))
                     {
 						data.addElement(out.toByteArray());
@@ -1360,6 +1367,8 @@
 			if((inData==null)||(inData.size()==0)||(!(inData.elementAt(0) instanceof String)))
 				return "[400 -- no request received]";
 			String inLine=(String)inData.elementAt(0);
+			if(CMSecurity.isDebugging("HTTPACCESS"))
+				Log.debugOut("HTTP", inLine);
 			if((inLine.startsWith("GET")||inLine.startsWith("HEAD")||inLine.equalsIgnoreCase("MUD")))
 				return inLine;
 			else
Index: planet_ink/coffee_mud/core/smtp/SMTPserver.java
===================================================================
--- planet_ink/coffee_mud/core/smtp/SMTPserver.java	(revision 2354)
+++ planet_ink/coffee_mud/core/smtp/SMTPserver.java	(revision 2574)
@@ -22,7 +22,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -168,7 +168,7 @@
 		if (!displayedBlurb)
 		{
 			displayedBlurb = true;
-			//Log.sysOut(getName(),"SMTPserver (C)2005-2008 Bo Zimmerman");
+			//Log.sysOut(getName(),"SMTPserver (C)2005-2009 Bo Zimmerman");
 		}
 		if(mailbox.length()==0)
 			Log.sysOut(getName(),"Player mail box system is disabled.");
@@ -553,6 +553,20 @@
 		return true;
 	}
 
+	public boolean deleteEmailIfOld(String key, long date, int days)
+	{
+		Calendar IQE=Calendar.getInstance();
+        IQE.setTimeInMillis(date);
+		IQE.add(Calendar.DATE,days);
+		if(IQE.getTimeInMillis()<System.currentTimeMillis())
+		{
+			// email is a goner
+			CMLib.database().DBDeleteJournal(key);
+			return true;
+		}
+		return false;
+	}
+	
 	public void processEmails(Vector emails,
 							  String overrideReplyTo,
 							  boolean usePrivateRules)
@@ -591,19 +605,9 @@
 			}
 
 			// check email age
-			if(usePrivateRules)
-			{
-				Calendar IQE=Calendar.getInstance();
-                IQE.setTimeInMillis(date);
-				IQE.add(Calendar.DATE,getEmailDays());
-				if(IQE.getTimeInMillis()<System.currentTimeMillis())
-				{
-					// email is a goner
-					CMLib.database().DBDeleteJournal(key);
-					continue;
-				}
-			}
-
+			if((usePrivateRules)&&(deleteEmailIfOld(key, date, getEmailDays())))
+				continue;
+			
 			if(CMath.bset(toM.getBitmap(),MOB.ATT_AUTOFORWARD)) // forwarding OFF
 				continue;
 
@@ -637,21 +641,10 @@
 					oldEmailComplaints.add(toM.Name());
 					Log.errOut("SMTPServer","Unable to find '"+toM.playerStats().getEmail()+"' for '"+toM.name()+"'.");
 				}
-				// it has 5 days to get better.
-                Calendar IQE=Calendar.getInstance();
-                IQE.setTimeInMillis(date);
-				IQE.add(Calendar.DATE,getFailureDays());
-				if(IQE.getTimeInMillis()<System.currentTimeMillis())
-				{
-					// email is a goner
-					CMLib.database().DBDeleteJournal(key);
-				}
+				deleteEmailIfOld(key, date,getFailureDays());
 				continue;
 			}
 
-			// one way or another, this email is HISTORY!
-			CMLib.database().DBDeleteJournal(key);
-
 			String replyTo=(overrideReplyTo!=null)?(overrideReplyTo):from;
 			try
 			{
@@ -661,10 +654,16 @@
 							   usePrivateRules?toM.playerStats().getEmail():replyTo+"@"+domainName(),
 							   subj,
 							   CMLib.coffeeFilter().simpleOutFilter(msg));
+				//this email is HISTORY!
+				CMLib.database().DBDeleteJournal(key);
 			}
 			catch(java.io.IOException ioe)
 			{
-				Log.errOut("SMTPServer","Unable to send to '"+toM.playerStats().getEmail()+"' for user '"+toM.name()+"': "+ioe.getMessage()+".");
+				// it has FAILUREDAYS days to get better.
+				if(deleteEmailIfOld(key, date,getFailureDays()))
+					Log.errOut("SMTPServer","Permanently unable to send to '"+toM.playerStats().getEmail()+"' for user '"+toM.name()+"': "+ioe.getMessage()+".");
+				else
+					Log.errOut("SMTPServer","Failure to send to '"+toM.playerStats().getEmail()+"' for user '"+toM.name()+".");
 			}
 
 			// kaplah! On to next...
Index: planet_ink/coffee_mud/core/intermud/packets/ChannelUserReply.java
===================================================================
--- planet_ink/coffee_mud/core/intermud/packets/ChannelUserReply.java	(revision 2354)
+++ planet_ink/coffee_mud/core/intermud/packets/ChannelUserReply.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.Vector;
 
 /**
- * Copyright (c) 2008 - 2008 Bo Zimmerman
+ * Copyright (c) 2008-2009 Bo Zimmerman
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
Index: planet_ink/coffee_mud/core/intermud/packets/Intermud.java
===================================================================
--- planet_ink/coffee_mud/core/intermud/packets/Intermud.java	(revision 2354)
+++ planet_ink/coffee_mud/core/intermud/packets/Intermud.java	(revision 2574)
@@ -223,7 +223,11 @@
                     Vector info = (Vector)ob;
 
                     c.owner = (String)info.elementAt(0);
-                    c.type = ((Integer)info.elementAt(1)).intValue();
+                    if(info.elementAt(1) instanceof Integer)
+	                    c.type = ((Integer)info.elementAt(1)).intValue();
+                    else
+                    if(info.elementAt(1) instanceof Vector)
+                    	Log.errOut("InterMud","Received unexpected channel-reply: " + CMParms.toStringList((Vector)info.elementAt(1)));
                     addChannel(c);
                 }
             }
@@ -287,7 +291,7 @@
                 }
                 if(!connected)
                     for(int e=0;e<connectionStatuses.size();e++)
-                        Log.errOut((String)connectionStatuses.elementAt(e));
+                        Log.errOut("Intermud",(String)connectionStatuses.elementAt(e));
             }
         }
         catch( Exception e ) {
@@ -424,9 +428,13 @@
 				if(len>65536)
 				{
 					int skipped=0;
-					while(skipped<len)
-						skipped+=input.skipBytes(len);
-					Log.errOut("Got illegal packet: "+skipped+"/"+len+" bytes.");
+                	try
+                	{ // please don't compress this again
+						while(skipped<len)
+							skipped+=input.skipBytes(len);
+                	}
+                    catch( java.io.IOException e ) {}
+					Log.errOut("Intermud","Got illegal packet: "+skipped+"/"+len+" bytes.");
 					continue;
 				}
                 byte[] tmp = new byte[len];
Index: planet_ink/coffee_mud/core/intermud/IMudClient.java
===================================================================
--- planet_ink/coffee_mud/core/intermud/IMudClient.java	(revision 2354)
+++ planet_ink/coffee_mud/core/intermud/IMudClient.java	(revision 2574)
@@ -26,7 +26,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/core/CMStrings.java
===================================================================
--- planet_ink/coffee_mud/core/CMStrings.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMStrings.java	(revision 2574)
@@ -2,7 +2,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/core/Resources.java
===================================================================
--- planet_ink/coffee_mud/core/Resources.java	(revision 2354)
+++ planet_ink/coffee_mud/core/Resources.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -92,10 +92,10 @@
         Vector V=new Vector();
         if(buf==null) return V;
         StringBuffer str=new StringBuffer("");
-        for(int i=0;i<buf.length()-1;i++)
+        for(int i=0;i<buf.length();i++)
         {
-            if(((buf.charAt(i)=='\n')&&(buf.charAt(i+1)=='\r'))
-               ||((buf.charAt(i)=='\r')&&(buf.charAt(i+1)=='\n')))
+            if(((buf.charAt(i)=='\n')&&(i<buf.length()-1)&&(buf.charAt(i+1)=='\r'))
+               ||((buf.charAt(i)=='\r')&&(i<buf.length()-1)&&(buf.charAt(i+1)=='\n')))
             {
                 i++;
                 V.addElement(str.toString());
Index: planet_ink/coffee_mud/core/threads/TockClient.java
===================================================================
--- planet_ink/coffee_mud/core/threads/TockClient.java	(revision 2354)
+++ planet_ink/coffee_mud/core/threads/TockClient.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/core/threads/ServiceEngine.java
===================================================================
--- planet_ink/coffee_mud/core/threads/ServiceEngine.java	(revision 2354)
+++ planet_ink/coffee_mud/core/threads/ServiceEngine.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -588,7 +588,10 @@
 			//Log.sysOut("ServiceEngine","Shutting down all tick "+which+"/"+numTicks+"...");
 			Tick tock=null;
 			synchronized(tickGroup){tock=(Tick)tickGroup.elementAt(0);}
-			if(tock!=null) tock.shutdown();
+			if(tock!=null){
+				CMProps.setUpAllLowVar(CMProps.SYSTEM_MUDSTATUS,"Shutting down...shutting down Service Engine: killing Tick#" + tock.getCounter()+": "+tock.getStatus());
+				tock.shutdown();
+			}
 			try{Thread.sleep(100);}catch(Exception e){}
 			which++;
 		}
@@ -838,6 +841,7 @@
                             insertOrderDeathInOrder(orderedDeaths,client.lastStart,msg,almostTock);
                         }
                     }
+                    // no isDEBUGGING check -- just always let her rip.
                     thread.debugDumpStack(almostTock);
                 }
             }
Index: planet_ink/coffee_mud/core/threads/Tick.java
===================================================================
--- planet_ink/coffee_mud/core/threads/Tick.java	(revision 2354)
+++ planet_ink/coffee_mud/core/threads/Tick.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -267,16 +267,17 @@
 
     public String getStatus() {
     	Tickable lastTicked = lastTicked();
-    	if((!awake)||(lastTicked==null)) 
+    	if((lastTicked==null)||(myEngine==null))
+    		return "Asleep or Shutdown";
+    	if(!awake)
     		return "Sleeping";
-    	return "Ticking: "+lastTicked.ID()+": "+lastTicked.name()+": "+myEngine.getTickStatusSummary(lastTicked);
+    	return "Ticking: "+lastTicked.ID()+": "+lastTicked.name()+": "+((myEngine!=null)?myEngine.getTickStatusSummary(lastTicked):"null");
     }
     
 	public void shutdown()
 	{
 		tickers.removeAllElements();
 		numTickers=tickers.size();
-		CMProps.setUpAllLowVar(CMProps.SYSTEM_MUDSTATUS,"Shutting down...shutting down Service Engine: killing Tick#" + tickObjectCounter+": "+getStatus());
 		CMLib.killThread(this,10,1);
 	}
 
Index: planet_ink/coffee_mud/core/CMProps.java
===================================================================
--- planet_ink/coffee_mud/core/CMProps.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMProps.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.io.ByteArrayInputStream;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -259,7 +259,7 @@
 			CMFile F=new CMFile(filename,null,false);
 			if(F.exists())
 			{
-				this.load(new ByteArrayInputStream(F.raw()));
+				this.load(new ByteArrayInputStream(F.textUnformatted().toString().getBytes()));
 				loaded=true;
 			}
 			else
@@ -706,7 +706,7 @@
         setVar(SYSTEM_CLANTROPEXP,getStr("CLANTROPEXP"));
         setVar(SYSTEM_CLANTROPPK,getStr("CLANTROPPK"));
         setVar(SYSTEM_COLORSCHEME,getStr("COLORSCHEME"));
-        setVar(SYSTEM_SMTPSERVERNAME,getStr("SMTPSERVERNAME"));
+        setUpLowVar(SYSTEM_SMTPSERVERNAME,getStr("SMTPSERVERNAME"));
         setVar(SYSTEM_EXPCONTACTLINE,getStr("EXPCONTACTLINE"));
         setVar(SYSTEM_AUTOWEATHERPARMS,getStr("AUTOWEATHERPARMS"));
         setVar(SYSTEM_DEFAULTPLAYERFLAGS,getStr("DEFAULTPLAYERFLAGS"));
Index: planet_ink/coffee_mud/core/database/RoomLoader.java
===================================================================
--- planet_ink/coffee_mud/core/database/RoomLoader.java	(revision 2354)
+++ planet_ink/coffee_mud/core/database/RoomLoader.java	(revision 2574)
@@ -19,7 +19,7 @@
 import com.planet_ink.coffee_mud.Libraries.CMCatalog.CataDataImpl;
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -657,31 +657,33 @@
 						else
 							itemLocs.put(newItem,loc);
 					}
-					if(catalog)
-					{
-					    String text=DBConnections.getResQuietly(R,"CMITTX");
-					    int x=text.lastIndexOf("<CATALOGDATA>");
-					    if((x>0)&&(text.indexOf("</CATALOGDATA>",x)>0))
-				        {
-			                cataData=(Hashtable)stuff.get("CATADATAFOR"+roomID.toUpperCase());
-			                if(cataData==null)
-			                {
-			                    cataData=new Hashtable();
-			                    stuff.put("CATADATAFOR"+roomID.toUpperCase(),cataData);
-			                }
-			                cataData.put(itemNum,text.substring(x));
-			                text=text.substring(0,x);
-				        }
-                        newItem.setMiscText(text);
-					}
-					else
-    					newItem.setMiscText(DBConnections.getResQuietly(R,"CMITTX"));
-					newItem.baseEnvStats().setRejuv((int)DBConnections.getLongRes(R,"CMITRE"));
-					newItem.setUsesRemaining((int)DBConnections.getLongRes(R,"CMITUR"));
-					newItem.baseEnvStats().setLevel((int)DBConnections.getLongRes(R,"CMITLV"));
-					newItem.baseEnvStats().setAbility((int)DBConnections.getLongRes(R,"CMITAB"));
-					newItem.baseEnvStats().setHeight((int)DBConnections.getLongRes(R,"CMHEIT"));
-					newItem.recoverEnvStats();
+					try {
+						if(catalog)
+						{
+						    String text=DBConnections.getResQuietly(R,"CMITTX");
+						    int x=text.lastIndexOf("<CATALOGDATA>");
+						    if((x>0)&&(text.indexOf("</CATALOGDATA>",x)>0))
+					        {
+				                cataData=(Hashtable)stuff.get("CATADATAFOR"+roomID.toUpperCase());
+				                if(cataData==null)
+				                {
+				                    cataData=new Hashtable();
+				                    stuff.put("CATADATAFOR"+roomID.toUpperCase(),cataData);
+				                }
+				                cataData.put(itemNum,text.substring(x));
+				                text=text.substring(0,x);
+					        }
+	                        newItem.setMiscText(text);
+						}
+						else
+	    					newItem.setMiscText(DBConnections.getResQuietly(R,"CMITTX"));
+						newItem.baseEnvStats().setRejuv((int)DBConnections.getLongRes(R,"CMITRE"));
+						newItem.setUsesRemaining((int)DBConnections.getLongRes(R,"CMITUR"));
+						newItem.baseEnvStats().setLevel((int)DBConnections.getLongRes(R,"CMITLV"));
+						newItem.baseEnvStats().setAbility((int)DBConnections.getLongRes(R,"CMITAB"));
+						newItem.baseEnvStats().setHeight((int)DBConnections.getLongRes(R,"CMHEIT"));
+						newItem.recoverEnvStats();
+	                } catch(Exception e) { Log.errOut("RoomLoader",e); itemNums.remove(itemNum);}
 				}
 				if(((currentRecordPos%updateBreak)==0)&&(setStatus))
 					CMProps.setUpLowVar(CMProps.SYSTEM_MUDSTATUS,"Booting: Loading Items ("+currentRecordPos+" of "+recordCount+")");
@@ -739,22 +741,24 @@
                         newMOB.setStartRoom(thisRoom);
                         newMOB.setLocation(thisRoom);
                     }
-					if((CMProps.getBoolVar(CMProps.SYSTEMB_MOBNOCACHE))
-					&&(!catalog)
-					&&(NUMID.indexOf(MOBID+"@")>=0))
-						newMOB.setMiscText("%DBID>"+roomID+NUMID.substring(NUMID.indexOf("@")));
-					else
-						newMOB.setMiscText(DBConnections.getResQuietly(R,"CMCHTX"));
-					newMOB.baseEnvStats().setLevel(((int)DBConnections.getLongRes(R,"CMCHLV")));
-					newMOB.baseEnvStats().setAbility((int)DBConnections.getLongRes(R,"CMCHAB"));
-					newMOB.baseEnvStats().setRejuv((int)DBConnections.getLongRes(R,"CMCHRE"));
-					String ride=DBConnections.getRes(R,"CMCHRI");
-					if((ride!=null)&&(ride.length()>0))
-						mobRides.put(newMOB,ride);
-					newMOB.recoverCharStats();
-					newMOB.recoverEnvStats();
-					newMOB.recoverMaxState();
-					newMOB.resetToMaxState();
+                    try {
+						if((CMProps.getBoolVar(CMProps.SYSTEMB_MOBNOCACHE))
+						&&(!catalog)
+						&&(NUMID.indexOf(MOBID+"@")>=0))
+							newMOB.setMiscText("%DBID>"+roomID+NUMID.substring(NUMID.indexOf("@")));
+						else
+							newMOB.setMiscText(DBConnections.getResQuietly(R,"CMCHTX"));
+						newMOB.baseEnvStats().setLevel(((int)DBConnections.getLongRes(R,"CMCHLV")));
+						newMOB.baseEnvStats().setAbility((int)DBConnections.getLongRes(R,"CMCHAB"));
+						newMOB.baseEnvStats().setRejuv((int)DBConnections.getLongRes(R,"CMCHRE"));
+						String ride=DBConnections.getRes(R,"CMCHRI");
+						if((ride!=null)&&(ride.length()>0))
+							mobRides.put(newMOB,ride);
+						newMOB.recoverCharStats();
+						newMOB.recoverEnvStats();
+						newMOB.recoverMaxState();
+						newMOB.resetToMaxState();
+                    } catch(Exception e) { Log.errOut("RoomLoader",e); itemNums.remove(NUMID);}
 				}
 				if(((currentRecordPos%updateBreak)==0)&&(setStatus))
 					CMProps.setUpLowVar(CMProps.SYSTEM_MUDSTATUS,"Booting: Loading MOBs ("+currentRecordPos+" of "+recordCount+")");
Index: planet_ink/coffee_mud/core/CMClass.java
===================================================================
--- planet_ink/coffee_mud/core/CMClass.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMClass.java	(revision 2574)
@@ -24,7 +24,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -75,7 +75,7 @@
     public static final int OBJECT_COMMON=17;
     public static final int OBJECT_LIBRARY=18;
     public static final int OBJECT_TOTAL=19;
-
+    
     public static int longestWebMacro=-1;
     protected Hashtable common=new Hashtable();
     protected Vector races=new Vector();
@@ -229,16 +229,17 @@
         StringBuffer str=new StringBuffer("");
         for(int i=0;i<OBJECT_TOTAL;i++)
             if(OBJECT_CREATIONS[i]>0)
-                str.append(CMStrings.padRight(OBJECT_DESCS[i],12)+": Created: "+OBJECT_CREATIONS[i]+", Destroyed: "+OBJECT_DESTRUCTIONS[i]+", Remaining: "+(OBJECT_CREATIONS[i]-OBJECT_DESTRUCTIONS[i])+"\n");
+                str.append(CMStrings.padRight(OBJECT_DESCS[i],12)+": Created: "+OBJECT_CREATIONS[i]+", Destroyed: "+OBJECT_DESTRUCTIONS[i]+", Remaining: "+(OBJECT_CREATIONS[i]-OBJECT_DESTRUCTIONS[i])+"\n\r");
         return str.toString();
     }
 
-	public static void addAllItemClassNames(Vector V, boolean NonArchon, boolean NonGeneric)
+	public static void addAllItemClassNames(Vector V, boolean NonArchon, boolean NonGeneric, boolean NonStandard)
 	{
 		for(Enumeration i=basicItems();i.hasMoreElements();)
 		{
 			Item I=(Item)i.nextElement();
 			if(((!NonArchon)||(!(I instanceof ArchonOnly)))
+			&&((!NonStandard)||(I.isGeneric()))
 			&&((!NonGeneric)||(!I.isGeneric())))
 				V.addElement(CMClass.classID(I));
 		}
@@ -246,6 +247,7 @@
 		{
 			Item I=(Item)i.nextElement();
 			if(((!NonArchon)||(!(I instanceof ArchonOnly)))
+			&&((!NonStandard)||(I.isGeneric()))
 			&&((!NonGeneric)||(!I.isGeneric())))
 				V.addElement(CMClass.classID(I));
 		}
@@ -253,6 +255,7 @@
 		{
 			Item I=(Item)i.nextElement();
 			if(((!NonArchon)||(!(I instanceof ArchonOnly)))
+			&&((!NonStandard)||(I.isGeneric()))
 			&&((!NonGeneric)||(!I.isGeneric())))
 				V.addElement(CMClass.classID(I));
 		}
@@ -260,6 +263,7 @@
 		{
 			Item I=(Item)i.nextElement();
 			if(((!NonArchon)||(!(I instanceof ArchonOnly)))
+			&&((!NonStandard)||(I.isGeneric()))
 			&&((!NonGeneric)||(!I.isGeneric())))
 				V.addElement(CMClass.classID(I));
 		}
@@ -267,6 +271,7 @@
 		{
 			Item I=(Item)i.nextElement();
 			if(((!NonArchon)||(!(I instanceof ArchonOnly)))
+			&&((!NonStandard)||(I.isGeneric()))
 			&&((!NonGeneric)||(!I.isGeneric())))
 				V.addElement(CMClass.classID(I));
 		}
@@ -274,6 +279,7 @@
 		{
 			Item I=(Item)i.nextElement();
 			if(((!NonArchon)||(!(I instanceof ArchonOnly)))
+			&&((!NonStandard)||(I.isGeneric()))
 			&&((!NonGeneric)||(!I.isGeneric())))
 				V.addElement(CMClass.classID(I));
 		}
Index: planet_ink/coffee_mud/core/CMLib.java
===================================================================
--- planet_ink/coffee_mud/core/CMLib.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMLib.java	(revision 2574)
@@ -22,7 +22,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/core/CMSecurity.java
===================================================================
--- planet_ink/coffee_mud/core/CMSecurity.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMSecurity.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/core/CMath.java
===================================================================
--- planet_ink/coffee_mud/core/CMath.java	(revision 2354)
+++ planet_ink/coffee_mud/core/CMath.java	(revision 2574)
@@ -3,7 +3,7 @@
 import java.io.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -17,6 +17,11 @@
    See the License for the specific language governing permissions and
    limitations under the License.
 */
+/**
+ * A core singleton class handling various mathematical operations and 
+ * functions, especially dealing with explicit type conversions, and 
+ * special string conversions and functions.
+ */
 public class CMath
 {
     private CMath(){super();}
@@ -26,6 +31,7 @@
     private static final String[] ROMAN_TENS={"X","XX","XXX","XL","L","LX","LXX","LXXX","XC","C"};
     private static final String[] ROMAN_ONES={"I","II","III","IV","V","VI","VII","VIII","IX","X"};
     private static final String   ROMAN_ALL="CDMPXLIV";
+    private static final java.text.DecimalFormat twoPlaces = new java.text.DecimalFormat("0.#####%");
 
 
     /** Convert an integer to its Roman Numeral equivalent
@@ -169,120 +175,336 @@
         return true;
     }
 
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(double a, double b)
     {
         return a/b;
     }
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(double a, int b)
     {
         return a/((double)b);
     }
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(int a, double b)
     {
         return ((double)a)/b;
     }
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(double a, long b)
     {
         return a/((double)b);
     }
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(long a, double b)
     {
         return ((double)a)/b;
     }
-
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static double mul(double a, double b)
     {
         return a*b;
     }
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static double mul(double a, int b)
     {
         return a*((double)b);
     }
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static double mul(int a, double b)
     {
         return ((double)a)*b;
     }
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static double mul(double a, long b)
     {
         return a*((double)b);
     }
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static double mul(long a, double b)
     {
         return ((double)a)*b;
     }
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static long mul(long a, long b)
     {
         return a*b;
     }
+    /**
+     * Multiply a and b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the first number
+     * @param b the second number
+     * @return the retult of multiplying a and b
+     */
     public static int mul(int a, int b)
     {
         return a*b;
     }
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(long a, long b)
     {
         return ((double)a)/((double)b);
     }
+    /**
+     * Divide a by b, making sure both are cast to doubles
+     * and that the return is precisely double.
+     * @param a the dividend
+     * @param b the divisor
+     * @return the quotient
+     */
     public static double div(int a, int b)
     {
         return ((double)a)/((double)b);
     }
+    /**
+     * Raises x to the y power, making sure both are cast to doubles
+     * and that the return is rounded off.
+     * @param x the base number
+     * @param y the power
+     * @return x to the y power, rounded off
+     */
     public static long pow(long x, long y)
     {
         return Math.round(Math.pow(((double)x),((double)y)));
     }
+    /**
+     * Returns x, squared, after being case to a double
+     * @param x the number to square
+     * @return x, squared, and rounded off.
+     */
     public static int squared(int x)
     {
         return (int)Math.round(Math.pow(((double)x),2.0));
     }
+    /**
+     * Returns true if the given number has the bits
+     * represented by the given bitmask set.
+     * @param num the number
+     * @param bitmask the bit mask
+     * @return true if the bits are set, false otherwise
+     */
     public static boolean bset(short num, short bitmask)
     {
         return ((num&bitmask)==bitmask);
     }
+    /**
+     * Returns true if the given number has the bits
+     * represented by the given bitmask set.
+     * @param num the number
+     * @param bitmask the bit mask
+     * @return true if the bits are set, false otherwise
+     */
     public static boolean bset(int num, int bitmask)
     {
         return ((num&bitmask)==bitmask);
     }
+    /**
+     * Returns true if the given number has the bits
+     * represented by the given bitmask set.
+     * @param num the number
+     * @param bitmask the bit mask
+     * @return true if the bits are set, false otherwise
+     */
     public static boolean bset(long num, long bitmask)
     {
         return ((num&bitmask)==bitmask);
     }
+    /**
+     * Returns true if the given number has the bits
+     * represented by the given bitmask set.
+     * @param num the number
+     * @param bitmask the bit mask
+     * @return true if the bits are set, false otherwise
+     */
     public static boolean bset(long num, int bitmask)
     {
         return ((num&bitmask)==bitmask);
     }
+    /**
+     * Returns the given number, after having set the
+     * bits represented by the given bit mask.
+     * @param num the number
+     * @param bitmask the bitmask
+     * @return the number | the bitmask
+     */
     public static int setb(int num, int bitmask)
     {
         return num|bitmask;
     }
+    /**
+     * Returns true if any of the bits represented
+     * by the given bitmask are set in the given
+     * number.
+     * @param num the given number
+     * @param bitmask the bitmask of bits to check
+     * @return true if any bits from the mask are set
+     */
     public static boolean banyset(int num, int bitmask)
     {
         return ((num&bitmask)>0);
     }
+    /**
+     * Returns true if any of the bits represented
+     * by the given bitmask are set in the given
+     * number.
+     * @param num the given number
+     * @param bitmask the bitmask of bits to check
+     * @return true if any bits from the mask are set
+     */
     public static boolean banyset(long num, long bitmask)
     {
         return ((num&bitmask)>0);
     }
+    /**
+     * Returns true if any of the bits represented
+     * by the given bitmask are set in the given
+     * number.
+     * @param num the given number
+     * @param bitmask the bitmask of bits to check
+     * @return true if any bits from the mask are set
+     */
     public static boolean banyset(long num, int bitmask)
     {
         return ((num&bitmask)>0);
     }
+    /**
+     * Returns the given number, after having set the
+     * bits represented by the given bit mask.
+     * @param num the number
+     * @param bitmask the bitmask
+     * @return the number | the bitmask
+     */
     public static long setb(long num, int bitmask)
     {
         return num|bitmask;
     }
+    /**
+     * Returns the given number, after having set the
+     * bits represented by the given bit mask.
+     * @param num the number
+     * @param bitmask the bitmask
+     * @return the number | the bitmask
+     */
     public static long setb(long num, long bitmask)
     {
         return num|bitmask;
     }
+    /**
+     * Unsets those bits in the given number which are
+     * turned ON in the given bitmask.
+     * @param num the given number
+     * @param bitmask the given bitmask
+     * @return the number without the bitmasks bits turned on.
+     */
     public static int unsetb(int num, int bitmask) { return num & (~bitmask);}
+    /**
+     * Unsets those bits in the given number which are
+     * turned ON in the given bitmask.
+     * @param num the given number
+     * @param bitmask the given bitmask
+     * @return the number without the bitmasks bits turned on.
+     */
     public static long unsetb(long num, long bitmask) { return num & (~bitmask);}
+    /**
+     * Unsets those bits in the given number which are
+     * turned ON in the given bitmask.
+     * @param num the given number
+     * @param bitmask the given bitmask
+     * @return the number without the bitmasks bits turned on.
+     */
     public static long unsetb(long num, int bitmask) { return num & (~bitmask);}
-    
+    /**
+     * Returns true if the bitnumberth bit (0...) is set 
+     * in the given number
+     * @param number the given number
+     * @param bitnumber the bit to check (0,1,2...)
+     * @return true if the given bitnumberth bit is set
+     */
     public static boolean isSet(int number, int bitnumber)
     {
     	int mask=(int)pow(2,bitnumber);
     	return ((number&mask)==mask);
     }
+    /**
+     * Returns true if the given string represents a 
+     * percentage in the form X% where X is any real
+     * number.
+     * @param s the string to check
+     * @return true if it is a percentage, false otherwise
+     */
     public static boolean isPct(String s)
     {
         if(s==null) return false;
@@ -290,44 +512,152 @@
         if(!s.endsWith("%")) return false;
         return CMath.isNumber(s.substring(0,s.length()-1));
     }
+    /**
+     * Converts the given string to a floating
+     * point number, 1>=N>=0, representing 
+     * the whole percentage of the string.  The
+     * string format is either X or X%, where 100>=X>=0
+     * If the format is bad, 0.0 is returned.
+     * @param s the string to convert
+     * @return the string converted to a real number 
+     */
     public static double s_pct(String s)
     {
     	if(s==null) return 0.0;
     	while(s.trim().endsWith("%")) s=s.trim().substring(0,s.length()-1).trim();
     	return s_double(s)/100.0;
     }
+    
+    /**
+     * Converts a percentage 1>d>0 to a string.
+     * @param d the number to convert
+     * @return the percentage string.
+     */
     public static String toPct(double d)
     {
-        java.text.DecimalFormat twoPlaces = new java.text.DecimalFormat("0.#####%");
         String s=twoPlaces.format(d);
         if(s.endsWith("%%")) return s.substring(0,s.length()-1);
         return s;
 
     }
+    
+    /**
+     * Converts the string to a double percentage and then
+     * converts that back to a percentage.
+     * @param s the string number
+     * @return the percentage %
+     */
     public static String toPct(String s) { return toPct(s_pct(s)); }
 
+    /**
+     * Returns true if the bitnumberth bit (0...) is set 
+     * in the given number
+     * @param number the given number
+     * @param bitnumber the bit to check (0,1,2...)
+     * @return true if the given bitnumberth bit is set
+     */
     public static boolean isSet(long number, int bitnumber)
     {
         if((number&(pow(2,bitnumber)))==(pow(2,bitnumber)))
             return true;
         return false;
     }
-
+    
+    /**
+     * Returns whether the given string is a valid
+     * math expression (5 + 7)/2, etc. Does this
+     * by evaluating the expression and returning
+     * false if an error is found.  No variables
+     * are allowed.
+     * @param st the possible math expression
+     * @return true if it is a math expression
+     */
     public static boolean isMathExpression(String st){
         if((st==null)||(st.length()==0)) return false;
         try{ parseMathExpression(st);}catch(Exception e){ return false;}
         return true;
     }
+    /**
+     * Returns whether the given string is a valid
+     * math expression (@x1 + 7)/2, etc. Does this
+     * by evaluating the expression and returning
+     * false if an error is found.  All necessary
+     * variables MUST be included (@x1=vars[0])
+     * @param st the possible math expression
+     * @param vars the 0 based variables
+     * @return true if it is a math expression
+     */
     public static boolean isMathExpression(String st, double[] vars){
         if((st==null)||(st.length()==0)) return false;
         try{ parseMathExpression(st,vars);}catch(Exception e){ return false;}
         return true;
     }
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Returns 0.0 on any parsing error
+     * @param st a full math expression string
+     * @return the result of the expression
+     */
     public static double s_parseMathExpression(String st){ try{ return parseMathExpression(st);}catch(Exception e){ return 0.0;}}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Variables are included as @x1, etc.. The given
+     * variable values list is 0 based, so @x1 = vars[0].
+     * Returns 0.0 on any parsing error
+     * @param st a full math expression string
+     * @param vars the 0 based variables
+     * @return the result of the expression
+     */
     public static double s_parseMathExpression(String st, double[] vars){ try{ return parseMathExpression(st,vars);}catch(Exception e){ return 0.0;}}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Rounds the result to a long.
+     * Returns 0 on any parsing error
+     * @param st a full math expression string
+     * @return the result of the expression
+     */
     public static long s_parseLongExpression(String st){ try{ return parseLongExpression(st);}catch(Exception e){ return 0;}}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Variables are included as @x1, etc.. The given
+     * variable values list is 0 based, so @x1 = vars[0].
+     * Rounds the result to a long.
+     * Returns 0 on any parsing error
+     * @param st a full math expression string
+     * @param vars the 0 based variables
+     * @return the result of the expression
+     */
     public static long s_parseLongExpression(String st, double[] vars){ try{ return parseLongExpression(st,vars);}catch(Exception e){ return 0;}}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.  
+     * Round the result to an integer.
+     * Returns 0 on any parsing error
+     * @param st a full math expression string
+     * @return the result of the expression
+     */
     public static int s_parseIntExpression(String st){ try{ return parseIntExpression(st);}catch(Exception e){ return 0;}}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Variables are included as @x1, etc.. The given
+     * variable values list is 0 based, so @x1 = vars[0].
+     * Rounds the result to an integer.
+     * Returns 0 on any parsing error
+     * @param st a full math expression string
+     * @param vars the 0 based variables
+     * @return the result of the expression
+     */
     public static int s_parseIntExpression(String st, double[] vars){ try{ return parseIntExpression(st,vars);}catch(Exception e){ return 0;}}
 
     private static double parseMathExpression(StreamTokenizer st, boolean inParen, double[] vars)
@@ -404,18 +734,78 @@
         return finalValue;
     }
 
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Rounds the result to a long
+     * Throws an exception on any parsing error
+     * @param formula a full math expression string
+     * @return the result of the expression
+     */
     public static long parseLongExpression(String formula)
     {return Math.round(parseMathExpression(new StreamTokenizer(new InputStreamReader(new ByteArrayInputStream(formula.getBytes()))),false,null));}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Variables are included as @x1, etc.. The given
+     * variable values list is 0 based, so @x1 = vars[0].
+     * Rounds the result to a long
+     * Throws an exception on any parsing error
+     * @param formula a full math expression string
+     * @param vars the 0 based variables
+     * @return the result of the expression
+     */
     public static long parseLongExpression(String formula, double[] vars)
     {return Math.round(parseMathExpression(new StreamTokenizer(new InputStreamReader(new ByteArrayInputStream(formula.getBytes()))),false,vars));}
 
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Rounds the result to an integer.
+     * Throws an exception on any parsing error
+     * @param formula a full math expression string
+     * @return the result of the expression
+     */
     public static int parseIntExpression(String formula) throws ArithmeticException
     {return (int)Math.round(parseMathExpression(new StreamTokenizer(new InputStreamReader(new ByteArrayInputStream(formula.getBytes()))),false,null));}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Variables are included as @x1, etc.. The given
+     * variable values list is 0 based, so @x1 = vars[0].
+     * Rounds the result to an integer.
+     * Throws an exception on any parsing error
+     * @param formula a full math expression string
+     * @param vars the 0 based variables
+     * @return the result of the expression
+     */
     public static int parseIntExpression(String formula, double[] vars) throws ArithmeticException
     {return (int)Math.round(parseMathExpression(new StreamTokenizer(new InputStreamReader(new ByteArrayInputStream(formula.getBytes()))),false,vars));}
-
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Throws an exception on any parsing error
+     * @param formula a full math expression string
+     * @return the result of the expression
+     */
     public static double parseMathExpression(String formula) throws ArithmeticException
     {return parseMathExpression(new StreamTokenizer(new InputStreamReader(new ByteArrayInputStream(formula.getBytes()))),false,null);}
+    /**
+     * Returns the result of evaluating the given math
+     * expression.  An expression can be a double or int
+     * number, or a full expression using ()+_/*?.
+     * Variables are included as @x1, etc.. The given
+     * variable values list is 0 based, so @x1 = vars[0].
+     * Throws an exception on any parsing error
+     * @param formula a full math expression string
+     * @param vars the 0 based variables
+     * @return the result of the expression
+     */
     public static double parseMathExpression(String formula, double[] vars) throws ArithmeticException
     {return parseMathExpression(new StreamTokenizer(new InputStreamReader(new ByteArrayInputStream(formula.getBytes()))),false,vars);}
 
@@ -466,12 +856,24 @@
     }
 
 
+    /**
+     * Returns the absolute value (X>=0) of the
+     * given number
+     * @param val the number
+     * @return the absolute value of the number
+     */
     public static int abs(int val)
     {
         if(val>=0) return val;
         return val*-1;
     }
 
+    /**
+     * Returns the absolute value (X>=0) of the
+     * given number
+     * @param val the number
+     * @return the absolute value of the number
+     */
     public static long abs(long val)
     {
         if(val>=0) return val;
@@ -685,15 +1087,69 @@
         return alreadyDot;
     }
 
+    /**
+     * @see java.lang.Math#round(double)
+     * @param d the real number
+     * @return the rounded number as a long
+     */
     public long round(double d){return Math.round(d);}
+    /**
+     * @see java.lang.Math#round(float)
+     * @param d the real number
+     * @return the rounded number as a long
+     */
     public long round(float d){return Math.round(d);}
+    /**
+     * @see java.lang.Math#abs(double)
+     * @param d the real number
+     * @return the absolute value of the number
+     */
     public double abs(double d){return Math.abs(d);}
+    /**
+     * @see java.lang.Math#abs(float)
+     * @param d the real number
+     * @return the absolute value of the number
+     */
     public float abs(float d){return Math.abs(d);}
+    /**
+     * @see java.lang.Math#random()
+     * @return a random number
+     */
     public double random(){return Math.random();}
+    /**
+     * @see java.lang.Math#floor(double)
+     * @param d the number to get the floor of
+     * @return the floor of the given number
+     */
     public double floor(double d){return Math.floor(d);}
+    /**
+     * @see java.lang.Math#floor(float)
+     * @param d the number to get the floor of
+     * @return the floor of the given number
+     */
     public float floor(float d){return (float)Math.floor(d);}
+    /**
+     * @see java.lang.Math#floor(double)
+     * @param d the number to get the ceiling of
+     * @return the ceiling of the given number
+     */
     public double ceiling(double d){return Math.ceil(d);}
+    /**
+     * @see java.lang.Math#floor(float)
+     * @param d the number to get the ceiling of
+     * @return the ceiling of the given number
+     */
     public float ceiling(float d){return (float)Math.ceil(d);}
+    /**
+     * @see java.lang.Math#sqrt(double)
+     * @param d the number to get the square root of
+     * @return the square root of the given number
+     */
     public double sqrt(double d){return Math.sqrt(d);}
+    /**
+     * @see java.lang.Math#sqrt(float)
+     * @param d the number to get the square root of
+     * @return the square root of the given number
+     */
     public float sqrt(float d){return (float)Math.sqrt(d);}
 }
Index: planet_ink/coffee_mud/Common/DefaultCharStats.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultCharStats.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultCharStats.java	(revision 2574)
@@ -19,7 +19,7 @@
 import org.mozilla.javascript.ScriptableObject;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -675,6 +675,12 @@
 			setStat(STAT_MAX_STRENGTH_ADJ+abilityCode,
 					value-CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT));
 	}
+	
+	public int getMaxStat(int abilityCode)
+	{
+		int baseMax = CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT);
+		return baseMax + getStat(STAT_MAX_STRENGTH_ADJ + abilityCode);
+	}
     
     public void setRacialStat(int abilityCode, int racialMax)
     {
Index: planet_ink/coffee_mud/Common/interfaces/CMMsg.java
===================================================================
--- planet_ink/coffee_mud/Common/interfaces/CMMsg.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/interfaces/CMMsg.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.Vector;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -890,6 +890,8 @@
     public static final int TYP_LIFE=97;
     /** MINOR_MASK minor action code type, denoting a auctioneer bid action*/
     public static final int TYP_BID=98;
+    /** MINOR_MASK minor action code type, denoting a auctioneer bid action*/
+    public static final int TYP_CLANEVENT=99;
 
     /** MINOR_MASK minor action code type, denoting a channel action -- 2000-2047 are channels*/
 	public static final int TYP_CHANNEL=2000; //(2000-2047 are channels)
@@ -914,7 +916,7 @@
         "TELL", "SITMOVE", "KNOCK", "PRACTICE", "TEACH", "REMOVE", "EXPCHANGE", 
         "DAMAGE", "HEALING", "ROOMRESET", "RELOAD", "SNIFF", "ACTIVATE", "DEACTIVATE", 
         "FACTIONCHANGE", "LOGIN", "LEVEL", "EXAMINE", "ORDER","EXPIRE","BORROW","HUH",
-        "LIFE","BID"
+        "LIFE","BID","CLANEVENT"
     };
     
     /** Index string descriptions of all the MAJOR_MASK code MAKS_s */
@@ -1123,4 +1125,6 @@
     public static final int MSG_BRINGTOLIFE=MASK_ALWAYS|TYP_LIFE;
     /** combined MAJOR and MINOR codes for useful event message type for a auction bid event */
 	public static final int MSG_BID=MSK_HAGGLE|TYP_BID;
+    /** combined MAJOR and MINOR codes for useful event message type for a clan event */
+	public static final int MSG_CLANEVENT=MASK_ALWAYS|TYP_CLANEVENT;
 }
\ No newline at end of file
Index: planet_ink/coffee_mud/Common/interfaces/Clan.java
===================================================================
--- planet_ink/coffee_mud/Common/interfaces/Clan.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/interfaces/Clan.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Jeremy Vyska, Bo Zimmerman
+   Copyright 2000-2009 Jeremy Vyska, Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -675,7 +675,7 @@
 
 	/** descriptor table with x axis being Clan.POS_* constants, and y axis being Clan.GVT_* constants.  @see Clan */
 	public static final String[][] ROL_DESCS={
-		{"APPLICANT","MEMBER","STAFF","ENCHANTER","TREASURER","LEADER","BOSS"},
+		{"APPLICANT","MEMBER","STAFF","ENCHANTER","TREASURER","LIEUTENANT","BOSS"},
 		{"APPLICANT","MEMBER","CHIEF","ENCHANTER","TREASURER","SECRETARY","GUILDMASTER"},
 		{"APPLICANT","CITIZEN","SHERIFF","ENCHANTER","TREASURER","SECRETARY","SENATOR"},
 		{"APPLICANT","CITIZEN","SOLDIER","ENCHANTER","TREASURER","MANAGER","FIRST CITIZEN"},
Index: planet_ink/coffee_mud/Common/interfaces/Session.java
===================================================================
--- planet_ink/coffee_mud/Common/interfaces/Session.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/interfaces/Session.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.net.Socket;
 import java.net.SocketException;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -795,6 +795,8 @@
     public static final int TELNET_BINARY=0;
     /** TELNET CODE: echo */
     public static final int TELNET_ECHO=1;
+    /** TELNET CODE: echo */
+    public static final int TELNET_LOGOUT=18;
     /** TELNET CODE: supress go ahead*/
     public static final int TELNET_SUPRESS_GO_AHEAD=3;
     /** TELNET CODE: sending terminal type*/
@@ -837,7 +839,7 @@
     public static final String[] TELNET_DESCS=
     { 
         "BINARY","ECHO","2","SUPRESS GO AHEAD","4","5","6","7","8","9", //0-9
-        "10","11","12","13","14","15","16","17","18","19", //10-19
+        "10","11","12","13","14","15","16","17","LOGOUT","19", //10-19
         "20","21","22","23","TERMTYPE","25","26","27","28","29", //20-29
         "30","NAWS","32","FLOWCONTROL","LINEMODE","35","36","37","38","39", //30-39
         "40","41","42","43","44","45","46","47","48","49", //40-49
Index: planet_ink/coffee_mud/Common/interfaces/CoffeeTableRow.java
===================================================================
--- planet_ink/coffee_mud/Common/interfaces/CoffeeTableRow.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/interfaces/CoffeeTableRow.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Common/interfaces/ScriptingEngine.java
===================================================================
--- planet_ink/coffee_mud/Common/interfaces/ScriptingEngine.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/interfaces/ScriptingEngine.java	(revision 2574)
@@ -1,4 +1,5 @@
 package com.planet_ink.coffee_mud.Common.interfaces;
+import com.planet_ink.coffee_mud.core.exceptions.ScriptParseException;
 import com.planet_ink.coffee_mud.core.interfaces.*;
 import com.planet_ink.coffee_mud.core.*;
 import com.planet_ink.coffee_mud.Abilities.interfaces.*;
@@ -20,7 +21,7 @@
 import org.mozilla.javascript.ScriptableObject;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -81,7 +82,24 @@
      */
     public void dequeResponses();
 
+    
     /**
+     * Creates a mob from the Tickable object sent, possibly saving it
+     * locally to this object for use later.   
+     * @param ticking
+     * @return a mob from a tickable
+     */
+    public MOB getMakeMOB(Tickable ticking);
+    
+    /**
+     * Receives a string for evaluation by the eval function, and stores 
+     * it as the first element in the given 2 dimensional string array.
+     * @param expression the eval expression
+     * @return EVAL the 1 dimensional array to hold the compiled eval
+     */
+    public String[] parseEval(String evaluable) throws ScriptParseException;
+    
+    /**
      * Evaluates a scripting function.  Is called by the execute command
      * to resolve IF, WHILE, and similar expressions that utilize the MOBPROG
      * functions.  The expressions are passed in as a String array stored
Index: planet_ink/coffee_mud/Common/interfaces/CharStats.java
===================================================================
--- planet_ink/coffee_mud/Common/interfaces/CharStats.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/interfaces/CharStats.java	(revision 2574)
@@ -13,7 +13,7 @@
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -104,10 +104,12 @@
     public static final int STAT_SAVE_DETECTION=29;
     /** stat constant for save vs overlooking hidden things */
     public static final int STAT_SAVE_OVERLOOKING=30;
-    /** constant for total number of stat codes */
+    /** stat constant for amount of faith? */
     public static final int STAT_FAITH=31;
+    /** stat constant for additions/subtractions from base weight */
+    public static final int STAT_WEIGHTADJ=32;
     /** constant for total number of stat codes */
-	public final static int NUM_STATS=32;
+	public final static int NUM_STATS=33;
 
 	/**
      * Copies the internal data of this object into another of kind.
@@ -123,6 +125,14 @@
      * @return the value of the given STAT
      */
 	public int getStat(int statNum);
+	
+	/**
+	 * A method that simply calculates the nomimal max of the given
+	 * ordinary stat code from available data.
+	 * @param abilityCode (str, int, etc)
+	 * @return the max stat.
+	 */
+	public int getMaxStat(int abilityCode);
     /**
      * Set the value of one of the STAT_ constants, representing attributes,
      * saving throws, and max attributes, from the CharStats interface.
@@ -552,7 +562,8 @@
         "A",
         "vH",
         "vO",
-        "vC"
+        "vC",
+        "Wa"
     };
 
     /** string array of descriptions of each stat code, ordered by numeric value */
@@ -589,7 +600,8 @@
         "AGE",
         "SAVE VS DETECTION",
         "SAVE VS OVERLOOKING",
-        "SAVE VS CONVERSIONS"
+        "SAVE VS CONVERSIONS",
+        "WEIGHT ADJUSTMENT"
     };
 
     /** string array of descriptions of each stat code, ordered by numeric value */
@@ -626,7 +638,8 @@
         "AGE",
         "DETECTION",
         "OVERLOOKING",
-        "CONVERSION"
+        "CONVERSION",
+        "WEIGHTADJ"
     };
 
     /** string array of attributable descriptions of each stat code, ordered by numeric value */
@@ -663,7 +676,8 @@
         "OLD",
         "CONCEALED",
         "WATCHFUL",
-        "DOUBTFUL"
+        "DOUBTFUL",
+        ""
     };
 
     /** an appropriate CMMsg MSG type to correspond to the given saving throw, indexed as STAT_SAVE_ constant */
@@ -700,6 +714,7 @@
             -1, // save conceilment
             -1, // save overlooking
             -1, // save conversion
+            -1, // weight adjustment
            };
 
 }
Index: planet_ink/coffee_mud/Common/DefaultArrestWarrant.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultArrestWarrant.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultArrestWarrant.java	(revision 2574)
@@ -21,7 +21,7 @@
 import java.util.Vector;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Common/DefaultLawSet.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultLawSet.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultLawSet.java	(revision 2574)
@@ -22,7 +22,7 @@
 import java.util.Vector;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Common/DefaultQuest.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultQuest.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultQuest.java	(revision 2574)
@@ -21,7 +21,7 @@
 import org.mozilla.javascript.ScriptableObject;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -3036,107 +3036,111 @@
 	        }
 	        if(questState.addons.size()>0)
 	        {
-	            for(int i=questState.addons.size()-1;i>=0;i--)
-	            {
-	                Integer I=(Integer)questState.addons.elementAt(i,2);
-	                if(I.intValue()>0)
-	                {
-	                    questState.addons.setElementAt(i,2,new Integer(I.intValue()-1));
-	                    continue;
-	                }
-	                Vector V=(Vector)questState.addons.elementAt(i,1);
-	                questState.addons.removeElementAt(i);
-	                if(V.size()<2) continue;
-	                Environmental E=(Environmental)V.elementAt(0);
-	                Object O=V.elementAt(1);
-	                if(O instanceof String)
-	                {
-	                    String stat=(String)O;
-	                    String parms=(String)V.elementAt(2);
-	                    if(CMStrings.contains(E.getStatCodes(),stat.toUpperCase().trim()))
-		                    E.setStat(stat,parms);
-	                    else
-	                    if(CMStrings.contains(E.baseEnvStats().getStatCodes(),stat.toUpperCase().trim()))
-	                    {
-	                    	E.baseEnvStats().setStat(stat.toUpperCase().trim(),parms);
-	                    	E.recoverEnvStats();
-	                    }
-	                    else
-	                    if((E instanceof MOB)&&(CMStrings.contains(CharStats.STAT_NAMES,stat.toUpperCase().trim())))
-	                    {
-	                    	((MOB)E).baseCharStats().setStat(CMParms.indexOf(CharStats.STAT_NAMES,stat.toUpperCase().trim()),CMath.s_int(parms));
-	                    	((MOB)E).recoverCharStats();
-	                    }
-	                    else
-	                    if((E instanceof MOB)&&CMStrings.contains(((MOB)E).baseState().getStatCodes(),stat))
-	                    {
-	                    	((MOB)E).baseState().setStat(stat,parms);
-	                    	((MOB)E).recoverMaxState();
-	                    	((MOB)E).resetToMaxState();
-	                    }
-	                }
-	                else
-	                if(O instanceof Behavior)
-	                {
-	                    Behavior B=E.fetchBehavior(((Behavior)O).ID());
-	                    if((E instanceof MOB)&&(B instanceof ScriptingEngine))
-	                        ((ScriptingEngine)B).endQuest(E,(MOB)E,name());
-	                    if((V.size()>2)&&(V.elementAt(2) instanceof String))
-	                    {
-	                        if(B==null){ B=(Behavior)O; E.addBehavior(B);}
-	                        B.setParms((String)V.elementAt(2));
-	                    }
-	                    else
-	                    if(B!=null)
-	                        E.delBehavior(B);
-	                }
-	                else
-	                if(O instanceof ScriptingEngine)
-	                {
-	                    ScriptingEngine S=(ScriptingEngine)O;
-	                    if((E instanceof MOB)&&(!S.isSavable()))
-	                    {
-	                        S.endQuest(E,(MOB)E,name());
-	                        ((MOB)E).delScript(S);
-	                    }
-	                }
-	                else
-	                if(O instanceof Ability)
-	                {
-	                    if((V.size()>2)
-	                    &&(V.elementAt(2) instanceof Ability)
-	                    &&(E instanceof MOB))
-	                    {
-	                        Ability A=((MOB)E).fetchAbility(((Ability)O).ID());
-	                        if((V.size()>3)&&(V.elementAt(3) instanceof String))
-	                        {
-	                            if(A==null){A=(Ability)O; ((MOB)E).addAbility(A);}
-	                            A.setMiscText((String)V.elementAt(3));
-	                        }
-	                        else
-	                        if(A!=null)
-	                            ((MOB)E).delAbility(A);
-	                    }
-	                    else
-	                    {
-	                        Ability A=E.fetchEffect(((Ability)O).ID());
-	                        if((V.size()>2)&&(V.elementAt(2) instanceof String))
-	                        {
-	                            if(A==null){A=(Ability)O; E.addEffect(A);}
-	                            A.setMiscText((String)V.elementAt(2));
-	                        }
-	                        else
-	                        if(A!=null)
-	                        {
-	                            A.unInvoke();
-	                            E.delEffect(A);
-	                        }
-	                    }
-	                }
-	                else
-	                if(O instanceof Item)
-	                    ((Item)O).destroy();
-	            }
+	        	synchronized(questState)
+	        	{
+	        		if(stoppingQuest)
+		            for(int i=questState.addons.size()-1;i>=0;i--)
+		            {
+		                Integer I=(Integer)questState.addons.elementAt(i,2);
+		                if(I.intValue()>0)
+		                {
+		                    questState.addons.setElementAt(i,2,new Integer(I.intValue()-1));
+		                    continue;
+		                }
+		                Vector V=(Vector)questState.addons.elementAt(i,1);
+		                questState.addons.removeElementAt(i);
+		                if(V.size()<2) continue;
+		                Environmental E=(Environmental)V.elementAt(0);
+		                Object O=V.elementAt(1);
+		                if(O instanceof String)
+		                {
+		                    String stat=(String)O;
+		                    String parms=(String)V.elementAt(2);
+		                    if(CMStrings.contains(E.getStatCodes(),stat.toUpperCase().trim()))
+			                    E.setStat(stat,parms);
+		                    else
+		                    if(CMStrings.contains(E.baseEnvStats().getStatCodes(),stat.toUpperCase().trim()))
+		                    {
+		                    	E.baseEnvStats().setStat(stat.toUpperCase().trim(),parms);
+		                    	E.recoverEnvStats();
+		                    }
+		                    else
+		                    if((E instanceof MOB)&&(CMStrings.contains(CharStats.STAT_NAMES,stat.toUpperCase().trim())))
+		                    {
+		                    	((MOB)E).baseCharStats().setStat(CMParms.indexOf(CharStats.STAT_NAMES,stat.toUpperCase().trim()),CMath.s_int(parms));
+		                    	((MOB)E).recoverCharStats();
+		                    }
+		                    else
+		                    if((E instanceof MOB)&&CMStrings.contains(((MOB)E).baseState().getStatCodes(),stat))
+		                    {
+		                    	((MOB)E).baseState().setStat(stat,parms);
+		                    	((MOB)E).recoverMaxState();
+		                    	((MOB)E).resetToMaxState();
+		                    }
+		                }
+		                else
+		                if(O instanceof Behavior)
+		                {
+		                    Behavior B=E.fetchBehavior(((Behavior)O).ID());
+		                    if((E instanceof MOB)&&(B instanceof ScriptingEngine))
+		                        ((ScriptingEngine)B).endQuest(E,(MOB)E,name());
+		                    if((V.size()>2)&&(V.elementAt(2) instanceof String))
+		                    {
+		                        if(B==null){ B=(Behavior)O; E.addBehavior(B);}
+		                        B.setParms((String)V.elementAt(2));
+		                    }
+		                    else
+		                    if(B!=null)
+		                        E.delBehavior(B);
+		                }
+		                else
+		                if(O instanceof ScriptingEngine)
+		                {
+		                    ScriptingEngine S=(ScriptingEngine)O;
+		                    if((E instanceof MOB)&&(!S.isSavable()))
+		                    {
+		                        S.endQuest(E,(MOB)E,name());
+		                        ((MOB)E).delScript(S);
+		                    }
+		                }
+		                else
+		                if(O instanceof Ability)
+		                {
+		                    if((V.size()>2)
+		                    &&(V.elementAt(2) instanceof Ability)
+		                    &&(E instanceof MOB))
+		                    {
+		                        Ability A=((MOB)E).fetchAbility(((Ability)O).ID());
+		                        if((V.size()>3)&&(V.elementAt(3) instanceof String))
+		                        {
+		                            if(A==null){A=(Ability)O; ((MOB)E).addAbility(A);}
+		                            A.setMiscText((String)V.elementAt(3));
+		                        }
+		                        else
+		                        if(A!=null)
+		                            ((MOB)E).delAbility(A);
+		                    }
+		                    else
+		                    {
+		                        Ability A=E.fetchEffect(((Ability)O).ID());
+		                        if((V.size()>2)&&(V.elementAt(2) instanceof String))
+		                        {
+		                            if(A==null){A=(Ability)O; E.addEffect(A);}
+		                            A.setMiscText((String)V.elementAt(2));
+		                        }
+		                        else
+		                        if(A!=null)
+		                        {
+		                            A.unInvoke();
+		                            E.delEffect(A);
+		                        }
+		                    }
+		                }
+		                else
+		                if(O instanceof Item)
+		                    ((Item)O).destroy();
+		            }
+		        }
 	        }
         }
         stoppingQuest=false;
@@ -4250,7 +4254,7 @@
         case 12: // instructions can and should fall through the default
 		default:
             if((code.toUpperCase().trim().equalsIgnoreCase("REMAINING"))&&(running()))
-                ticksRemaining=CMath.s_parseIntExpression(val);
+                ticksRemaining=CMLib.time().parseTickExpression(val);
             else
             {
     			int x=questState.vars.indexOf(code.toUpperCase().trim());
Index: planet_ink/coffee_mud/Common/FakeSession.java
===================================================================
--- planet_ink/coffee_mud/Common/FakeSession.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/FakeSession.java	(revision 2574)
@@ -1,19 +1,36 @@
 package com.planet_ink.coffee_mud.Common;
 
+import java.io.ByteArrayOutputStream;
 import java.net.Socket;
 import java.util.Vector;
 import com.planet_ink.coffee_mud.Common.interfaces.Session;
 import com.planet_ink.coffee_mud.MOBS.interfaces.MOB;
 import com.planet_ink.coffee_mud.core.CMClass;
 import com.planet_ink.coffee_mud.core.CMFile;
+import com.planet_ink.coffee_mud.core.Log;
 import com.planet_ink.coffee_mud.core.interfaces.CMObject;
 import com.planet_ink.coffee_mud.core.interfaces.Environmental;
 import com.planet_ink.coffee_mud.core.interfaces.Tickable;
+/* 
+Copyright 2000-2009 Bo Zimmerman
 
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
 @SuppressWarnings("unchecked")
 public class FakeSession implements Session
 {
     CMFile theFile=null;
+    ByteArrayOutputStream bout=null;
     MOB mob = null;
     Vector inputV = new Vector();
     
@@ -23,7 +40,13 @@
     public CMObject copyOf(){try{return (CMObject)this.clone();}catch(Exception e){return newInstance();}}
     public int compareTo(CMObject o){ return CMClass.classID(this).compareToIgnoreCase(CMClass.classID(o));}
     public long getTickStatus(){return 0;}
-    public void initializeSession(Socket s, String introTextStr){ theFile = new CMFile(introTextStr,null,true); }
+    public void initializeSession(Socket s, String introTextStr)
+    {
+    	if(introTextStr.equalsIgnoreCase("MEMORY"))
+    		bout=new ByteArrayOutputStream();
+    	else
+	    	theFile = new CMFile(introTextStr,null,true); 
+    }
     public boolean isLockedUpWriting(){return false;}
     public void initializeClass(){}
     public void start(){}
@@ -39,6 +62,16 @@
                 theFile.saveText(msg,true);
             }
         }
+        if(bout != null) {
+        	synchronized(bout)
+        	{
+        		try {
+	        		bout.write(msg.getBytes());
+        		} catch(Exception e) {
+        			Log.errOut("FakeSession",e);
+        		}
+        	}
+        }
     }
     public void onlyPrint(String msg){ onlyPrint(msg,false); }
     public void rawOut(String msg){ onlyPrint(msg,false); }
@@ -109,7 +142,11 @@
     
     public boolean afkFlag(){return false;}
     public void setAfkFlag(boolean truefalse){}
-    public String afkMessage(){return "";}
+    public String afkMessage(){
+    	if(bout!=null)
+    		return new String(bout.toByteArray());
+    	return "";
+    }
     public void setAFKMessage(String str){}
     
     public Vector previousCMD() { return inputV;}
Index: planet_ink/coffee_mud/Common/DefaultPlayerStats.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultPlayerStats.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultPlayerStats.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -372,7 +372,7 @@
 	    for(int t=0;t<titles.size();t++)
 	    {
 	        String s=(String)titles.elementAt(t);
-	        str.append("<TITLE"+t+">"+s+"</TITLE"+t+">");
+	        str.append("<TITLE"+t+">"+CMLib.coffeeFilter().safetyFilter(s)+"</TITLE"+t+">");
 	    }
 	    return str.toString();
 	}
Index: planet_ink/coffee_mud/Common/DefaultClan.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultClan.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultClan.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 /**
  * <p>Portions Copyright (c) 2003 Jeremy Vyska</p>
- * <p>Portions Copyright (c) 2004-2008 Bo Zimmerman</p>
+ * <p>Portions Copyright (c) 2004-2009 Bo Zimmerman</p>
  * <p>Licensed under the Apache License, Version 2.0 (the "License");
  * <p>you may not use this file except in compliance with the License.
  * <p>You may obtain a copy of the License at
Index: planet_ink/coffee_mud/Common/DefaultClimate.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultClimate.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultClimate.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -243,6 +243,11 @@
 
 	public void weatherTick(Area A)
 	{
+		if(CMSecurity.isDisabled("WEATHER"))
+		{
+			currentWeather = Climate.WEATHER_CLEAR;
+			return;
+		}
 		if((--weatherTicker)<=0)
 		{
 			// create a seasonal CHANCE graph
@@ -321,8 +326,11 @@
 
 			// remember your olde weather
 			int oldWeather=currentWeather;
-			currentWeather=nextWeather;
-			nextWeather=possibleNextWeather;
+			if(!CMSecurity.isDisabled("WEATHERCHANGES"))
+			{
+				currentWeather=nextWeather;
+				nextWeather=possibleNextWeather;
+			}
 			if(oldWeather!=currentWeather)
 			{
 				switch(CMLib.dice().rollPercentage())
@@ -363,7 +371,7 @@
 				}
 			}
 
-			if(say!=null)
+			if((say!=null)&&!CMSecurity.isDisabled("WEATHERNOTIFIES"))
 			{
 				for(Enumeration r=A.getProperMap();r.hasMoreElements();)
 				{
Index: planet_ink/coffee_mud/Common/DefaultCharState.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultCharState.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultCharState.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -201,15 +201,15 @@
 		double str=(double)charStats.getStat(CharStats.STAT_STRENGTH);
 		if(getHunger()<1)
 		{
-			con=con*.85;
-			man=man*.75;
-			str=str*.85;
+			con=con*.50;
+			man=man*.50;
+			str=str*.50;
 		}
 		if(getThirst()<1)
 		{
-			con=con*.85;
-			man=man*.75;
-			str=str*.85;
+			con=con*.50;
+			man=man*.50;
+			str=str*.50;
 		}
 		if(getFatigue()>FATIGUED_MILLIS)
 			man=man*.5;
Index: planet_ink/coffee_mud/Common/DefaultCMIntegerGrouper.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultCMIntegerGrouper.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultCMIntegerGrouper.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Common/DefaultFaction.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultFaction.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultFaction.java	(revision 2574)
@@ -21,7 +21,7 @@
 import java.lang.reflect.*;
 /**
  * Portions Copyright (c) 2003 Jeremy Vyska
- * Portions Copyright (c) 2004-2008 Bo Zimmerman
+ * Portions Copyright (c) 2004-2009 Bo Zimmerman
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
@@ -801,11 +801,12 @@
 
         CMMsg FacMsg=CMClass.getMsg(source,target,null,CMMsg.MASK_ALWAYS|CMMsg.TYP_FACTIONCHANGE,null,CMMsg.NO_EFFECT,null,CMMsg.NO_EFFECT,ID);
         FacMsg.setValue(factionAdj);
-        if(source.location()!=null)
+        Room R=source.location();
+        if(R!=null)
         {
-            if(source.location().okMessage(source,FacMsg))
+            if(R.okMessage(source,FacMsg))
             {
-                source.location().send(source, FacMsg);
+                R.send(source, FacMsg);
                 factionAdj=FacMsg.value();
                 if((factionAdj!=Integer.MAX_VALUE)&&(factionAdj!=Integer.MIN_VALUE))
                 {
@@ -816,8 +817,8 @@
                         String relID=((String)e.nextElement());
                         FacMsg=CMClass.getMsg(source,target,null,CMMsg.MASK_ALWAYS|CMMsg.TYP_FACTIONCHANGE,null,CMMsg.NO_EFFECT,null,CMMsg.NO_EFFECT,relID);
                         FacMsg.setValue((int)Math.round(CMath.mul(factionAdj, ((Double)relations.get(relID)).doubleValue())));
-                        if(source.location().okMessage(source,FacMsg))
-                            source.location().send(source, FacMsg);
+                        if(R.okMessage(source,FacMsg))
+                            R.send(source, FacMsg);
                     }
                 }
             }
Index: planet_ink/coffee_mud/Common/DefaultSession.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultSession.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultSession.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.net.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -143,8 +143,14 @@
 			{
 			    out.flush();
 			    rawout.flush();
-				try{Thread.sleep(50);}catch(Exception e){}
+				preliminaryRead(250);
+			    out.flush();
+			    rawout.flush();
+				preliminaryRead(250);
 				negotiateTelnetMode(rawout,TELNET_COMPRESS2);
+			    out.flush();
+			    rawout.flush();
+				preliminaryRead(250);
 			    ZOutputStream zOut=new ZOutputStream(rawout, JZlib.Z_DEFAULT_COMPRESSION);
 			    zOut.setFlushMode(JZlib.Z_SYNC_FLUSH);
 				out = new PrintWriter(new OutputStreamWriter(zOut,CMProps.getVar(CMProps.SYSTEM_CHARSETOUTPUT)));
@@ -232,7 +238,7 @@
             telnetSupportSet.add(new Integer(Session.TELNET_TERMTYPE));
             telnetSupportSet.add(new Integer(Session.TELNET_BINARY));
             telnetSupportSet.add(new Integer(Session.TELNET_ECHO));
-            //telnetSupportSet.add(new Integer(Session.TELNET_SUPRESS_GO_AHEAD));
+            telnetSupportSet.add(new Integer(Session.TELNET_LOGOUT));
             telnetSupportSet.add(new Integer(Session.TELNET_TERMTYPE));
             telnetSupportSet.add(new Integer(Session.TELNET_NAWS));
             //telnetSupportSet.add(new Integer(Session.TELNET_COMPRESS2));
@@ -957,6 +963,8 @@
             else
             if(!serverTelnetMode(last))
                 changeTelnetMode(last,true);
+    		if(serverTelnetCodes[TELNET_LOGOUT])
+    			killFlag = true;
 		    break;
 		}
 		case TELNET_DONT:
@@ -985,6 +993,8 @@
             else
             if(!serverTelnetMode(last))
                 changeTelnetModeBackwards(last,true);
+    		if(serverTelnetCodes[TELNET_LOGOUT])
+    			killFlag = true;
             break;
         }
         case TELNET_WONT:
@@ -1489,6 +1499,7 @@
 					    loginMsg.append(getAddress())
 					            .append(" "+terminalType)
 					            .append(((CMath.bset(mob.getBitmap(),MOB.ATT_MXP)&&clientTelnetMode(Session.TELNET_MXP)))?" MXP":"")
+					            .append((clientTelnetMode(Session.TELNET_COMPRESS)||clientTelnetMode(Session.TELNET_COMPRESS2))?" CMP":"")
                                 .append(((CMath.bset(mob.getBitmap(),MOB.ATT_ANSI)&&clientTelnetMode(Session.TELNET_ANSI)))?" ANSI":"")
                                 .append(", login: "+mob.Name());
 						Log.sysOut("Session",loginMsg.toString());
Index: planet_ink/coffee_mud/Common/DefaultMessage.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultMessage.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultMessage.java	(revision 2574)
@@ -15,7 +15,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Common/DefaultCoffeeTableRow.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultCoffeeTableRow.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultCoffeeTableRow.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Common/DefaultScriptingEngine.java
===================================================================
--- planet_ink/coffee_mud/Common/DefaultScriptingEngine.java	(revision 2354)
+++ planet_ink/coffee_mud/Common/DefaultScriptingEngine.java	(revision 2574)
@@ -22,7 +22,7 @@
 import java.util.regex.Pattern;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -547,6 +547,7 @@
                 p=parse.substring(0,y).trim();
                 if((!p.endsWith(";"))
                 &&(!p.endsWith("\n"))
+                &&(!p.endsWith("~"))
                 &&(!p.endsWith("\r"))
                 &&(p.length()>0))
                 {
@@ -681,7 +682,7 @@
     	if((imHere!=null)&&(imHere.getArea()!=null))
     		rooms=CMLib.map().findAreaRoomsLiberally(null, imHere.getArea(), thisName, "RIEPM",100);
     	if(rooms.size()==0)
-    		rooms=CMLib.map().findWorldRoomsLiberally(null,thisName, "RIEPM",100);
+    		rooms=CMLib.map().findWorldRoomsLiberally(null,thisName, "RIEPM",100,10);
         if(rooms.size()>0) return (Room)rooms.elementAt(CMLib.dice().roll(1,rooms.size(),-1));
         return room;
     }
@@ -2063,6 +2064,7 @@
                         int startEval)
     {
         String[] tt=(String[])eval[0];
+        if(tmp == null) tmp = newObjs();
         Vector stack=new Vector();
         for(int t=startEval;t<tt.length;t++)
         if(tt[t].equals("("))
@@ -3066,11 +3068,13 @@
                 Area A=null;
                 if(!where.equalsIgnoreCase("world"))
                 {
-                    Environmental E2=getArgumentItem(where,source,monster,scripted,target,primaryItem,secondaryItem,msg,tmp);
-                    if(E2 instanceof Area)
-                        A=(Area)E2;
-                    else
-                        A=CMLib.map().getArea(where);
+                	A=CMLib.map().getArea(where);
+                	if(A==null)
+                	{
+	                    Environmental E2=getArgumentItem(where,source,monster,scripted,target,primaryItem,secondaryItem,msg,tmp);
+	                    if(E2 != null)
+	                    	A=CMLib.map().areaLocation(E2);
+                	}
                     if(A==null)
                     {
                         logError(scripted,"EXPLORED","Unknown Area",where);
@@ -5161,11 +5165,13 @@
                     Area A=null;
                     if(!where.equalsIgnoreCase("world"))
                     {
-                        Environmental E2=getArgumentItem(where,source,monster,scripted,target,primaryItem,secondaryItem,msg,tmp);
-                        if(E2 instanceof Area)
-                            A=(Area)E2;
-                        else
-                            A=CMLib.map().getArea(where);
+                    	A=CMLib.map().getArea(where);
+                    	if(A==null)
+                    	{
+	                        Environmental E2=getArgumentItem(where,source,monster,scripted,target,primaryItem,secondaryItem,msg,tmp);
+	                        if(E2!=null)
+	                            A=CMLib.map().areaLocation(E2);
+                    	}
                     }
                     if((lastKnownLocation!=null)
                     &&((A!=null)||(where.equalsIgnoreCase("world"))))
@@ -5853,7 +5859,7 @@
                     {
                         JScriptEvent scope = new JScriptEvent(this,scripted,source,target,monster,primaryItem,secondaryItem,msg);
                         cx.initStandardObjects(scope);
-                        String[] names = { "host", "source", "target", "monster", "item", "item2", "message" ,"getVar", "setVar", "toJavaString","setPlayerSetOverride"};
+                        String[] names = { "host", "source", "target", "monster", "item", "item2", "message" ,"getVar", "setVar", "toJavaString"};
                         scope.defineFunctionProperties(names, JScriptEvent.class,
                                                        ScriptableObject.DONTENUM);
                         cx.evaluateString(scope, jscript.toString(),"<cmd>", 1, null);
@@ -8813,7 +8819,7 @@
                     String check=standardTriggerCheck(script,t,msg.target());
                     if(check!=null)
                     {
-                        enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),defaultItem,script,1,check);
+                        enqueResponse(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),defaultItem,script,1,check);
                         return;
                     }
                 }
@@ -8888,7 +8894,7 @@
                     String check=standardTriggerCheck(script,t,msg.target());
                     if(check!=null)
                     {
-                        enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),defaultItem,script,1,check);
+                        enqueResponse(affecting,msg.source(),msg.target(),monster,defaultItem,defaultItem,script,1,check);
                         return;
                     }
                 }
@@ -8905,7 +8911,7 @@
                     {
                         if(lastMsg==msg) break;
                         lastMsg=msg;
-                        enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),defaultItem,script,1,check);
+                        enqueResponse(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),defaultItem,script,1,check);
                         return;
                     }
                 }
@@ -8923,9 +8929,9 @@
                         if(lastMsg==msg) break;
                         lastMsg=msg;
                         if(msg.target() instanceof Coins)
-                            execute(affecting,msg.source(),monster,monster,(Item)msg.target(),(Item)((Item)msg.target()).copyOf(),script,check,newObjs());
+                            execute(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),(Item)((Item)msg.target()).copyOf(),script,check,newObjs());
                         else
-                            enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),defaultItem,script,1,check);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),defaultItem,script,1,check);
                         return;
                     }
                 }
@@ -8940,7 +8946,7 @@
                     String check=standardTriggerCheck(script,t,msg.target());
                     if(check!=null)
                     {
-                        enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),defaultItem,script,1,check);
+                        enqueResponse(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),defaultItem,script,1,check);
                         return;
                     }
                 }
@@ -8979,7 +8985,11 @@
                     String check=standardTriggerCheck(script,t,msg.target());
                     if(check!=null)
                     {
-                        enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),defaultItem,script,1,check);
+                    	if((msg.target() == affecting)
+                    	&&(affecting instanceof Food))
+                            execute(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),(Item)((Item)msg.target()).copyOf(),script,check,newObjs());
+                    	else
+	                        enqueResponse(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),defaultItem,script,1,check);
                         return;
                     }
                 }
@@ -8998,9 +9008,9 @@
                         if(lastMsg==msg) break;
                         lastMsg=msg;
                         if((msg.tool() instanceof Coins)&&(((Item)msg.target()).owner() instanceof Room))
-                            execute(affecting,msg.source(),monster,monster,(Item)msg.target(),(Item)((Item)msg.target()).copyOf(),script,check,newObjs());
+                            execute(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),(Item)((Item)msg.target()).copyOf(),script,check,newObjs());
                         else
-                            enqueResponse(affecting,msg.source(),monster,monster,(Item)msg.target(),(Item)msg.tool(),script,1,check);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,(Item)msg.target(),(Item)msg.tool(),script,1,check);
                         return;
                     }
                 }
@@ -9289,9 +9299,9 @@
                             enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,str);
                         else
                         if(msg.target() instanceof Item)
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,(Item)msg.target(),script,1,str);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,(Item)msg.target(),script,1,str);
                         else
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,defaultItem,script,1,str);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,str);
                         return;
                     }
                 }
@@ -9309,9 +9319,9 @@
                             enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,msg.tool().Name());
                         else
                         if(msg.target() instanceof Item)
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,(Item)msg.target(),script,1,msg.tool().Name());
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,(Item)msg.target(),script,1,msg.tool().Name());
                         else
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,defaultItem,script,1,msg.tool().Name());
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,msg.tool().Name());
                         return;
                     }
                 }
@@ -9376,9 +9386,9 @@
                             enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,str);
                         else
                         if(msg.target() instanceof Item)
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,(Item)msg.target(),script,1,str);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,(Item)msg.target(),script,1,str);
                         else
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,defaultItem,script,1,str);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,str);
                         return;
                     }
                 }
@@ -9417,9 +9427,9 @@
                             enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,str);
                         else
                         if(msg.target() instanceof Item)
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,(Item)msg.target(),script,1,str);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,(Item)msg.target(),script,1,str);
                         else
-                            enqueResponse(affecting,msg.source(),null,monster,Tool,defaultItem,script,1,str);
+                            enqueResponse(affecting,msg.source(),msg.target(),monster,Tool,defaultItem,script,1,str);
                         return;
                     }
                 }
@@ -9444,8 +9454,8 @@
         if(I==null) return 0;
         return I.intValue();
     }
-
-    protected MOB getMakeMOB(Tickable ticking)
+    
+    public MOB getMakeMOB(Tickable ticking)
     {
         MOB mob=null;
         if(ticking instanceof MOB)
@@ -9460,13 +9470,15 @@
             Room R=CMLib.map().roomLocation((Environmental)ticking);
             if(R!=null) lastKnownLocation=R;
 
-            if((backupMOB==null)||(backupMOB.amDestroyed())||(backupMOB.amDead()))
+            if((backupMOB==null)
+            ||(backupMOB.amDestroyed())
+            ||(backupMOB.amDead()))
             {
                 backupMOB=CMClass.getMOB("StdMOB");
                 if(backupMOB!=null)
                 {
-                    backupMOB.setName(ticking.name());
-                    backupMOB.setDisplayText(ticking.name()+" is here.");
+    	            backupMOB.setName(ticking.name());
+    	            backupMOB.setDisplayText(ticking.name()+" is here.");
                     backupMOB.setDescription("");
                     backupMOB.setAgeHours(-1);
                     mob=backupMOB;
@@ -9479,7 +9491,11 @@
                 backupMOB.setAgeHours(-1);
                 mob=backupMOB;
                 if(backupMOB.location()!=lastKnownLocation)
+                {
                     backupMOB.setLocation(lastKnownLocation);
+    	            backupMOB.setName(ticking.name());
+    	            backupMOB.setDisplayText(ticking.name()+" is here.");
+                }
             }
         }
         return mob;
Index: planet_ink/coffee_mud/CharClasses/Wizard.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Wizard.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Wizard.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Healer.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Healer.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Healer.java	(revision 2574)
@@ -16,7 +16,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -264,32 +264,13 @@
 		MOB myChar=(MOB)myHost;
 		if(msg.amISource(myChar)
 		&&(!myChar.isMonster())
-		&&(msg.sourceMinor()==CMMsg.TYP_CAST_SPELL)
+		&&(msg.sourceMinor()==CMMsg.TYP_HEALING)
 		&&(msg.tool() instanceof Ability)
 		&&(CMLib.ableMapper().getQualifyingLevel(ID(),true,msg.tool().ID())>0)
 		&&(myChar.isMine(msg.tool()))
-		&&((((Ability)msg.tool()).classificationCode()&Ability.ALL_ACODES)==Ability.ACODE_PRAYER))
-		{
-			if((msg.target()!=null)
-			   &&(msg.target() instanceof MOB))
-			{
-				MOB tmob=(MOB)msg.target();
-				if(msg.tool().ID().equals("Prayer_CureLight"))
-					tmob.curState().adjHitPoints(CMLib.dice().roll(2,6,4),tmob.maxState());
-				else
-				if(msg.tool().ID().equals("Prayer_CureSerious"))
-					tmob.curState().adjHitPoints(CMLib.dice().roll(2,16,4),tmob.maxState());
-				else
-				if(msg.tool().ID().equals("Prayer_CureCritical"))
-					tmob.curState().adjHitPoints(CMLib.dice().roll(4,16,4),tmob.maxState());
-				else
-				if(msg.tool().ID().equals("Prayer_Heal"))
-					tmob.curState().adjHitPoints(CMLib.dice().roll(5,20,4),tmob.maxState());
-				else
-				if(msg.tool().ID().equals("Prayer_MassHeal"))
-					tmob.curState().adjHitPoints(CMLib.dice().roll(5,20,4),tmob.maxState());
-			}
-		}
+		&&((((Ability)msg.tool()).classificationCode()&Ability.ALL_ACODES)==Ability.ACODE_PRAYER)
+		&&(msg.value()>0))
+			msg.setValue((int)Math.round(CMath.mul(msg.value(),1.5)));
 	}
 
 	public Vector outfit(MOB myChar)
Index: planet_ink/coffee_mud/CharClasses/Cleric.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Cleric.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Cleric.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,17 +37,16 @@
 	public String ID(){return "Cleric";}
 	public String name(){return "Cleric";}
 	public String baseClass(){return ID();}
-	public int getMaxHitPointsLevel(){return 16;}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_WISDOM;}
-	public int getLevelsPerBonusDamage(){ return 5;}
+	public int getLevelsPerBonusDamage(){ return 30;}
 	public int getHPDivisor(){return 3;}
 	public int getHPDice(){return 1;}
 	public int getHPDie(){return 10;}
 	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 8;}
+	public int getManaDie(){return 4;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_ANY;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_ALLCLERIC;}
 	private HashSet disallowedWeaponsG=buildDisallowedWeaponClasses(CharClass.WEAPONS_GOODCLERIC);
Index: planet_ink/coffee_mud/CharClasses/interfaces/CharClass.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/interfaces/CharClass.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/interfaces/CharClass.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -468,6 +468,24 @@
 	 */
 	public boolean expless();
 
+	/**
+	 * A code designating what kind of armor can be used by this class
+	 * without affecting their skills.  The worn locations this coded
+	 * type refers to locations defined by ARMOR_WEARMASK
+	 * @see com.planet_ink.coffee_mud.CharClasses.interfaces.CharClass#ARMOR_WEARMASK
+	 * @see com.planet_ink.coffee_mud.CharClasses.interfaces.CharClass#ARMOR_ANY
+	 * @return the encoded allowed armor type
+	 */
+	public int allowedArmorLevel();
+	
+	/**
+	 * A code designating what kind of weapons can be used by this class
+	 * without fumbling their usage.
+	 * @see com.planet_ink.coffee_mud.CharClasses.interfaces.CharClass#WEAPONS_ANY
+	 * @return the encoded allowed weapon type
+	 */
+	public int allowedWeaponLevel();
+	
 	/** constant returned by allowedArmorLevel() to designate any allowed armors. @see com.planet_ink.coffee_mud.CharClass.StdCharClass#allowedArmorLevel() */
 	public static final int ARMOR_ANY=0;
 	/** constant returned by allowedArmorLevel() to designate only cloth armors. @see com.planet_ink.coffee_mud.CharClass.StdCharClass#allowedArmorLevel() */
Index: planet_ink/coffee_mud/CharClasses/Arcanist.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Arcanist.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Arcanist.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -36,9 +36,9 @@
 	public String ID(){return "Arcanist";}
 	public String name(){return "Arcanist";}
 	public int availabilityCode(){return Area.THEME_FANTASY;}
-	public int getManaDivisor(){return 3;}
+	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 4;}
 
 	public Arcanist()
 	{
Index: planet_ink/coffee_mud/CharClasses/Templar.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Templar.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Templar.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Enchanter.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Enchanter.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Enchanter.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,6 +39,8 @@
     public void initializeClass()
     {
         super.initializeClass();
+		CMLib.ableMapper().delCharAbilityMapping(ID(),"Spell_ResistMagicMissiles");
+		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),8,"Skill_Spellcraft",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),5,"Spell_Fatigue",25,true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),7,"Spell_ManaBurn",25,true);
Index: planet_ink/coffee_mud/CharClasses/Shaman.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Shaman.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Shaman.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Paladin.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Paladin.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Paladin.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,20 +37,19 @@
 	public String ID(){return "Paladin";}
 	public String name(){return "Paladin";}
 	public String baseClass(){return "Fighter";}
-	public int getMaxHitPointsLevel(){return 22;}
 	public int getBonusPracLevel(){return 0;}
-	public int getBonusAttackLevel(){return 2;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getMovementMultiplier(){return 12;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
-	public int getLevelsPerBonusDamage(){ return 1;}
+	public int getLevelsPerBonusDamage(){ return 30;}
 	public int getPracsFirstLevel(){return 3;}
 	public int getTrainsFirstLevel(){return 4;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 8;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 3;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_ANY;}
 
 	public Paladin()
Index: planet_ink/coffee_mud/CharClasses/Gaoler.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Gaoler.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Gaoler.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,17 +37,16 @@
 	public String ID(){return "Gaoler";}
 	public String name(){return "Gaoler";}
 	public String baseClass(){return "Commoner";}
-	public int getMaxHitPointsLevel(){return 8;}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 0;}
+	public int getBonusAttackLevel(){return -1;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
-	public int getLevelsPerBonusDamage(){ return 15;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 6;}
 	public int getHPDice(){return 1;}
 	public int getHPDie(){return 5;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 10;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 2;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_CLOTH;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_FLAILONLY;}
 	private HashSet disallowedWeapons=buildDisallowedWeaponClasses();
Index: planet_ink/coffee_mud/CharClasses/Mage.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Mage.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Mage.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,7 +37,6 @@
 	public String ID(){return "Mage";}
 	public String name(){return "Mage";}
 	public String baseClass(){return ID();}
-	public int getMaxHitPointsLevel(){return 8;}
 	public int getBonusPracLevel(){return 4;}
 	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_INTELLIGENCE;}
@@ -48,9 +47,9 @@
 	public int getHPDivisor(){return 6;}
 	public int getHPDice(){return 1;}
 	public int getHPDie(){return 5;}
-	public int getManaDivisor(){return 2;}
+	public int getManaDivisor(){return 3;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 4;}
 	protected String armorFailMessage(){return "<S-NAME> watch(es) <S-HIS-HER> armor absorb <S-HIS-HER> magical energy!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_CLOTH;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_MAGELIKE;}
Index: planet_ink/coffee_mud/CharClasses/Beastmaster.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Beastmaster.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Beastmaster.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,15 +39,15 @@
 	public String name(){return "Beastmaster";}
 	public String baseClass(){return "Druid";}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CONSTITUTION;}
-	public int getLevelsPerBonusDamage(){ return 6;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
 	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 8;}
+	public int getManaDie(){return 4;}
 	protected String armorFailMessage(){return "<S-NAME> watch(es) <S-HIS-HER> armor absorb <S-HIS-HER> magical energy!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_NATURAL;}
Index: planet_ink/coffee_mud/CharClasses/Trapper.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Trapper.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Trapper.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -115,6 +115,7 @@
 		CMLib.ableMapper().addCharAbilityMapping(ID(),21,"Domesticating",false);
 
 		CMLib.ableMapper().addCharAbilityMapping(ID(),22,"Thief_Snipe",false);
+		CMLib.ableMapper().addCharAbilityMapping(ID(),22,"Skill_AttackHalf",false);
 
 		CMLib.ableMapper().addCharAbilityMapping(ID(),23,"AnimalTrading",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),22,"Thief_Shadow",true);
Index: planet_ink/coffee_mud/CharClasses/StdCharClass.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/StdCharClass.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/StdCharClass.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -43,7 +43,7 @@
 	public String baseClass(){return ID();}
     public int getLevelCap() {return -1;}
 	public int getBonusPracLevel(){return 0;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
 	public int getPracsFirstLevel(){return 5;}
 	public int getTrainsFirstLevel(){return 3;}
@@ -260,7 +260,6 @@
 		return false;
 	}
 
-
 	protected boolean armorCheck(MOB mob, int sourceCode, Environmental E)
 	{
 		if(!(E instanceof Ability)) return true;
@@ -276,6 +275,7 @@
 			return false;
 		return true;
 	}
+	
 	protected boolean weaponCheck(MOB mob, int sourceCode, Environmental E)
 	{
 		if((((sourceCode&CMMsg.MINOR_MASK)==CMMsg.TYP_WEAPONATTACK)||((sourceCode&CMMsg.MINOR_MASK)==CMMsg.TYP_THROW))
@@ -720,23 +720,23 @@
 
 	public int getLevelAttack(MOB mob)
 	{
-		int attGain=(int)Math.round(CMath.div(mob.charStats().getStat(getAttackAttribute()),6.0))+getBonusAttackLevel();
+		int attGain=(int)Math.round(CMath.div(mob.charStats().getStat(getAttackAttribute()),10.0))+getBonusAttackLevel();
 		return ((mob.baseEnvStats().level()-1)*attGain);
 	}
 
 	public int getLevelArmor(MOB mob)
 	{
-		return 100-(mob.baseEnvStats().level()*(4+getBonusAttackLevel()));
+		return 100-(int)Math.round(CMath.mul(mob.baseEnvStats().level(),3.0));
 	}
 
 	public int getLevelDamage(MOB mob)
 	{
-		return 2+(mob.baseEnvStats().level());
+		return (mob.baseEnvStats().level());
 	}
 
 	public double getLevelSpeed(MOB mob)
 	{
-		return 1.0+Math.floor(CMath.div(mob.baseEnvStats().level(),25.0));
+		return 1.0+Math.floor(CMath.div(mob.baseEnvStats().level(),30.0));
 	}
 
 	public int getLevelMove(MOB mob)
@@ -752,7 +752,10 @@
     public int getLevelPlayerHP(MOB mob)
     {
         int hp=CMProps.getIntVar(CMProps.SYSTEMI_STARTHP);
-        int newHitPointGain=(int)Math.floor(CMath.div(10,this.getHPDivisor())+(this.getHPDice()*this.getHPDie()/2));
+        int con=10;
+        if(mob.baseCharStats().getStat(CharStats.STAT_CONSTITUTION)>10)
+        	con=mob.baseCharStats().getStat(CharStats.STAT_CONSTITUTION);
+        int newHitPointGain=(int)Math.floor(CMath.div(con,this.getHPDivisor())+(this.getHPDice()*this.getHPDie()/2));
         return hp+((mob.envStats().level()-1)*newHitPointGain);
     }
 
Index: planet_ink/coffee_mud/CharClasses/Barbarian.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Barbarian.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Barbarian.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -38,18 +38,18 @@
 	public String name(){return "Barbarian";}
 	public String baseClass(){return "Fighter";}
 	public int getBonusPracLevel(){return -1;}
-	public int getBonusAttackLevel(){return 2;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
-	public int getLevelsPerBonusDamage(){ return 1;}
+	public int getLevelsPerBonusDamage(){ return 30;}
 	public int getPracsFirstLevel(){return 3;}
 	public int getTrainsFirstLevel(){return 4;}
 	public int getMovementMultiplier(){return 13;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 8;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 2;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 
 	public Barbarian()
Index: planet_ink/coffee_mud/CharClasses/Delver.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Delver.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Delver.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,15 +39,15 @@
 	public String name(){return "Delver";}
 	public String baseClass(){return "Druid";}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CONSTITUTION;}
-	public int getLevelsPerBonusDamage(){ return 6;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
 	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 4;}
 	protected String armorFailMessage(){return "<S-NAME> watch(es) <S-HIS-HER> armor absorb <S-HIS-HER> magical energy!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_OREONLY;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_ROCKY;}
Index: planet_ink/coffee_mud/CharClasses/PlayerClass.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/PlayerClass.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/PlayerClass.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/SkyWatcher.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/SkyWatcher.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/SkyWatcher.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -38,15 +38,15 @@
 	public String name(){return "SkyWatcher";}
 	public String baseClass(){return "Druid";}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CONSTITUTION;}
-	public int getLevelsPerBonusDamage(){ return 6;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
 	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 8;}
+	public int getManaDie(){return 4;}
 	protected String armorFailMessage(){return "<S-NAME> watch(es) <S-HIS-HER> armor absorb <S-HIS-HER> magical energy!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_NATURAL;}
Index: planet_ink/coffee_mud/CharClasses/Purist.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Purist.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Purist.java	(revision 2574)
@@ -9,6 +9,7 @@
 import com.planet_ink.coffee_mud.Common.interfaces.*;
 import com.planet_ink.coffee_mud.Exits.interfaces.*;
 import com.planet_ink.coffee_mud.Items.interfaces.*;
+import com.planet_ink.coffee_mud.Libraries.Factions;
 import com.planet_ink.coffee_mud.Locales.interfaces.*;
 import com.planet_ink.coffee_mud.MOBS.interfaces.*;
 import com.planet_ink.coffee_mud.Races.interfaces.*;
@@ -17,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -172,7 +173,7 @@
 	}
 
 	public String otherBonuses(){return "Receives 1pt/level cold damage reduction.";}
-	public String otherLimitations(){return "Always fumbles evil prayers, and fumbles all prayers when alignment is below 500.  Qualifies and receives good prayers.  Using non-aligned prayers introduces failure chance.  Vulnerable to fire attacks.";}
+	public String otherLimitations(){return "Always fumbles evil prayers, and fumbles all prayers when alignment is below pure neutral.  Qualifies and receives good prayers, and bonus damage from good spells.  Using non-aligned prayers introduces failure chance.  Vulnerable to fire attacks.";}
 
 	public boolean okMessage(Environmental myHost, CMMsg msg)
 	{
@@ -181,6 +182,29 @@
 		if(!super.okMessage(myChar, msg))
 			return false;
 
+		if(msg.amISource(myChar)
+		&&(!myChar.isMonster())
+		&&(msg.sourceMinor()==CMMsg.TYP_CAST_SPELL)
+		&&(msg.tool() instanceof Ability)
+		&&((((Ability)msg.tool()).classificationCode()&Ability.ALL_ACODES)==Ability.ACODE_PRAYER)
+		&&(myChar.isMine(msg.tool()))
+		&&(isQualifyingAuthority(myChar,(Ability)msg.tool())))
+		{
+			int alignment = myChar.fetchFaction(CMLib.factions().AlignID());
+			int pct = CMLib.factions().getPercent(CMLib.factions().AlignID(), alignment);
+			if(pct < 50)
+			{
+				myChar.tell("Your impurity disrupts the prayer.");
+				return false;
+			}
+			int hq=holyQuality((Ability)msg.tool());
+			if(hq==0)
+			{
+				myChar.tell("You most certainly should not be casting that.");
+				return false;
+			}
+		}
+		
 		if((msg.amITarget(myChar))
 		&&(msg.targetMinor()==CMMsg.TYP_DAMAGE)
 		&&((msg.sourceMinor()==CMMsg.TYP_COLD)
@@ -197,6 +221,16 @@
 			int recovery=msg.value();
 			msg.setValue(msg.value()+recovery);
 		}
+		else
+		if(msg.amISource(myChar)
+		&&(!msg.amITarget(myChar))
+		&&(msg.tool() instanceof Ability)
+		&&(msg.targetMinor()==CMMsg.TYP_DAMAGE)
+		&&((((Ability)msg.tool()).classificationCode()&Ability.ALL_ACODES)==Ability.ACODE_PRAYER)
+		&&(myChar.isMine(msg.tool()))
+		&&(isQualifyingAuthority(myChar,(Ability)msg.tool()))
+		&&(holyQuality((Ability)msg.tool())==1000))
+			msg.setValue(msg.value()*2);
 		return true;
 	}
 
Index: planet_ink/coffee_mud/CharClasses/Prancer.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Prancer.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Prancer.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,18 +37,17 @@
 	public String ID(){return "Prancer";}
 	public String name(){return "Dancer";}
 	public String baseClass(){return "Bard";}
-	public int getMaxHitPointsLevel(){return 18;}
 	public int getMovementMultiplier(){return 18;}
 	public int getBonusPracLevel(){return 1;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CHARISMA;}
 	public int getLevelsPerBonusDamage(){ return 4;}
 	public int getHPDivisor(){return 3;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 6;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 2;}
 	protected String armorFailMessage(){return "<S-NAME> armor makes <S-HIM-HER> mess up <S-HIS-HER> <SKILL>!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_CLOTH;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_THIEFLIKE;}
@@ -235,19 +234,21 @@
 		if(mob.envStats().level()<2)
 			return;
 		super.unLevel(mob);
+	    if(((mob.baseEnvStats().level()+1) % 3)==0)
+	    {
+			int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
+			int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
+						 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
+			if(dexStat>maxDexStat) dexStat=maxDexStat;
+			int attArmor=(int)Math.round(CMath.div(dexStat,10.0));
+			if(dexStat>=25)attArmor+=2;
+			else
+			if(dexStat>=22)attArmor+=1;
+			attArmor=attArmor*-1;
+			mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
+			mob.envStats().setArmor(mob.envStats().armor()-attArmor);
+	    }
 
-		int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
-		int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
-					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
-		if(dexStat>maxDexStat) dexStat=maxDexStat;
-		int attArmor=(int)Math.round(CMath.div(dexStat,9.0));
-		if(dexStat>=25)attArmor+=2;
-		else
-		if(dexStat>=22)attArmor+=1;
-		attArmor=attArmor*-1;
-		mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
-		mob.envStats().setArmor(mob.envStats().armor()-attArmor);
-
 		mob.recoverEnvStats();
 		mob.recoverCharStats();
 		mob.recoverMaxState();
@@ -255,24 +256,26 @@
 
     public int adjustExperienceGain(MOB host, MOB mob, MOB victim, int amount){ return Bard.bardAdjustExperienceGain(host,mob,victim,amount,5.0);}
     
-	public String otherBonuses(){return "Receives (Dexterity/9)+1 bonus to defence every level.  Receives group bonus combat experience when in an intelligent group, and more for a group of players.  Receives exploration experience based on danger level.";}
+	public String otherBonuses(){return "Receives defensive bonus for high dexterity.  Receives group bonus combat experience when in an intelligent group, and more for a group of players.  Receives exploration experience based on danger level.";}
 
 	public void level(MOB mob, Vector newAbilityIDs)
 	{
 	    if(CMSecurity.isDisabled("LEVELS"))  return;
-		int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
-		int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
-					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
-		if(dexStat>maxDexStat) dexStat=maxDexStat;
-		
-		int attArmor=((int)Math.round(CMath.div(dexStat,9.0)))+1;
-		if(dexStat>=25)attArmor+=2;
-		else
-		if(dexStat>=22)attArmor+=1;
-		
-		mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
-		mob.envStats().setArmor(mob.envStats().armor()-attArmor);
-		mob.tell("^NYour grace grants you a defensive bonus of ^H"+attArmor+"^?.^N");
+	    if((mob.baseEnvStats().level() % 3)==0)
+	    {
+			int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
+			int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
+						 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
+			if(dexStat>maxDexStat) dexStat=maxDexStat;
+			int attArmor=((int)Math.round(CMath.div(dexStat,10.0)))+1;
+			if(dexStat>=25)attArmor+=2;
+			else
+			if(dexStat>=22)attArmor+=1;
+			
+			mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
+			mob.envStats().setArmor(mob.envStats().armor()-attArmor);
+			mob.tell("^NYour grace grants you a defensive bonus of ^H"+attArmor+"^?.^N");
+	    }
 	}
 }
 
Index: planet_ink/coffee_mud/CharClasses/Apprentice.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Apprentice.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Apprentice.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,19 +37,18 @@
 	public String ID(){return "Apprentice";}
 	public String name(){return "Apprentice";}
 	public String baseClass(){return "Commoner";}
-	public int getMaxHitPointsLevel(){return 5;}
 	public int getBonusPracLevel(){return 5;}
 	public int getBonusAttackLevel(){return -1;}
 	public int getAttackAttribute(){return CharStats.STAT_WISDOM;}
-	public int getLevelsPerBonusDamage(){ return 25;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getTrainsFirstLevel(){return 6;}
 	public int getHPDivisor(){return 9;}
 	public int getHPDice(){return 1;}
 	public int getHPDie(){return 4;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 10;}
     public int getLevelCap(){ return 5;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 2;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_CLOTH;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_DAGGERONLY;}
 	private HashSet disallowedWeapons=buildDisallowedWeaponClasses();
Index: planet_ink/coffee_mud/CharClasses/Evoker.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Evoker.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Evoker.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Jester.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Jester.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Jester.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,18 +37,17 @@
 	public String ID(){return "Jester";}
 	public String name(){return "Jester";}
 	public String baseClass(){return "Bard";}
-	public int getMaxHitPointsLevel(){return 18;}
 	public int getBonusPracLevel(){return 1;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getMovementMultiplier(){return 16;}
 	public int getAttackAttribute(){return CharStats.STAT_CHARISMA;}
-	public int getLevelsPerBonusDamage(){ return 4;}
+	public int getLevelsPerBonusDamage(){ return 1;}
 	public int getHPDivisor(){return 3;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 6;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 3;}
 	protected String armorFailMessage(){return "<S-NAME> armor makes <S-HIM-HER> mess up <S-HIS-HER> <SKILL>!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_THIEFLIKE;}
@@ -215,7 +214,7 @@
 
     public int adjustExperienceGain(MOB host, MOB mob, MOB victim, int amount){ return Bard.bardAdjustExperienceGain(host, mob,victim,amount,6.0);}
 	public String otherLimitations(){return "";}
-	public String otherBonuses(){return "Receives 2%/level bonus to saves versus poison.  Receives group bonus combat experience when in an intelligent group, and more for a group of players.  Receives exploration experience based on danger level.";}
+	public String otherBonuses(){return "Receives 2%/level bonus to saves versus poison.  Receives extra natural damaging skill. Receives group bonus combat experience when in an intelligent group, and more for a group of players.  Receives exploration experience based on danger level.";}
 	public Vector outfit(MOB myChar)
 	{
 		if(outfitChoices==null)
Index: planet_ink/coffee_mud/CharClasses/GenCharClass.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/GenCharClass.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/GenCharClass.java	(revision 2574)
@@ -19,7 +19,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -42,16 +42,16 @@
 	protected int hpDivisor=3;
 	protected int hpDice=1;
 	protected int hpDie=6;
-	protected int manaDivisor=3;
+	protected int manaDivisor=6;
 	protected int manaDice=1;
-	protected int manaDie=6;
+	protected int manaDie=3;
     protected int levelCap=-1;
 	protected int bonusPracLevel=0;
-	protected int bonusAttackLevel=1;
+	protected int bonusAttackLevel=0;
 	protected int attackAttribute=CharStats.STAT_STRENGTH;
 	protected int pracsFirstLevel=5;
 	protected int trainsFirstLevel=3;
-	protected int levelsPerBonusDamage=1;
+	protected int levelsPerBonusDamage=10;
 	protected int movementMultiplier=5;
 	protected int allowedArmorLevel=CharClass.ARMOR_ANY;
 	protected String otherLimitations="";
Index: planet_ink/coffee_mud/CharClasses/Minstrel.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Minstrel.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Minstrel.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,17 +37,16 @@
 	public String ID(){return "Minstrel";}
 	public String name(){return "Minstrel";}
 	public String baseClass(){return "Bard";}
-	public int getMaxHitPointsLevel(){return 18;}
 	public int getBonusPracLevel(){return 1;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CHARISMA;}
 	public int getLevelsPerBonusDamage(){ return 4;}
 	public int getHPDivisor(){return 3;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 6;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 2;}
 	protected String armorFailMessage(){return "<S-NAME> armor makes <S-HIM-HER> mess up <S-HIS-HER> <SKILL>!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_THIEFLIKE;}
Index: planet_ink/coffee_mud/CharClasses/Charlatan.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Charlatan.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Charlatan.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,9 +37,8 @@
 	public String ID(){return "Charlatan";}
 	public String name(){return "Charlatan";}
 	public String baseClass(){return "Bard";}
-	public int getMaxHitPointsLevel(){return 18;}
 	public int getBonusPracLevel(){return 1;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_DEXTERITY;}
 	public int getLevelsPerBonusDamage(){ return 4;}
 	public int getHPDivisor(){return 3;}
Index: planet_ink/coffee_mud/CharClasses/Missionary.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Missionary.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Missionary.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Burglar.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Burglar.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Burglar.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -74,7 +74,6 @@
 		CMLib.ableMapper().addCharAbilityMapping(ID(),5,"Skill_WandUse",false);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),6,"Thief_Pick",false);
-		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),6,"Skill_Dodge",false);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),7,"Thief_Peek",true);
@@ -116,6 +115,7 @@
 		CMLib.ableMapper().addCharAbilityMapping(ID(),19,"Thief_Mug",false);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),20,"Thief_Lore",false);
+		CMLib.ableMapper().addCharAbilityMapping(ID(),20,"Skill_AttackHalf",false);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),21,"Thief_Racketeer",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),21,"Thief_StripItem",true);
Index: planet_ink/coffee_mud/CharClasses/Thief.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Thief.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Thief.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,18 +37,17 @@
 	public String ID(){return "Thief";}
 	public String name(){return "Thief";}
 	public String baseClass(){return "Thief";}
-	public int getMaxHitPointsLevel(){return 16;}
 	public int getBonusPracLevel(){return 1;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_DEXTERITY;}
 	public int getLevelsPerBonusDamage(){ return 5;}
 	public int getMovementMultiplier(){return 10;}
 	public int getHPDivisor(){return 3;}
 	public int getHPDice(){return 1;}
 	public int getHPDie(){return 10;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 6;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 3;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_LEATHER;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_THIEFLIKE;}
 	private HashSet disallowedWeapons=buildDisallowedWeaponClasses();
@@ -137,6 +136,7 @@
 
 		CMLib.ableMapper().addCharAbilityMapping(ID(),20,"Thief_Lore",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),20,"Thief_Alertness",false);
+		CMLib.ableMapper().addCharAbilityMapping(ID(),20,"Skill_AttackHalf",false);
 
 		CMLib.ableMapper().addCharAbilityMapping(ID(),21,"Thief_Sap",true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),21,"Thief_Panhandling",true);
@@ -227,51 +227,5 @@
 		super.executeMsg(myHost,msg);
 	}
 
-	public void unLevel(MOB mob)
-	{
-		if(mob.envStats().level()<2)
-			return;
-		super.unLevel(mob);
-
-		int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
-		int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
-					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
-		if(dexStat>maxDexStat) dexStat=maxDexStat;
-		int attArmor=(int)Math.round(CMath.div(dexStat,9.0));
-		if(dexStat>=25)attArmor+=2;
-		else
-		if(dexStat>=22)attArmor+=1;
-		attArmor=attArmor*-1;
-		mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
-		mob.envStats().setArmor(mob.envStats().armor()-attArmor);
-
-		mob.recoverEnvStats();
-		mob.recoverCharStats();
-		mob.recoverMaxState();
-	}
-
-	public String otherBonuses(){return "Receives (Dexterity/9)+1 bonus to defence every level after 1st.  Bonus experience for using certain skills.";}
-	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
-	{
-		super.affectEnvStats(affected,affectableStats);
-		if(CMLib.flags().isSleeping(affected)||CMLib.flags().isSitting(affected))
-			affectableStats.setArmor(affectableStats.armor()+(100-affected.baseEnvStats().armor()));
-	}
-	public void level(MOB mob, Vector newAbilityIDs)
-	{
-	    if(CMSecurity.isDisabled("LEVELS")) return;
-		int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
-		int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
-					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
-		if(dexStat>maxDexStat) dexStat=maxDexStat;
-		
-		int attArmor=((int)Math.round(CMath.div(dexStat,9.0)));
-		if(dexStat>=25)attArmor+=2;
-		else
-		if(dexStat>=22)attArmor+=1;
-		
-		mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
-		mob.envStats().setArmor(mob.envStats().armor()-attArmor);
-		mob.tell("^NYour stealthiness grants you a defensive bonus of ^H"+attArmor+"^?.^N");
-	}
+	public String otherBonuses(){return "Bonus experience for using certain skills.";}
 }
Index: planet_ink/coffee_mud/CharClasses/Diviner.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Diviner.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Diviner.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Artisan.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Artisan.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Artisan.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,17 +37,16 @@
 	public String ID(){return "Artisan";}
 	public String name(){return "Artisan";}
 	public String baseClass(){return "Commoner";}
-	public int getMaxHitPointsLevel(){return 8;}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 0;}
+	public int getBonusAttackLevel(){return -1;}
 	public int getAttackAttribute(){return CharStats.STAT_WISDOM;}
-	public int getLevelsPerBonusDamage(){ return 15;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 6;}
 	public int getHPDice(){return 1;}
 	public int getHPDie(){return 5;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 10;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 2;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_CLOTH;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_DAGGERONLY;}
 	private HashSet disallowedWeapons=buildDisallowedWeaponClasses();
Index: planet_ink/coffee_mud/CharClasses/Transmuter.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Transmuter.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Transmuter.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,6 +39,8 @@
     public void initializeClass()
     {
         super.initializeClass();
+		CMLib.ableMapper().delCharAbilityMapping(ID(),"Spell_MagicMissile");
+		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),3,"Spell_CauseStink",25,true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),8,"Skill_Spellcraft",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),9,"Spell_MassWaterbreath",25,true);
Index: planet_ink/coffee_mud/CharClasses/Monk.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Monk.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Monk.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,19 +37,18 @@
 	public String ID(){return "Monk";}
 	public String name(){return "Monk";}
 	public String baseClass(){return "Fighter";}
-	public int getMaxHitPointsLevel(){return 24;}
 	public int getBonusPracLevel(){return -1;}
-	public int getBonusAttackLevel(){return 2;}
+	public int getBonusAttackLevel(){return 1;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
-	public int getLevelsPerBonusDamage(){ return 1;}
+	public int getLevelsPerBonusDamage(){ return 30;}
 	public int getPracsFirstLevel(){return 3;}
 	public int getTrainsFirstLevel(){return 4;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 8;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 2;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_CLOTH;}
 
 	public Monk()
@@ -172,26 +171,6 @@
 		return super.qualifiesForThisClass(mob,quiet);
 	}
 
-	public void unLevel(MOB mob)
-	{
-		if(mob.envStats().level()<2)
-			return;
-		super.unLevel(mob);
-
-		int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
-		int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
-					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
-		if(dexStat>maxDexStat) dexStat=maxDexStat;
-		int attArmor=(int)Math.round(CMath.div(dexStat,9.0));
-		attArmor=attArmor*-1;
-		mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
-		mob.envStats().setArmor(mob.envStats().armor()-attArmor);
-
-		mob.recoverEnvStats();
-		mob.recoverCharStats();
-		mob.recoverMaxState();
-	}
-
 	public boolean anyWeapons(MOB mob)
 	{
 		for(int i=0;i<mob.inventorySize();i++)
@@ -206,7 +185,7 @@
 	}
 
     public void executeMsg(Environmental host, CMMsg msg){ super.executeMsg(host,msg); Fighter.conquestExperience(this,host,msg);}
-	public String otherBonuses(){return "Receives (Dexterity/9)+1 bonus to defence every level.  Receives 2%/lvl unarmed attack bonus.  Receives bonus attack when unarmed.  Has Slow Fall ability.  Receives 2%/level trap avoidance.  Receives bonus conquest experience.";}
+	public String otherBonuses(){return "Receives defensive bonus for high dexterity.  Receives unarmed attack bonus.  Receives bonus attack when unarmed.  Has Slow Fall ability.  Receives trap avoidance.  Receives bonus conquest experience.";}
 	public void affectEnvStats(Environmental affected, EnvStats affectableStats)
 	{
 		super.affectEnvStats(affected,affectableStats);
@@ -237,15 +216,41 @@
 			affectableStats.getStat(CharStats.STAT_SAVE_TRAPS)
 			+(affectableStats.getClassLevel(this)*2));
 	}
+	public void unLevel(MOB mob)
+	{
+		if(mob.envStats().level()<2)
+			return;
+		super.unLevel(mob);
+	    if(((mob.baseEnvStats().level()+1) % 2)==0)
+	    {
+			int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
+			int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
+						 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
+			if(dexStat>maxDexStat) dexStat=maxDexStat;
+			int attArmor=(int)Math.round(CMath.div(dexStat,9.0));
+			attArmor=attArmor*-1;
+			mob.baseEnvStats().setArmor(mob.baseEnvStats().armor()-attArmor);
+			mob.envStats().setArmor(mob.envStats().armor()-attArmor);
+	    }
+
+		mob.recoverEnvStats();
+		mob.recoverCharStats();
+		mob.recoverMaxState();
+	}
+
+	
 	public void level(MOB mob, Vector newAbilityIDs)
 	{
 	    if(CMSecurity.isDisabled("LEVELS")) return;
-		int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
-		int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
-					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
-		if(dexStat>maxDexStat) dexStat=maxDexStat;
-		int attArmor=((int)Math.round(CMath.div(dexStat,9.0)))+1;
-		mob.tell("^NYour stealthiness grants you a defensive bonus of ^H"+attArmor+"^?.^N");
+	    if((mob.baseEnvStats().level() % 2)==0)
+	    {
+			int dexStat=mob.charStats().getStat(CharStats.STAT_DEXTERITY);
+			int maxDexStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
+						 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_DEXTERITY));
+			if(dexStat>maxDexStat) dexStat=maxDexStat;
+			int attArmor=((int)Math.round(CMath.div(dexStat,9.0)))+1;
+			mob.tell("^NYour dexterity grants you a defensive bonus of ^H"+attArmor+"^?.^N");
+	    }
 	}
 
 	
Index: planet_ink/coffee_mud/CharClasses/Oracle.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Oracle.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Oracle.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Druid.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Druid.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Druid.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,15 +39,15 @@
 	public String name(){return "Druid";}
 	public String baseClass(){return ID();}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CONSTITUTION;}
-	public int getLevelsPerBonusDamage(){ return 6;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
 	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 8;}
+	public int getManaDie(){return 4;}
 	protected String armorFailMessage(){return "<S-NAME> watch(es) <S-HIS-HER> armor absorb <S-HIS-HER> magical energy!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_NATURAL;}
Index: planet_ink/coffee_mud/CharClasses/Bard.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Bard.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Bard.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,17 +37,16 @@
 	public String ID(){return "Bard";}
 	public String name(){return "Bard";}
 	public String baseClass(){return ID();}
-	public int getMaxHitPointsLevel(){return 18;}
 	public int getBonusPracLevel(){return 1;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CHARISMA;}
 	public int getLevelsPerBonusDamage(){ return 4;}
 	public int getHPDivisor(){return 3;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 6;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 6;}
+	public int getManaDie(){return 2;}
 	protected String armorFailMessage(){return "<S-NAME> armor makes <S-HIM-HER> mess up <S-HIS-HER> <SKILL>!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_THIEFLIKE;}
Index: planet_ink/coffee_mud/CharClasses/Archon.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Archon.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Archon.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Illusionist.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Illusionist.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Illusionist.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Ranger.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Ranger.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Ranger.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -38,20 +38,19 @@
 	public String ID(){return "Ranger";}
 	public String name(){return "Ranger";}
 	public String baseClass(){return "Fighter";}
-	public int getMaxHitPointsLevel(){return 22;}
 	public int getBonusPracLevel(){return 0;}
-	public int getBonusAttackLevel(){return 2;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getMovementMultiplier(){return 12;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
-	public int getLevelsPerBonusDamage(){ return 1;}
+	public int getLevelsPerBonusDamage(){ return 30;}
 	public int getPracsFirstLevel(){return 3;}
 	public int getTrainsFirstLevel(){return 4;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 6;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 8;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 3;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_ANY;}
 	
 	public Ranger()
Index: planet_ink/coffee_mud/CharClasses/Gaian.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Gaian.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Gaian.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,15 +39,15 @@
 	public String name(){return "Gaian";}
 	public String baseClass(){return "Druid";}
 	public int getBonusPracLevel(){return 2;}
-	public int getBonusAttackLevel(){return 1;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_CONSTITUTION;}
-	public int getLevelsPerBonusDamage(){ return 6;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
 	public int getManaDivisor(){return 4;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 8;}
+	public int getManaDie(){return 4;}
 	protected String armorFailMessage(){return "<S-NAME> watch(es) <S-HIS-HER> armor absorb <S-HIS-HER> magical energy!";}
 	public int allowedArmorLevel(){return CharClass.ARMOR_NONMETAL;}
 	public int allowedWeaponLevel(){return CharClass.WEAPONS_NATURAL;}
Index: planet_ink/coffee_mud/CharClasses/Qualifier.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Qualifier.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Qualifier.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/CharClasses/Assassin.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Assassin.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Assassin.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -121,6 +121,7 @@
 		CMLib.ableMapper().addCharAbilityMapping(ID(),15,"Specialization_Axe",false);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),16,"Fighter_DualParry",false);
+		CMLib.ableMapper().addCharAbilityMapping(ID(),16,"Skill_AttackHalf",true);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),17,"Fighter_CriticalShot",true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),17,"Specialization_Hammer",false);
@@ -145,7 +146,6 @@
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),24,"Fighter_Tumble",false);
 		
-		CMLib.ableMapper().addCharAbilityMapping(ID(),25,"Skill_AttackHalf",true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),25,"Fighter_CalledShot",false);
 		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),30,"Thief_Shadowstrike",true);
Index: planet_ink/coffee_mud/CharClasses/Conjurer.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Conjurer.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Conjurer.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -40,6 +40,8 @@
     public void initializeClass()
     {
         super.initializeClass();
+		CMLib.ableMapper().delCharAbilityMapping(ID(),"Spell_IronGrip");
+		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),8,"Skill_Spellcraft",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),8,"Spell_SummonMarker",25,true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),11,"Spell_Scatter",25,true);
Index: planet_ink/coffee_mud/CharClasses/Fighter.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Fighter.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Fighter.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,19 +37,18 @@
 	public String ID(){return "Fighter";}
 	public String name(){return "Fighter";}
 	public String baseClass(){return ID();}
-	public int getMaxHitPointsLevel(){return 24;}
 	public int getBonusPracLevel(){return -1;}
-	public int getBonusAttackLevel(){return 2;}
+	public int getBonusAttackLevel(){return 0;}
 	public int getAttackAttribute(){return CharStats.STAT_STRENGTH;}
-	public int getLevelsPerBonusDamage(){ return 1;}
+	public int getLevelsPerBonusDamage(){ return 10;}
 	public int getPracsFirstLevel(){return 3;}
 	public int getTrainsFirstLevel(){return 4;}
 	public int getHPDivisor(){return 2;}
 	public int getHPDice(){return 2;}
 	public int getHPDie(){return 7;}
-	public int getManaDivisor(){return 4;}
+	public int getManaDivisor(){return 8;}
 	public int getManaDice(){return 1;}
-	public int getManaDie(){return 4;}
+	public int getManaDie(){return 2;}
 	public int allowedArmorLevel(){return CharClass.ARMOR_ANY;}
 	public int getMovementMultiplier(){return 12;}
 	
Index: planet_ink/coffee_mud/CharClasses/SpecialistMage.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/SpecialistMage.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/SpecialistMage.java	(revision 2574)
@@ -17,7 +17,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -75,12 +75,12 @@
 	public String otherBonuses()
 	{
 		String chosen=CMStrings.capitalizeAndLower(Ability.DOMAIN_DESCS[domain()>>5].replace('_',' '));
-		return "At 5th level, receives 2%/lvl bonus damage from "+chosen+".  At 10th level, receives double duration on your "+chosen+" magic, and half duration from malicious "+chosen+" magic.";
+		return "At 5th level, receives bonus damage from "+chosen+" as levels advance.  At 10th level, receives double duration on your "+chosen+" magic, and half duration from malicious "+chosen+" magic.";
 	}
 	public String otherLimitations()
 	{
 		String opposed=CMStrings.capitalizeAndLower(Ability.DOMAIN_DESCS[opposed()>>5].replace('_',' '));
-		return "Unable to cast "+opposed+" spells.  Receives 2%/lvl penalty damage from "+opposed+".  Receives double duration from malicious "+opposed+" magic, half duration on other "+opposed+" effects.";
+		return "Unable to cast "+opposed+" spells.  Receives penalty damage from "+opposed+" as levels advance.  Receives double duration from malicious "+opposed+" magic, half duration on other "+opposed+" effects.";
 	}
 
 	public boolean okMessage(Environmental myHost, CMMsg msg)
@@ -110,7 +110,7 @@
 			{
                 int classLevel=myChar.charStats().getClassLevel(this);
                 if(classLevel>30) classLevel=30;
-                msg.setValue((int)Math.round(CMath.mul(msg.value(),1.0+CMath.mul(0.02,classLevel))));
+                msg.setValue((int)Math.round(CMath.mul(msg.value(),1.0+CMath.mul(0.01,classLevel))));
 			}
 		}
 		else
@@ -123,10 +123,10 @@
             if(classLevel>30) classLevel=30;
 			if((domain==domain())
 			&&(classLevel>=5))
-				msg.setValue((int)Math.round(CMath.div((msg.value()),1.0+CMath.mul(0.02,classLevel))));
+				msg.setValue((int)Math.round(CMath.div((msg.value()),1.0+CMath.mul(0.01,classLevel))));
 			else
 			if(domain==opposed())
-				msg.setValue((int)Math.round(CMath.mul((msg.value()),1.0+CMath.mul(0.02,classLevel))));
+				msg.setValue((int)Math.round(CMath.mul((msg.value()),1.0+CMath.mul(0.01,classLevel))));
 		}
 
 		return super.okMessage(myChar,msg);
Index: planet_ink/coffee_mud/CharClasses/Alterer.java
===================================================================
--- planet_ink/coffee_mud/CharClasses/Alterer.java	(revision 2354)
+++ planet_ink/coffee_mud/CharClasses/Alterer.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -39,6 +39,8 @@
     public void initializeClass()
     {
         super.initializeClass();
+		CMLib.ableMapper().delCharAbilityMapping(ID(),"Spell_Shield");
+		
 		CMLib.ableMapper().addCharAbilityMapping(ID(),8,"Skill_Spellcraft",false);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),10,"Spell_MassFeatherfall",25,true);
 		CMLib.ableMapper().addCharAbilityMapping(ID(),13,"Spell_IncreaseGravity",25,true);
Index: planet_ink/coffee_mud/Areas/StdArea.java
===================================================================
--- planet_ink/coffee_mud/Areas/StdArea.java	(revision 2354)
+++ planet_ink/coffee_mud/Areas/StdArea.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -198,6 +198,7 @@
     {
         envStats=(EnvStats)CMClass.getCommon("DefaultEnvStats");
         baseEnvStats=envStats;
+        amDestroyed=true;
         miscText=null;
         imageName=null;
         affects=null;
@@ -217,7 +218,6 @@
         climateObj=null;
         properRoomIDSet=null;
         metroRoomIDSet=null;
-        amDestroyed=true;
     }
     public boolean amDestroyed(){return amDestroyed;}
     public boolean savable(){return ((!amDestroyed) && (!CMath.bset(flags(),Area.FLAG_INSTANCE_CHILD)));}
@@ -832,7 +832,7 @@
 	}
 	public int numEffects()
 	{
-		return affects.size();
+		return (affects==null)?0:affects.size();
 	}
 	public Ability fetchEffect(int index)
 	{
@@ -1276,6 +1276,7 @@
         if(R==null) return;
         if(R instanceof GridLocale)
             ((GridLocale)R).clearGrid(null);
+        if(properRooms!=null)
         synchronized(properRooms)
         {
         	if(R.roomID().length()==0)
Index: planet_ink/coffee_mud/Libraries/CMPlayers.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMPlayers.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMPlayers.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.io.IOException;
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -96,6 +96,12 @@
                     M.playerStats().setLastUpdated(M.playerStats().lastDateTime());
                 M.recoverEnvStats();
                 M.recoverCharStats();
+                Ability A=null;
+        		for(int a=0;a<M.numLearnedAbilities();a++)
+        		{
+        			A=M.fetchAbility(a);
+        			if(A!=null) A.autoInvocation(M);
+        		}
             }
             TM.destroy();
         }
@@ -434,7 +440,7 @@
                 if(!protectedOne)
                 {
                     MOB M=getLoadPlayer(name);
-                    if(M!=null)
+                    if((M!=null)&&(!CMSecurity.isASysOp(M))&&(!CMSecurity.isAllowedAnywhere(M, "NOPURGE")))
                     {
                         obliteratePlayer(M,true);
                         Log.sysOut(thread.getName(),"AutoPurged user "+name+". Last logged in "+(CMLib.time().date2String(last))+".");
Index: planet_ink/coffee_mud/Libraries/interfaces/LanguageLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/LanguageLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/LanguageLibrary.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/interfaces/SMTPLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/SMTPLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/SMTPLibrary.java	(revision 2574)
@@ -16,9 +16,9 @@
     public static final int DEFAULT_TIMEOUT=10000;
 
 	public boolean isValidEmailAddress(String addy);
-    public boolean emailIfPossible(String SMTPServerName, String from, String replyTo, String to, String subject, String message)
+    public boolean emailIfPossible(String SMTPServerInfo, String from, String replyTo, String to, String subject, String message)
         throws IOException;
-    public SMTPClient getClient(String hostid, int port)  throws UnknownHostException, IOException;
+    public SMTPClient getClient(String SMTPServerInfo, int port)  throws UnknownHostException, IOException;
     public SMTPClient getClient(String emailAddress) throws IOException, BadEmailAddressException;
     
     public static interface SMTPClient
Index: planet_ink/coffee_mud/Libraries/interfaces/AbilityParameters.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/AbilityParameters.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/AbilityParameters.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -56,6 +56,7 @@
         public String defaultValue();
         public String webValue(ExternalHTTPRequests httpReq, Hashtable parms, String oldVal, String fieldName);
         public String webField(ExternalHTTPRequests httpReq, Hashtable parms, String oldVal, String fieldName);
+        public String webTableField(ExternalHTTPRequests httpReq, Hashtable parms, String oldVal);
     }
     
     public Vector getCodedSpells(String spells);
Index: planet_ink/coffee_mud/Libraries/interfaces/MaterialLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/MaterialLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/MaterialLibrary.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/interfaces/TrackingLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/TrackingLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/TrackingLibrary.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -32,11 +32,11 @@
 public interface TrackingLibrary extends CMLibrary
 {
     public Vector findBastardTheBestWay(Room location, Room destRoom, TrackingFlags flags, int maxRadius);
-    public Vector findBastardTheBestWay(Room location, Vector destRooms, TrackingFlags flags, int maxRadius);
-    public int trackNextDirectionFromHere(Vector theTrail, Room location, boolean openOnly);
+    public Vector findBastardTheBestWay(Room location, Vector<Room> destRooms, TrackingFlags flags, int maxRadius);
+    public int trackNextDirectionFromHere(Vector<Room> theTrail, Room location, boolean openOnly);
     public void stopTracking(MOB mob);
-    public int radiatesFromDir(Room room, Vector rooms);
-    public void getRadiantRooms(Room room, Vector rooms, TrackingFlags flags, Room radiateTo, int maxDepth, HashSet ignoreRooms);
+    public int radiatesFromDir(Room room, Vector<Room> rooms);
+    public void getRadiantRooms(Room room, Vector<Room> rooms, TrackingFlags flags, Room radiateTo, int maxDepth, HashSet<Room> ignoreRooms);
 	public Vector getRadiantRooms(Room room, TrackingFlags flags, int maxDepth);
     public boolean beMobile(MOB mob,
                             boolean dooropen,
@@ -44,7 +44,7 @@
                             boolean roomprefer, 
                             boolean roomobject,
                             long[] status,
-                            Vector rooms);
+                            Vector<Room> rooms);
     public void wanderAway(MOB M, boolean mindPCs, boolean andGoHome);
     public void wanderFromTo(MOB M, Room toHere, boolean mindPCs);
     public void wanderIn(MOB M, Room toHere);
@@ -52,8 +52,9 @@
     public boolean move(MOB mob, int directionCode, boolean flee, boolean nolook);
     public int findExitDir(MOB mob, Room R, String desc);
     public int findRoomDir(MOB mob, Room R);
-	public Vector findAllTrails(Room from, Room to, Vector radiantTrail);
-	public Vector findAllTrails(Room from, Vector tos, Vector radiantTrail);
+	public Vector findAllTrails(Room from, Room to, Vector<Room> radiantTrail);
+	public Vector findAllTrails(Room from, Vector<Room> tos, Vector<Room> radiantTrail);
+	public String getTrailToDescription(Room R1, Vector<Room> set, String where, boolean areaNames, boolean confirm, int radius, HashSet<Room> ignoreRooms, int maxMins);
 	
 	public static enum TrackingFlag {NOHOMES,OPENONLY,AREAONLY,NOEMPTYGRIDS,NOAIR,NOWATER};
 	
Index: planet_ink/coffee_mud/Libraries/interfaces/ItemBalanceLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/ItemBalanceLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/ItemBalanceLibrary.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -45,14 +45,13 @@
 	public void balanceItemByLevel(Item I);
 	public int levelsFromCaster(Item savedI, Ability CAST);
 	public int levelsFromAdjuster(Item savedI, Ability ADJ);
-	public boolean itemFix(Item I);
+	public boolean itemFix(Item I, int lvlOr0, StringBuffer changes);
 	public Ability[] getTimsAdjResCast(Item I, int[] castMul);
 	public Item enchant(Item I, int pct);
     public int levelsFromAbility(Item savedI);
     public Hashtable timsItemAdjustments(Item I,
 							             int level,
 							             int material,
-							             int weight,
 							             int hands,
 							             int wclass,
 							             int reach,
Index: planet_ink/coffee_mud/Libraries/interfaces/SocialsList.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/SocialsList.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/SocialsList.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/interfaces/CombatLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/CombatLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/CombatLibrary.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -37,8 +37,12 @@
     
     public HashSet allPossibleCombatants(MOB mob, boolean beRuthless);
     public HashSet properTargets(Ability A, MOB caster, boolean beRuthless);
+	public int adjustedArmor(MOB mob);
+	public int absoluteAdjustedArmorScore(MOB mob);
+	public int adjustedAttackBonus(MOB mob, MOB target);
+	public int adjustedDamage(MOB mob, Weapon weapon, MOB target);
     public boolean rollToHit(MOB attacker, MOB defender);
-    public boolean rollToHit(int attack, int defence);
+    public boolean rollToHit(int attack, int defence, int adjustment);
     public HashSet allCombatants(MOB mob);
     public void makePeaceInGroup(MOB mob);
     public void postPanic(MOB mob, CMMsg addHere);
@@ -57,9 +61,9 @@
     public HashSet getCombatDividers(MOB killer, MOB killed, CharClass combatCharClass);
     public HashSet getCombatBeneficiaries(MOB killer, MOB killed, CharClass combatCharClass);
     public DeadBody justDie(MOB source, MOB target);
-    public String armorStr(int armor);
+    public String armorStr(MOB mob);
     public String standardHitWord(int type, int damage);
-    public String fightingProwessStr(int prowess);
+    public String fightingProwessStr(MOB mob);
     public String standardMissString(int weaponType, int weaponClassification, String weaponName, boolean useExtendedMissString);
     public String standardHitString(int weaponClass, int damageAmount,  String weaponName);
     public String standardMobCondition(MOB viewer, MOB mob);
Index: planet_ink/coffee_mud/Libraries/interfaces/I3Interface.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/I3Interface.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/I3Interface.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/interfaces/QuestManager.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/QuestManager.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/QuestManager.java	(revision 2574)
@@ -16,7 +16,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -196,7 +196,7 @@
                 boolean found=false;
                 Room R=CMLib.map().getRoom(s);
                 if(R!=null) found=true;
-                if(!found) found=CMLib.map().findWorldRoomLiberally(null,s,"R",50)!=null;
+                if(!found) found=CMLib.map().findWorldRoomLiberally(null,s,"R",50,30)!=null;
                 if(!found) throw new CMException("'"+((String)V.elementAt(v))+"' is not a valid room name, id, or description.");
             }
             return str;
Index: planet_ink/coffee_mud/Libraries/interfaces/ThreadEngine.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/ThreadEngine.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/ThreadEngine.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -92,9 +92,11 @@
         public void debugDumpStack(Thread theThread)
         {
             // I wish Java had compiler directives.  Would be great to un-comment this for 1.5 JVMs
-            //java.lang.StackTraceElement[] s=(java.lang.StackTraceElement[])Thread.getAllStackTraces().get(theThread);
-            //for(int i=0;i<s.length;i++)
-            //  Log.debugOut("UtiliDump","   "+s[i].getClassName()+": "+s[i].getMethodName()+"("+s[i].getFileName()+": "+s[i].getLineNumber()+")");
+            java.lang.StackTraceElement[] s=(java.lang.StackTraceElement[])theThread.getStackTrace();
+            StringBuffer dump = new StringBuffer("");
+            for(int i=0;i<s.length;i++)
+            	dump.append("\n   "+s[i].getClassName()+": "+s[i].getMethodName()+"("+s[i].getFileName()+": "+s[i].getLineNumber()+")");
+            Log.debugOut("ThreadEngine",dump.toString());
         }
         
         public void run()
Index: planet_ink/coffee_mud/Libraries/interfaces/AbilityMapper.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/AbilityMapper.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/AbilityMapper.java	(revision 2574)
@@ -15,7 +15,7 @@
 
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -85,7 +85,7 @@
     
 	public void addPreRequisites(String ID, Vector preReqSkillsList, String extraMask);
     public void delCharMappings(String ID);
-    public Enumeration getClassAbles(String ID);
+    public Enumeration getClassAbles(String ID, boolean addAll);
     public boolean qualifiesByAnyCharClass(String abilityID);
     public int lowestQualifyingLevel(String ability);
     public boolean classOnly(String classID, String abilityID);
Index: planet_ink/coffee_mud/Libraries/interfaces/MaskingLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/MaskingLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/MaskingLibrary.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.io.IOException;
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -145,10 +145,10 @@
         +"+RESOURCES \"-OAK\" etc.. (Do not <WORD> items of subtracted resources) <BR>"
         +"-JAVACLASS \"+GENMOB\" etc.. (<WORD> only objects of added java class) <BR>"
         +"+JAVACLASS \"-GENITEM\" etc.. (Do not <WORD> objs of subtracted classes) <BR>"
-        +"-RESOURCES \"+OAK\" etc.. (<WORD> only items of added resources) <BR>"
-        +"+RESOURCES \"-OAK\" etc.. (Do not <WORD> items of subtracted resources) <BR>"
         +"-ABILITY X (<WORD> those with magical ability less than X)  <BR>"
         +"+ABILITY X (<WORD> those with magical ability greater than X) <BR>"
+        +"-IF <CONDITION> (<WORD>, unless they meet a Scriptable condition(s))  <BR>"
+        +"+IF <CONDITION> (never <WORD> anyone who meets a Scriptable condition)<BR>"
         +"-VALUE X (<WORD> those with value or money less than X)  <BR>"
         +"+VALUE X (<WORD> those with value or money greater than X) <BR>"
         +"-WEIGHT X (<WORD> those weighing less than X)  <BR>"
Index: planet_ink/coffee_mud/Libraries/interfaces/AutoTitlesLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/AutoTitlesLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/AutoTitlesLibrary.java	(revision 2574)
@@ -14,7 +14,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/interfaces/GenericEditor.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/GenericEditor.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/GenericEditor.java	(revision 2574)
@@ -16,7 +16,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/interfaces/XMLLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/XMLLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/XMLLibrary.java	(revision 2574)
@@ -15,7 +15,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -200,7 +200,7 @@
      * @param V
      * @return
      */
-	public String getXMLList(Vector V);
+	public String getXMLList(Vector<?> V);
     
     /**
      * Return the data value within the first XML block
Index: planet_ink/coffee_mud/Libraries/interfaces/WorldMap.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/WorldMap.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/WorldMap.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -67,8 +67,8 @@
     public void obliterateRoom(Room deadRoom);
     public Room findConnectingRoom(Room room);
     public int getRoomDir(Room from, Room to);
-	public Vector findWorldRoomsLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct);
-	public Room findWorldRoomLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct);
+	public Vector findWorldRoomsLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct, int maxSeconds);
+	public Room findWorldRoomLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct, int maxSeconds);
 	public Vector findAreaRoomsLiberally(MOB mob, Area A, String cmd, String srchWhatAERIPMVK, int timePct);
 	public Room findAreaRoomLiberally(MOB mob, Area A, String cmd, String srchWhatAERIPMVK, int timePct);
     public Vector findRooms(Enumeration rooms, MOB mob, String srchStr, boolean displayOnly, int timePct);
@@ -141,7 +141,9 @@
     /************************************************************************/
     public void addGlobalHandler(MsgListener E, int category);
     public void delGlobalHandler(MsgListener E, int category);
-    public MOB god(Room R);
+    public MOB deity();
+    public MOB mobCreated();
+    public MOB mobCreated(Room R);
     public boolean sendGlobalMessage(MOB host, int category, CMMsg msg);
     
     public static class CrossExit
Index: planet_ink/coffee_mud/Libraries/interfaces/CMMiscUtils.java
===================================================================
--- planet_ink/coffee_mud/Libraries/interfaces/CMMiscUtils.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/interfaces/CMMiscUtils.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.io.IOException;
 import java.util.*;
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -53,6 +53,8 @@
     public boolean armorCheck(MOB mob, int allowedArmorLevel);
 	public boolean armorCheck(MOB mob, Item I, int allowedArmorLevel);
     public void recursiveDropMOB(MOB mob, Room room, Item thisContainer, boolean bodyFlag);
+	public void confirmWearability(MOB mob);
+	public int processVariableEquipment(MOB mob);
     
     public Trap makeADeprecatedTrap(Environmental unlockThis);
     public void setTrapped(Environmental myThang, boolean isTrapped);
Index: planet_ink/coffee_mud/Libraries/CoffeeShops.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CoffeeShops.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CoffeeShops.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -155,6 +155,19 @@
         return str.toString();
     }
 
+    protected Ability getTrainableAbility(MOB teacher, Ability A)
+    {
+    	if((teacher==null)||(A==null)) return A;
+    	Ability teachableA=teacher.fetchAbility(A.ID());
+    	if(teachableA==null)
+    	{
+    		teachableA=(Ability)A.copyOf();
+    		teacher.addAbility(teachableA);
+    	}
+    	teachableA.setProficiency(100);
+    	return teachableA;
+    }
+    
     protected boolean shownInInventory(MOB seller, MOB buyer, Environmental product, ShopKeeper shopKeeper)
     {
         if(CMSecurity.isAllowed(buyer,buyer.location(),"CMDMOBS")) 
@@ -178,7 +191,7 @@
         {
         	if(shopKeeper.isSold(ShopKeeper.DEAL_TRAINER))
         	{
-        		if(CMLib.ableMapper().qualifiesByLevel(buyer, (Ability)product))
+        		if(!CMLib.ableMapper().qualifiesByLevel(buyer, (Ability)product))
     				return false;
         	}
         }
@@ -644,7 +657,8 @@
                 if(shop.isSold(ShopKeeper.DEAL_TRAINER))
                 {
                     MOB teacher=CMClass.getMOB("Teacher");
-                    if(!((Ability)product).canBeLearnedBy(teacher,buyer))
+                    Ability teachableA=getTrainableAbility(teacher, (Ability)product);
+                    if((teachableA==null)||(!teachableA.canBeLearnedBy(teacher,buyer)))
                     {
                         teacher.destroy();
                         return false;
@@ -1005,7 +1019,9 @@
         if(shop.isSold(ShopKeeper.DEAL_TRAINER))
         {
             MOB teacher=CMClass.getMOB("Teacher");
-            A.teach(teacher,mobFor);
+            Ability teachableA=getTrainableAbility(teacher,A);
+            if(teachableA!=null)
+            	teachableA.teach(teacher,mobFor);
             teacher.destroy();
         }
         else
@@ -1435,14 +1451,15 @@
 			auctionData.highBid=bid;
             returnMoney(auctionData.highBidderM,auctionData.currency,-bid);
 			bidWords=CMLib.beanCounter().nameCurrencyShort(auctionData.currency,auctionData.bid);
-			auctionAnnounces.addElement("A new bid has been entered for "+I.name()+". The current bid is "+bidWords+".");
+			String yourBidWords = CMLib.beanCounter().abbreviatedPrice(currencyName, auctionData.highBid);
+			auctionAnnounces.addElement("A new bid has been entered for "+I.name()+". The current high bid is "+bidWords+".");
 			if((oldHighBider!=null)&&(oldHighBider==mob))
-				return new String[]{"You have submitted a new bid for "+I.name()+".",null};
+				return new String[]{"You have submitted a new high bid of "+yourBidWords+" for "+I.name()+".",null};
 			else
 			if((oldHighBider!=null)&&(oldHighBider!=mob))
-				return new String[]{"You have the high bid for "+I.name()+".","You have been outbid for "+I.name()+"."};
+				return new String[]{"You have the new high reserve bid of "+yourBidWords+" for "+I.name()+". The current nominal high bid is "+bidWords+".","You have been outbid for "+I.name()+"."};
 			else
-				return new String[]{"You have submitted a bid for "+I.name()+".",null};
+				return new String[]{"You have submitted a bid of "+yourBidWords+" for "+I.name()+".",null};
 		}
 		else
 		if((bid==auctionData.bid)&&(auctionData.highBidderM!=null))
Index: planet_ink/coffee_mud/Libraries/Dice.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Dice.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Dice.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -57,20 +57,17 @@
 
 	public int rollHP(int level, int code)
 	{
-		int mul=1;
-		if(code<0)
-		{
-			code=code*-1;
-			mul=-1;
-		}
-		// old style
-		if(code<32768) return 10
-							  +(int)Math.round(CMath.mul(level*level,0.85))
-							  +(roll(level,code,0)*mul);
+		if(code<0) code=0;
+		// new old style
+		if(code<32768)
+			return 3+level+(level * code);
+		// old old style
+		//	return 10 +(int)Math.round(CMath.mul(level*level,0.85)) +(roll(level,code,0)*mul);
+		
 		// new style
 		int r=code>>23;
 		int d=(code-(r<<23))>>15;
-		int p=(((code-(r<<23))-(d<<15)))*mul;
+		int p=(((code-(r<<23))-(d<<15)));
 		return roll(r,d,p);
 	}
 	
Index: planet_ink/coffee_mud/Libraries/BeanCounter.java
===================================================================
--- planet_ink/coffee_mud/Libraries/BeanCounter.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/BeanCounter.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/CoffeeMaker.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CoffeeMaker.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CoffeeMaker.java	(revision 2574)
@@ -20,7 +20,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -782,6 +782,7 @@
 						return unpackErr("Room","bad 'iblk' in room "+newRoom.roomID());
 					String iClass=CMLib.xml().getValFromPieces(iblk.contents,"ICLAS");
 					Item newItem=CMClass.getItem(iClass);
+					if(newItem instanceof ArchonOnly) continue;
 					if(newItem==null) return unpackErr("Room","null 'iClass': "+iClass+" in room "+newRoom.roomID());
 					if((newItem instanceof Container)||(newItem instanceof Rideable))
 					{
@@ -1373,6 +1374,9 @@
 			if(S!=null) S.rawPrint(".");
 			String itemClass=CMLib.xml().getValFromPieces(iblk.contents,"ICLAS");
 			Item newItem=CMClass.getItem(itemClass);
+			if((newItem instanceof ArchonOnly)
+			&&((S==null)||(S.mob()==null)||(!CMSecurity.isASysOp(S.mob()))))
+				continue;
 			if(newItem==null) return unpackErr("Items","null 'iClass': "+itemClass);
 			newItem.baseEnvStats().setLevel(CMLib.xml().getIntFromPieces(iblk.contents,"ILEVL"));
 			newItem.baseEnvStats().setAbility(CMLib.xml().getIntFromPieces(iblk.contents,"IABLE"));
@@ -1888,6 +1892,7 @@
 				return;
 			}
 			Item newOne=CMClass.getItem(CMLib.xml().getValFromPieces(iblk.contents,"ICLASS"));
+			if(newOne instanceof ArchonOnly) continue;
 			if(newOne==null)
 			{
 				Log.errOut("CoffeeMaker","Unknown item "+CMLib.xml().getValFromPieces(iblk.contents,"ICLASS")+" on "+identifier(M,null)+", skipping.");
Index: planet_ink/coffee_mud/Libraries/RawCMaterial.java
===================================================================
--- planet_ink/coffee_mud/Libraries/RawCMaterial.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/RawCMaterial.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.util.regex.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/Sense.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Sense.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Sense.java	(revision 2574)
@@ -20,7 +20,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -735,6 +735,17 @@
 	public String dispositionString(Environmental seen, int flag_msgType)
 	{
 		String type=null;
+		if(isFalling(seen))
+			type="falls";
+		else
+		if(isSleeping(seen))
+		{
+			if(flag_msgType!=flag_is)
+				type="floats";
+			else
+				type="sleeps";
+		}
+		else
 		if(isSneaking(seen))
 			type="sneaks";
 		else
@@ -749,20 +760,9 @@
 				type="sits";
 		}
 		else
-		if(isSleeping(seen))
-		{
-			if(flag_msgType!=flag_is)
-				type="floats";
-			else
-				type="sleeps";
-		}
-		else
 		if(isFlying(seen))
 			type="flies";
 		else
-		if(isFalling(seen))
-			type="falls";
-		else
 		if((isClimbing(seen))&&(flag_msgType!=flag_is))
 			type="climbs";
 		else
Index: planet_ink/coffee_mud/Libraries/SMTPclient.java
===================================================================
--- planet_ink/coffee_mud/Libraries/SMTPclient.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/SMTPclient.java	(revision 2574)
@@ -19,10 +19,11 @@
 import javax.naming.*;
 import javax.naming.directory.*;
 import com.planet_ink.coffee_mud.core.exceptions.*;
+import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -47,6 +48,8 @@
     public PrintWriter send = null;
 	/** Socket to use */
     public Socket sock = null;
+    
+    private SMTPHostAuth auth = null;
 
 	Attribute doMXLookup( String hostName ) 
 	{
@@ -67,10 +70,10 @@
 		return null;
 	}
   
-	public SMTPClient getClient(String hostid, int port) 
+	public SMTPClient getClient(String SMTPServerInfo, int port) 
         throws UnknownHostException,IOException 
     {
-        return new SMTPclient(hostid,port);
+        return new SMTPclient(SMTPServerInfo,port);
     }
     public SMTPClient getClient(String emailAddress) 
         throws IOException, BadEmailAddressException 
@@ -89,47 +92,23 @@
      *   @exception UnknownHostException
      *   @exception IOException
      */
-    public SMTPclient( String hostid, int port) throws UnknownHostException,IOException {
-        sock = new Socket( hostid, port );
+    public SMTPclient( String SMTPServerInfo, int port) throws UnknownHostException,IOException {
+    	auth = new SMTPHostAuth(SMTPServerInfo);
+        sock = new Socket( auth.getHost(), port );
 		reply = new BufferedReader(new InputStreamReader(sock.getInputStream()));
 		sock.setSoTimeout(DEFAULT_TIMEOUT);
         send = new PrintWriter( sock.getOutputStream() );
+        boolean debug = CMSecurity.isDebugging("SMTPCLIENT");
         String rstr = reply.readLine();
+        if(debug) Log.debugOut("SMTPclient",rstr);
         if ((rstr==null)||(!rstr.startsWith("220"))) throw new ProtocolException(rstr);
         while (rstr.indexOf('-') == 3) {
             rstr = reply.readLine();
+            if(debug) Log.debugOut("SMTPclient",rstr);
             if (!rstr.startsWith("220")) throw new ProtocolException(rstr);
         }
     }
 
-    /**
-     *   Create a SMTP object pointing to the specified host
-     *   @param address The host to connect to.
-     *   @exception IOException
-     */
-    public SMTPclient( InetAddress address ) throws IOException {
-        this(address, DEFAULT_PORT);
-    }
-
-    /**
-     *   Create a SMTP object pointing to the specified host
-     *   @param address The host to connect to.
-     *   @param port The host to connect to.
-     *   @exception IOException
-     */
-    public SMTPclient( InetAddress address, int port ) throws IOException {
-        sock = new Socket( address, port );
-		sock.setSoTimeout(DEFAULT_TIMEOUT);
-		reply = new BufferedReader(new InputStreamReader(sock.getInputStream()));
-        send = new PrintWriter( sock.getOutputStream() );
-        String rstr = reply.readLine();
-        if (!rstr.startsWith("220")) throw new ProtocolException(rstr);
-        while (rstr.indexOf('-') == 3) {
-            rstr = reply.readLine();
-            if (!rstr.startsWith("220")) throw new ProtocolException(rstr);
-        }
-    }
-	
 	public SMTPclient (String emailAddress) throws IOException, 
 												   BadEmailAddressException
 	{
@@ -161,10 +140,13 @@
 				reply = new BufferedReader(new InputStreamReader(sock.getInputStream()));
 				sock.setSoTimeout(DEFAULT_TIMEOUT);
 				send = new PrintWriter( sock.getOutputStream() );
-				String rstr = reply.readLine();
+		        boolean debug = CMSecurity.isDebugging("SMTPCLIENT");
+		        String rstr = reply.readLine();
+		        if(debug) Log.debugOut("SMTPclient",rstr);
 				if ((rstr==null)||(!rstr.startsWith("220"))) throw new ProtocolException(rstr);
 				while (rstr.indexOf('-') == 3) {
 				    rstr = reply.readLine();
+			        if(debug) Log.debugOut("SMTPclient",rstr);
 				    if (!rstr.startsWith("220")) throw new ProtocolException(rstr);
 				}
 				connected=true;
@@ -178,18 +160,18 @@
 		if(!connected) throw new IOException("Unable to connect to '"+domain+"'.");
 	}
 	
-	public boolean emailIfPossible(String SMTPServerName, 
-	        						     String from,
-	        						     String replyTo,
-	        						     String to,
-	        						     String subject,
-	        						     String message)
+	public boolean emailIfPossible(String SMTPServerInfo, 
+    						       String from,
+    						       String replyTo,
+    						       String to,
+    						       String subject,
+    						       String message)
 	{
 		try
 		{
 			SMTPclient SC=null;
-		    if(SMTPServerName.length()>0)
-				SC=new SMTPclient(SMTPServerName,DEFAULT_PORT);
+		    if(SMTPServerInfo.length()>0)
+				SC=new SMTPclient(SMTPServerInfo,DEFAULT_PORT);
 		    else
 				SC=new SMTPclient(to);
 		    
@@ -279,6 +261,7 @@
 	{
 		String rstr;
 		String sstr;
+		boolean debug = CMSecurity.isDebugging("SMTPCLIENT");
         StringBuffer fixMsg=new StringBuffer(message);
         for(int f=0;f<fixMsg.length();f++)
         {
@@ -324,57 +307,119 @@
 		  System.err.println("No local IP address found - is your network up?");
 		  throw ioe;
 		}
-        if(com.planet_ink.coffee_mud.core.CMSecurity.isDebugging("SMTPCLIENT"))
-            Log.debugOut("SMTPclient","Sending "+froaddress+" ("+reply_address+") to "+to_address+" through "+mockto_address+", subject="+subject+", message="+message);
 		String host = local.getHostName();
-		send.print("HELO " + host);
+		sstr="HELO " + host;
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
 		send.flush();
 		rstr = reply.readLine();
+        if(debug) Log.debugOut("SMTPclient",rstr);
 		if ((rstr==null)||(!rstr.startsWith("250"))) throw new ProtocolException(""+rstr);
+		
+		if((auth != null) && (auth.getAuthType().length()>0))
+		{
+			sstr="AUTH " + auth.getAuthType();
+	        if(debug) Log.debugOut("SMTPclient",sstr);
+			send.print(sstr);
+			send.print(EOL);
+			send.flush();
+			rstr = reply.readLine();
+	        if(debug) Log.debugOut("SMTPclient",rstr);
+			if ((rstr==null)||(!rstr.startsWith("334"))) throw new ProtocolException(""+rstr);
+			if(auth.getAuthType().equalsIgnoreCase("plain"))
+			{
+				sstr=auth.getPlainLogin();
+		        if(debug) Log.debugOut("SMTPclient",sstr);
+				send.print(sstr);
+				send.print(EOL);
+				send.flush();
+			}
+			else
+			if(auth.getAuthType().equalsIgnoreCase("login"))
+			{
+				sstr=auth.getLogin();
+		        if(debug) Log.debugOut("SMTPclient",sstr);
+				send.print(sstr);
+				send.print(EOL);
+				send.flush();
+				rstr = reply.readLine();
+		        if(debug) Log.debugOut("SMTPclient",rstr);
+				if ((rstr==null)||(!rstr.startsWith("334"))) throw new ProtocolException(""+rstr);
+				sstr=auth.getPassword();
+		        if(debug) Log.debugOut("SMTPclient",sstr);
+				send.print(sstr);
+				send.print(EOL);
+				send.flush();
+			}
+			rstr = reply.readLine();
+	        if(debug) Log.debugOut("SMTPclient",rstr);
+			if ((rstr==null)||(!rstr.startsWith("235"))) throw new ProtocolException(""+rstr);
+		}
 		sstr = "MAIL FROM:<" + froaddress+">" ;
+        if(debug) Log.debugOut("SMTPclient",sstr);
 		send.print(sstr);
 		send.print(EOL);
 		send.flush();
 		rstr = reply.readLine();
+        if(debug) Log.debugOut("SMTPclient",rstr);
 		if ((rstr==null)||(!rstr.startsWith("250"))) throw new ProtocolException(""+rstr);
 		sstr = "RCPT TO:<" + to_address+">";
+        if(debug) Log.debugOut("SMTPclient",sstr);
 		send.print(sstr);
 		send.print(EOL);
 		send.flush();
 		rstr = reply.readLine();
+        if(debug) Log.debugOut("SMTPclient",rstr);
 		if ((rstr==null)||(!rstr.startsWith("250"))) throw new ProtocolException(""+rstr);
-		send.print("DATA");
+		sstr="DATA";
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
 		send.flush();
 		rstr = reply.readLine();
+        if(debug) Log.debugOut("SMTPclient",rstr);
 		if ((rstr==null)||(!rstr.startsWith("354"))) throw new ProtocolException(""+rstr);
-		send.print("MIME-Version: 1.0");
+		sstr="MIME-Version: 1.0";
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
-		send.print("Date: " + CMLib.time().date2SecondsString(System.currentTimeMillis()));
+		sstr="Date: " + CMLib.time().date2SecondsString(System.currentTimeMillis());
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
-		send.print("From: " + froaddress);
+		sstr="From: " + froaddress;
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
-		send.print("Subject: " + subject);
+		sstr="Subject: " + subject;
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
-		send.print("Sender: " + froaddress);
+		sstr="Sender: " + froaddress;
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
-		send.print("Reply-To: " + reply_address);
+		sstr="Reply-To: " + reply_address;
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
-		send.print("To: " + mockto_address);
+		sstr="To: " + mockto_address;
 		send.print(EOL);
 
 		// Create Date - we'll cheat by assuming that local clock is right
 
-		send.print("Date: " + CMLib.time().smtpDateFormat(System.currentTimeMillis()));
+		sstr="Date: " + CMLib.time().smtpDateFormat(System.currentTimeMillis());
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
 		send.flush();
 
 		// Warn the world that we are on the loose - with the comments header:
-//		send.print("Comment: Unauthenticated sender");
-//		send.print(EOL);
-//		send.print("X-Mailer: JNet SMTP");
-//		send.print(EOL);
+		//		send.print("Comment: Unauthenticated sender");
+		//		send.print(EOL);
+		//		send.print("X-Mailer: JNet SMTP");
+		//		send.print(EOL);
 
 
 		// Now send the message proper
@@ -382,29 +427,37 @@
 		{
 			if((message.indexOf("<HTML>")>=0)&&(message.indexOf("</HTML>")>=0))
 		    {
-//				String BoundryString="---"+Math.random()+"_"+Math.random();
-//				send.print("Content-Type: multipart/mixed; boundry="+BoundryString);
-//				send.print(EOL);
-//				send.print(BoundryString);
-//				send.print(EOL);
-				send.print("Content-Type: text/html");
+				//String BoundryString="---"+Math.random()+"_"+Math.random();
+				//send.print("Content-Type: multipart/mixed; boundry="+BoundryString);
+				//send.print(EOL);
+				//send.print(BoundryString);
+				//send.print(EOL);
+				sstr="Content-Type: text/html";
+		        if(debug) Log.debugOut("SMTPclient",sstr);
+				send.print(sstr);
 				send.print(EOL);
 				
 			}
 			else
 			{
-				send.print("Content-Type: text/plain");
+				sstr="Content-Type: text/plain";
+		        if(debug) Log.debugOut("SMTPclient",sstr);
+				send.print(sstr);
 				send.print(EOL);
 			}
 			// Sending a blank line ends the header part.
 			send.print(EOL);
 			send.print(message);
+	        if(debug) Log.debugOut("SMTPclient",message);
 		}
 		send.print(EOL);
-		send.print(".");
+		sstr=".";
+        if(debug) Log.debugOut("SMTPclient",sstr);
+		send.print(sstr);
 		send.print(EOL);
 		send.flush();
 		rstr = reply.readLine();
+        if(debug) Log.debugOut("SMTPclient",rstr);
 		if (!rstr.startsWith("250")) throw new ProtocolException(rstr);
     }
 
@@ -483,4 +536,61 @@
         super.finalize();
     }
 
+	private class SMTPHostAuth
+	{
+		public SMTPHostAuth(String unparsedServerInfo)
+		{
+			Vector info=CMParms.parseCommas(unparsedServerInfo,false);
+			if(info.size()==0) return;
+			host = (String)info.remove(0);
+			if((info.size()==0)||(host.length()==0)) return;
+			String s=(String)info.elementAt(0);
+			if(s.equalsIgnoreCase("plain")||s.equalsIgnoreCase("login"))
+				authType=((String)info.remove(0)).toUpperCase().trim();
+			else
+				authType="PLAIN";
+			if(info.size()==0){ authType=""; return;}
+			login=(String)info.remove(0);
+			if(info.size()==0) return;
+			password=(String)info.remove(0);
+		}
+		private String host="";
+		private String authType="";
+		private String login="";
+		private String password="";
+		public boolean useRelay() {return host.trim().length()>0;}
+		public String getHost(){ return host;}
+		public String getAuthType(){ return authType;}
+		
+		public String getPlainLogin() 
+		{
+			byte[] buffer = new byte[2 + login.length() + password.length()];
+			int bufDex=0;
+			buffer[bufDex++]=0;
+			for(int i=0;i<login.length();i++)
+				buffer[bufDex++]=(byte)login.charAt(i);
+			buffer[bufDex++]=0;
+			for(int i=0;i<password.length();i++)
+				buffer[bufDex++]=(byte)password.charAt(i);
+			return B64Encoder.B64encodeBytes(buffer);
+		}
+		
+		public String getLogin() 
+		{
+			byte[] buffer = new byte[login.length()];
+			int bufDex=0;
+			for(int i=0;i<login.length();i++)
+				buffer[bufDex++]=(byte)login.charAt(i);
+			return B64Encoder.B64encodeBytes(buffer);
+		}
+		
+		public String getPassword() 
+		{
+			byte[] buffer = new byte[password.length()];
+			int bufDex=0;
+			for(int i=0;i<password.length();i++)
+				buffer[bufDex++]=(byte)password.charAt(i);
+			return B64Encoder.B64encodeBytes(buffer);
+		}
+	}
 }
Index: planet_ink/coffee_mud/Libraries/CommonMsgs.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CommonMsgs.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CommonMsgs.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.io.IOException;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -726,7 +726,7 @@
             buf.append("You don't see anything special about "+item.name());
         else
             buf.append(item.description());
-        if(msg.targetMinor()==CMMsg.TYP_EXAMINE)
+        if((msg.targetMinor()==CMMsg.TYP_EXAMINE)&&(!item.ID().endsWith("Wallpaper")))
             buf.append(examineItemString(mob,item));
         if(item instanceof Container)
         {
Index: planet_ink/coffee_mud/Libraries/CMLister.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMLister.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMLister.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/CMAble.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMAble.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMAble.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -118,12 +118,17 @@
 		}
 	}
 
-	public Enumeration getClassAbles(String ID)
+	public Enumeration getClassAbles(String ID, boolean addAll)
 	{
 		if(!completeAbleMap.containsKey(ID))
 			completeAbleMap.put(ID,new Hashtable());
 		Hashtable ableMap=(Hashtable)completeAbleMap.get(ID);
-		return ableMap.elements();
+		Hashtable allAbleMap=(Hashtable)completeAbleMap.get("All");
+		if((!addAll)||(allAbleMap==null)) return DVector.s_enum(ableMap, false);
+		Vector V=new Vector();
+		V.addAll(ableMap.values());
+		V.addAll(allAbleMap.values());
+		return V.elements();
 	}
 	
 	public void addCharAbilityMapping(String ID,
@@ -547,6 +552,7 @@
                 CharClass C=CMClass.getCharClass(ID);
                 if((C!=null)&&(C.getLevelCap()>=0))
                     return qualLevel>C.getLevelCap()?-1:qualLevel;
+                return qualLevel;
             }
 		}
 		return -1;
Index: planet_ink/coffee_mud/Libraries/MUDLaw.java
===================================================================
--- planet_ink/coffee_mud/Libraries/MUDLaw.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/MUDLaw.java	(revision 2574)
@@ -21,7 +21,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/XMLManager.java
===================================================================
--- planet_ink/coffee_mud/Libraries/XMLManager.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/XMLManager.java	(revision 2574)
@@ -18,7 +18,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.XMLLibrary.XMLpiece;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -337,7 +337,7 @@
 		return H;
 	}
 
-	public String getValFromPieces(Vector V, String tag)
+	public String getValFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		XMLpiece x=getPieceFromPieces(V,tag);
 		if((x!=null)&&(x.value!=null))
@@ -345,7 +345,7 @@
 		return "";
 	}
 
-	public Vector getContentsFromPieces(Vector V, String tag)
+	public Vector getContentsFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		XMLpiece x=getPieceFromPieces(V,tag);
 		if((x!=null)&&(x.contents!=null))
@@ -353,14 +353,14 @@
 		return new Vector();
 	}
 
-	public Vector getRealContentsFromPieces(Vector V, String tag)
+	public Vector<XMLpiece> getRealContentsFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		XMLpiece x=getPieceFromPieces(V,tag);
 		if(x!=null)	return x.contents;
 		return null;
 	}
 
-	public XMLpiece getPieceFromPieces(Vector V, String tag)
+	public XMLpiece getPieceFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		if(V==null) return null;
 		for(int v=0;v<V.size();v++)
@@ -369,7 +369,7 @@
 		return null;
 	}
 
-	public boolean getBoolFromPieces(Vector V, String tag)
+	public boolean getBoolFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		String val=getValFromPieces(V,tag);
 		if((val==null)||(val.length()==0))
@@ -379,22 +379,22 @@
 		return false;
 	}
 
-	public int getIntFromPieces(Vector V, String tag)
+	public int getIntFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		return s_int(getValFromPieces(V,tag));
 	}
 
-	public short getShortFromPieces(Vector V, String tag)
+	public short getShortFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		return s_short(getValFromPieces(V,tag));
 	}
 
-	public long getLongFromPieces(Vector V, String tag)
+	public long getLongFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		return s_long(getValFromPieces(V,tag));
 	}
 
-	public double getDoubleFromPieces(Vector V, String tag)
+	public double getDoubleFromPieces(Vector<XMLpiece> V, String tag)
 	{
 		return s_double(getValFromPieces(V,tag));
 	}
@@ -489,14 +489,14 @@
 	}
 
 
-	public Vector parseAllXML(String buf)
+	public Vector<XMLpiece> parseAllXML(String buf)
 	{  
         return parseAllXML(new StringBuffer(buf));
     }
 
-	public Vector parseAllXML(StringBuffer buf)
+	public Vector<XMLpiece> parseAllXML(StringBuffer buf)
 	{
-		Vector V=new Vector();
+		Vector<XMLpiece> V=new Vector();
 		int end=-1;
 		XMLpiece next=nextXML(buf,null,end+1);
 		while(next!=null)
@@ -543,14 +543,14 @@
 		return false;
 	}
 
-	public String getParmValue(Hashtable parmSet, String Tag)
+	public String getParmValue(Hashtable<String,String> parmSet, String Tag)
 	{
         if((parmSet != null)&&(Tag != null))
             return (String)parmSet.get(Tag.toUpperCase().trim());
         return null;
 	}
 
-	public String getXMLList(Vector V)
+	public String getXMLList(Vector<?> V)
     {
         StringBuffer str=new StringBuffer("");
         String s=null;
@@ -565,10 +565,10 @@
         return str.toString();
     }
     
-    public Vector parseXMLList(String numberedList)
+    public Vector<String> parseXMLList(String numberedList)
     {
-        Vector xml=parseAllXML(numberedList);
-        Vector V=new Vector();
+        Vector<XMLpiece> xml=parseAllXML(numberedList);
+        Vector<String> V=new Vector<String>();
         for(int v=0;v<xml.size();v++)
             V.addElement(this.restoreAngleBrackets(((XMLLibrary.XMLpiece)xml.elementAt(v)).value));
         return V;
Index: planet_ink/coffee_mud/Libraries/AutoTitles.java
===================================================================
--- planet_ink/coffee_mud/Libraries/AutoTitles.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/AutoTitles.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -93,30 +93,46 @@
         String title=null;
         Vector mask=null;
         int pdex=0;
-        Vector PT=P.getTitles();
+        Vector ptV=P.getTitles();
         boolean somethingDone=false;
-        for(int t=0;t<autoTitles.size();t++)
+        synchronized(ptV)
         {
-            mask=(Vector)autoTitles.elementAt(t,3);
-            title=(String)autoTitles.elementAt(t,1);
-            pdex=PT.indexOf(title);
-            if(CMLib.masking().maskCheck(mask,mob,true))
-            {
-                if(pdex<0)
-                {
-                    if(PT.size()>0)
-                        PT.insertElementAt(title,0);
-                    else
-                        PT.addElement(title);
-                    somethingDone=true;
-                }
-            }
-            else
-            if(pdex>=0)
-            {
-                somethingDone=true;
-                PT.removeElementAt(pdex);
-            }
+	        for(int t=0;t<autoTitles.size();t++)
+	        {
+	            mask=(Vector)autoTitles.elementAt(t,3);
+	            title=(String)autoTitles.elementAt(t,1);
+	            pdex=ptV.indexOf(title);
+	            if(pdex<0)
+	            {
+	            	String fixedTitle = CMStrings.removeColors(title).replace('\'', '`');
+	                for(int p=ptV.size()-1;p>=0;p--)
+	                {
+	                	try {
+	    	            	String tit=CMStrings.removeColors((String)ptV.elementAt(p)).replace('\'', '`');
+	    	            	if(tit.equalsIgnoreCase(fixedTitle))
+	    	            	{ pdex=p; break;}
+	                	}catch(java.lang.IndexOutOfBoundsException ioe){}
+	                }
+	            }
+	            
+	            if(CMLib.masking().maskCheck(mask,mob,true))
+	            {
+	                if(pdex<0)
+	                {
+	                    if(ptV.size()>0)
+	                    	ptV.insertElementAt(title,0);
+	                    else
+	                    	ptV.addElement(title);
+	                    somethingDone=true;
+	                }
+	            }
+	            else
+	            if(pdex>=0)
+	            {
+	                somethingDone=true;
+	                ptV.removeElementAt(pdex);
+	            }
+	        }
         }
         return somethingDone;
     }
@@ -124,14 +140,34 @@
     public void dispossesTitle(String title)
     {
         Vector list=CMLib.database().getUserList();
+    	String fixedTitle = CMStrings.removeColors(title).replace('\'', '`');
         for(int v=0;v<list.size();v++)
         {
             MOB M=CMLib.players().getLoadPlayer((String)list.elementAt(v));
-            if((M.playerStats()!=null)&&(M.playerStats().getTitles().contains(title)))
+            if(M.playerStats()!=null)
             {
-                M.playerStats().getTitles().remove(title);
-                if(!CMLib.flags().isInTheGame(M,true))
-                    CMLib.database().DBUpdatePlayerStatsOnly(M);
+            	Vector ptV=M.playerStats().getTitles();
+            	synchronized(ptV)
+            	{
+	                int pdex=ptV.indexOf(title);
+	                if(pdex<0)
+	                {
+	                    for(int p=ptV.size()-1;p>=0;p--)
+	                    {
+	                    	try {
+	        	            	String tit=CMStrings.removeColors((String)ptV.elementAt(p)).replace('\'', '`');
+	        	            	if(tit.equalsIgnoreCase(fixedTitle))
+	        	            	{ pdex=p; break;}
+	                    	}catch(java.lang.IndexOutOfBoundsException ioe){}
+	                    }
+	                }
+	                if(pdex>=0)
+	                {
+		                ptV.removeElementAt(pdex);
+		                if(!CMLib.flags().isInTheGame(M,true))
+		                    CMLib.database().DBUpdatePlayerStatsOnly(M);
+	                }
+	            }
             }
         }
     }
Index: planet_ink/coffee_mud/Libraries/Socials.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Socials.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Socials.java	(revision 2574)
@@ -22,7 +22,7 @@
 
 // requires nothing to load
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/CoffeeFilter.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CoffeeFilter.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CoffeeFilter.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -278,6 +278,7 @@
 		int loop=0;
 		int lastSpace=0;
 		int firstAlpha=-1;
+		int amperStop = -1;
 
 		while(buf.length()>loop)
 		{
@@ -356,6 +357,9 @@
 				    }
 				    break;
 				case '&':
+					if(loop < amperStop)
+						break;
+					else
 				    if((S!=null)&&(S.clientTelnetMode(Session.TELNET_MXP)))
 				    {
 						if((!buf.substring(loop,loop+3).equalsIgnoreCase("lt;"))
@@ -815,6 +819,7 @@
 			&&(buf.charAt(loop)!=13)
 			&&(buf.charAt(loop)!=10))
 			{
+				amperStop=loop;
 				if(buf.charAt(lastSp+1)==' ')
 				{
 					buf.setCharAt(lastSp,(char)13);
Index: planet_ink/coffee_mud/Libraries/CMColor.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMColor.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMColor.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/DirtyLanguage.java
===================================================================
--- planet_ink/coffee_mud/Libraries/DirtyLanguage.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/DirtyLanguage.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.regex.Pattern;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/CMGenEditor.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMGenEditor.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMGenEditor.java	(revision 2574)
@@ -22,7 +22,7 @@
 import java.util.regex.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -415,12 +415,17 @@
         if((!CMLib.flags().isCataloged(E))
         ||((!(E instanceof MOB))&&(!(E instanceof Item)))
         ||(mob.session()==null))
+        {
+        	if(E instanceof MOB)
+                E.setMiscText(E.text());
             return;
+        }
 
         StringBuffer diffs=CMLib.catalog().checkCatalogIntegrity(E);
         if(diffs!=null)
         {
-        	Environmental cataE=(Environmental)CMLib.catalog().getCatalogObj(E).copyOf();
+        	Environmental origCataE = CMLib.catalog().getCatalogObj(E);
+        	Environmental cataE=(Environmental)origCataE.copyOf();
         	CMLib.catalog().changeCatalogUsage(cataE,true);
         	StringBuffer detailedDiff=new StringBuffer("");
         	Vector V=CMParms.parseCommas(diffs.toString(),true);
@@ -433,14 +438,34 @@
         	}
         	cataE.destroy();
         	mob.tell("You have modified the following fields: \n\r"+detailedDiff.toString());
-	        if(mob.session().confirm("This object is cataloged.  Enter Y to update the cataloged version, or N to detach this object from the catalog (Y/n)?","Y"))
+        	String message = "This object is cataloged.  Enter U to update the cataloged version, or D to detach this object from the catalog, or C to Cancel (u/d/C)?";
+        	String choice = mob.session().choose(message, "UDC", "C");
+        	if(choice.equalsIgnoreCase("C"))
+        	{
+        		E.setMiscText(origCataE.text());
+        		E.recoverEnvStats();
+        		if(E instanceof MOB)
+        		{
+        			((MOB)E).recoverCharStats();
+        			((MOB)E).recoverMaxState();
+        		}
+        	}
+        	else
+        	if(choice.equalsIgnoreCase("U"))
 	        {
 	        	CMLib.catalog().updateCatalog(E);
 	            mob.tell("Catalog update complete.");
 	            Log.infoOut("BaseGenerics",mob.Name()+" updated catalog "+((E instanceof MOB)?"MOB":"ITEM")+" "+E.Name());
+	            E.setMiscText(E.text());
 	        }
 	        else
+        	if(choice.equalsIgnoreCase("D"))
+        	{
 	            CMLib.catalog().changeCatalogUsage(E,false);
+	            E.setMiscText(E.text());
+        	}
+        	else
+        		mob.tell("That wasn't a choice?!");
         }
     }
 
@@ -6137,14 +6162,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void modifyGenFood(MOB mob, Food me)
@@ -6187,14 +6209,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void genScripts(MOB mob, MOB E, int showNumber, int showFlag)
@@ -6277,14 +6296,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void modifyGenWallpaper(MOB mob, Item me)
@@ -6313,14 +6329,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void modifyGenMap(MOB mob, com.planet_ink.coffee_mud.Items.interfaces.Map me)
@@ -6360,14 +6373,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void modifyGenContainer(MOB mob, Container me)
@@ -6430,14 +6440,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void modifyGenWeapon(MOB mob, Weapon me)
@@ -6495,14 +6502,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     protected void modifyGenArmor(MOB mob, Armor me)
@@ -6553,14 +6557,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
 
@@ -6602,14 +6603,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
 
@@ -6651,14 +6649,11 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverEnvStats();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
             }
         }
+        me.recoverEnvStats();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
 
@@ -6742,19 +6737,14 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverCharStats();
-                me.recoverMaxState();
-                me.recoverEnvStats();
-                me.resetToMaxState();
-
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
-                me.setMiscText(me.text());
             }
         }
+        me.recoverCharStats();
+        me.recoverMaxState();
+        me.recoverEnvStats();
+        me.resetToMaxState();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
 
     public void modifyPlayer(MOB mob, MOB me) throws IOException
@@ -6836,21 +6826,21 @@
             {
                 showFlag=-1;
                 ok=true;
-                me.recoverCharStats();
-                me.recoverMaxState();
-                me.recoverEnvStats();
-                me.resetToMaxState();
-                if(!oldName.equals(me.Name()))
-                {
-                    MOB fakeMe=(MOB)me.copyOf();
-                    fakeMe.setName(oldName);
-                    CMLib.database().DBDeleteMOB(fakeMe);
-                    CMLib.database().DBCreateCharacter(me);
-                }
-                CMLib.database().DBUpdatePlayer(me);
-                CMLib.database().DBUpdateFollowers(me);
             }
         }
+        me.recoverCharStats();
+        me.recoverMaxState();
+        me.recoverEnvStats();
+        me.resetToMaxState();
+        if(!oldName.equals(me.Name()))
+        {
+            MOB fakeMe=(MOB)me.copyOf();
+            fakeMe.setName(oldName);
+            CMLib.database().DBDeleteMOB(fakeMe);
+            CMLib.database().DBCreateCharacter(me);
+        }
+        CMLib.database().DBUpdatePlayer(me);
+        CMLib.database().DBUpdateFollowers(me);
     }
 
 
@@ -7079,15 +7069,15 @@
             {
                 showFlag=-1;
                 ok=true;
-                if(!oldName.equals(C.ID()))
-                {
-                    //cycle through everything changing the name
-                    CMLib.database().DBDeleteClan(C);
-                    CMLib.database().DBCreateClan(C);
-                }
-                C.update();
             }
         }
+        if(!oldName.equals(C.ID()))
+        {
+            //cycle through everything changing the name
+            CMLib.database().DBDeleteClan(C);
+            CMLib.database().DBCreateClan(C);
+        }
+        C.update();
     }
 
     protected void modifyGenShopkeeper(MOB mob, ShopKeeper me)
@@ -7196,18 +7186,14 @@
             {
                 showFlag=-1;
                 ok=true;
-                mme.recoverCharStats();
-                mme.recoverMaxState();
-                me.recoverEnvStats();
-                mme.resetToMaxState();
-                if(me.text().length()>=maxLength)
-                {
-                    mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.  Please modify!");
-                    ok=false;
-                }
-                me.setMiscText(me.text());
             }
         }
+        mme.recoverCharStats();
+        mme.recoverMaxState();
+        me.recoverEnvStats();
+        mme.resetToMaxState();
+        if(me.text().length()>=maxLength)
+            mob.tell("\n\rThe data entered exceeds the string limit of "+maxLength+" characters.");
     }
     
     public void modifyRoom(MOB mob, Room R) throws IOException
Index: planet_ink/coffee_mud/Libraries/Clans.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Clans.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Clans.java	(revision 2574)
@@ -225,11 +225,15 @@
 		if(!CMSecurity.isDisabled("CLANTICKS"))
 			CMLib.threads().startTickDown(C,Tickable.TICKID_CLAN,CMProps.getIntVar(CMProps.SYSTEMI_TICKSPERMUDDAY));
 		all.put(C.clanID().toUpperCase(),C);
+		CMLib.map().sendGlobalMessage(CMLib.map().deity(), CMMsg.TYP_CLANEVENT, 
+				CMClass.getMsg(CMLib.map().deity(), CMMsg.MSG_CLANEVENT, "+"+C.name()));
 	}
 	public void removeClan(Clan C)
 	{
 		CMLib.threads().deleteTick(C,Tickable.TICKID_CLAN);
 		all.remove(C.clanID().toUpperCase());
+		CMLib.map().sendGlobalMessage(CMLib.map().deity(), CMMsg.TYP_CLANEVENT, 
+				CMClass.getMsg(CMLib.map().deity(), CMMsg.MSG_CLANEVENT, "-"+C.name()));
 	}
 
 	public void tickAllClans()
Index: planet_ink/coffee_mud/Libraries/TimsLibrary.java
===================================================================
--- planet_ink/coffee_mud/Libraries/TimsLibrary.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/TimsLibrary.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -66,7 +66,7 @@
 		double curDamage=(double)(savedI.baseEnvStats().damage()+otherDam);
 		if(I instanceof Weapon)
 		{
-			double weight=(double)I.baseEnvStats().weight();
+			double weight=(double)8;
 			if(weight<1.0) weight=1.0;
 			double range=(double)savedI.maxRange();
 			level=(int)Math.round(Math.floor((2.0*curDamage/(2.0*(I.rawLogicalAnd()?2.0:1.0)+1.0)+(curAttack-weight)/5.0+range)*(range/weight+2.0)))+1;
@@ -168,8 +168,8 @@
 			{
 				int stat=CMParms.getParmPlus(newText,CharStats.STAT_DESCS[i].substring(0,3).toLowerCase());
 				int max=CMParms.getParmPlus(newText,("max"+(CharStats.STAT_DESCS[i].substring(0,3).toLowerCase())));
-				level+=(stat*5);
-				level+=(max*5);
+				level+=(stat*10);
+				level+=(max*15);
 			}
 
 			int hit=CMParms.getParmPlus(newText,"hit");
@@ -216,17 +216,64 @@
 		return RET;
 	}
 
-	public boolean itemFix(Item I)
+	private void reportChanges(Item oldI, Item newI, StringBuffer changes,int OTLVL, int TLVL)
 	{
+		if((changes == null)||(oldI==null)) return;
+		Ability[] RET=getTimsAdjResCast(newI,new int[1]);
+		Ability ADJ=RET[0];
+		Ability RES=RET[1];
+		Ability CAST=RET[2];
+		int[] LVLS=getItemLevels(newI,ADJ,RES,CAST);
+		int TLVL2=totalLevels(LVLS);
+		
+		changes.append(newI.name()+":"+newI.baseEnvStats().level()+"("+OTLVL+")=>"+TLVL2+"("+TLVL+"), ");
+        for(int i=0;i<oldI.getStatCodes().length;i++)
+            if((!oldI.getStat(oldI.getStatCodes()[i]).equals(newI.getStat(newI.getStatCodes()[i]))))
+            	changes.append(oldI.getStatCodes()[i]+"("+oldI.getStat(newI.getStatCodes()[i])+"->"+newI.getStat(newI.getStatCodes()[i])+"), ");
+        changes.append("\n\r");
+	}
+	
+	public boolean itemFix(Item I, int lvlOr0, StringBuffer changes)
+	{
+		Item oldI = (changes!=null)?(Item)I.copyOf():null;
+		
+		if((I instanceof SpellHolder)
+		||((I instanceof Wand)&&(lvlOr0<=0)))
+		{
+			Vector spells=new Vector();
+			if(I instanceof SpellHolder)
+				spells=((SpellHolder)I).getSpells();
+			else
+			if((I instanceof Wand)&&(((Wand)I).getSpell()!=null))
+				spells.add(((Wand)I).getSpell());
+			if(spells.size()==0) return false;
+			int levels=0;
+			spells=(Vector<Ability>)spells.clone();
+			for(Enumeration<Ability> e=spells.elements();e.hasMoreElements();)
+				levels+=CMLib.ableMapper().lowestQualifyingLevel(e.nextElement().ID());
+			int level=(int)Math.round(CMath.div(levels, spells.size()));
+			if(level==I.baseEnvStats().level()) return false;
+			I.baseEnvStats().setLevel(level);
+			I.envStats().setLevel(level);
+			if(CMLib.flags().isCataloged(I))
+				CMLib.catalog().updateCatalog(I);
+			reportChanges(oldI,I,changes,level,level);
+			return true;
+		}
+		else
 		if((I instanceof Weapon)||(I instanceof Armor))
 		{
-			int lvl=I.baseEnvStats().level();
+			int lvl=lvlOr0;
+			if(lvl <=0) lvl=I.baseEnvStats().level();
+			I.baseEnvStats().setLevel(lvl);
+			I.envStats().setLevel(lvl);
 			Ability[] RET=getTimsAdjResCast(I,new int[1]);
 			Ability ADJ=RET[0];
 			Ability RES=RET[1];
 			Ability CAST=RET[2];
 			int[] LVLS=getItemLevels(I,ADJ,RES,CAST);
 			int TLVL=totalLevels(LVLS);
+			int OTLVL=TLVL;
 			if(lvl<0)
 			{
 				if(TLVL<=0)
@@ -236,75 +283,88 @@
 				I.baseEnvStats().setLevel(lvl);
 				I.recoverEnvStats();
 				fixRejuvItem(I);
+				if(CMLib.flags().isCataloged(I))
+					CMLib.catalog().updateCatalog(I);
+				reportChanges(oldI,I,changes,OTLVL,TLVL);
 				return true;
 			}
-			if(TLVL<=0) return fixRejuvItem(I);
-			if(TLVL<=(lvl+25)) return fixRejuvItem(I);
-			int FTLVL=TLVL;
-			Vector illegalNums=new Vector();
-			Log.sysOut("Reset",I.name()+"("+I.baseEnvStats().level()+") "+TLVL+", "+I.baseEnvStats().armor()+"/"+I.baseEnvStats().attackAdjustment()+"/"+I.baseEnvStats().damage()+"/"+((ADJ!=null)?ADJ.text():"null"));
-			while((TLVL>(lvl+15))&&(illegalNums.size()<4))
+			if((TLVL>0)&&(TLVL>Math.round(CMath.mul(lvl,1.1))))
 			{
-				int highIndex=-1;
-				for(int i=0;i<LVLS.length;i++)
-					if(((highIndex<0)||(LVLS[i]>LVLS[highIndex]))
-					&&(!illegalNums.contains(new Integer(i))))
-						highIndex=i;
-				if(highIndex<0) break;
-				switch(highIndex)
+				//int FTLVL=TLVL;
+				Vector illegalNums=new Vector();
+				//Log.sysOut("Reset",I.name()+"("+I.baseEnvStats().level()+") "+TLVL+", "+I.baseEnvStats().armor()+"/"+I.baseEnvStats().attackAdjustment()+"/"+I.baseEnvStats().damage()+"/"+((ADJ!=null)?ADJ.text():"null"));
+				while((TLVL>Math.round(CMath.mul(lvl,1.1)))&&(illegalNums.size()<4))
 				{
-				case 0:
-					if(I instanceof Weapon)
+					int highIndex=-1;
+					for(int i=0;i<LVLS.length;i++)
+						if(((highIndex<0)||(LVLS[i]>LVLS[highIndex]))
+						&&(!illegalNums.contains(new Integer(i))))
+							highIndex=i;
+					if(highIndex<0) break;
+					switch(highIndex)
 					{
-						String s=(ADJ!=null)?ADJ.text():"";
-						int oldAtt=I.baseEnvStats().attackAdjustment();
-						int oldDam=I.baseEnvStats().damage();
-						toneDownWeapon((Weapon)I,ADJ);
-						if((I.baseEnvStats().attackAdjustment()==oldAtt)
-						&&(I.baseEnvStats().damage()==oldDam)
-						&&((ADJ==null)||(ADJ.text().equals(s))))
-							illegalNums.addElement(new Integer(0));
-					}
-					else
-					{
-						String s=(ADJ!=null)?ADJ.text():"";
-						int oldArm=I.baseEnvStats().armor();
-						toneDownArmor((Armor)I,ADJ);
-						if((I.baseEnvStats().armor()==oldArm)
-						&&((ADJ==null)||(ADJ.text().equals(s))))
-							illegalNums.addElement(new Integer(0));
-					}
-					break;
-				case 1:
-					if(I.baseEnvStats().ability()>0)
-						I.baseEnvStats().setAbility(I.baseEnvStats().ability()-1);
-					else
-						illegalNums.addElement(new Integer(1));
-					break;
-				case 2:
-					illegalNums.addElement(new Integer(2));
-					// nothing I can do!;
-					break;
-				case 3:
-					if(ADJ==null)
-						illegalNums.addElement(new Integer(3));
-					else
-					{
-						String oldTxt=ADJ.text();
-						toneDownAdjuster(I,ADJ);
-						if(ADJ.text().equals(oldTxt))
+					case 0:
+						if(I instanceof Weapon)
+						{
+							String s=(ADJ!=null)?ADJ.text():"";
+							int oldAtt=I.baseEnvStats().attackAdjustment();
+							int oldDam=I.baseEnvStats().damage();
+							toneDownWeapon((Weapon)I,ADJ);
+							if((I.baseEnvStats().attackAdjustment()==oldAtt)
+							&&(I.baseEnvStats().damage()==oldDam)
+							&&((ADJ==null)||(ADJ.text().equals(s))))
+								illegalNums.addElement(new Integer(0));
+						}
+						else
+						{
+							String s=(ADJ!=null)?ADJ.text():"";
+							int oldArm=I.baseEnvStats().armor();
+							toneDownArmor((Armor)I,ADJ);
+							if((I.baseEnvStats().armor()==oldArm)
+							&&((ADJ==null)||(ADJ.text().equals(s))))
+								illegalNums.addElement(new Integer(0));
+						}
+						break;
+					case 1:
+						if(I.baseEnvStats().ability()>0)
+							I.baseEnvStats().setAbility(I.baseEnvStats().ability()-1);
+						else
+							illegalNums.addElement(new Integer(1));
+						break;
+					case 2:
+						illegalNums.addElement(new Integer(2));
+						// nothing I can do!;
+						break;
+					case 3:
+						if(ADJ==null)
 							illegalNums.addElement(new Integer(3));
+						else
+						{
+							String oldTxt=ADJ.text();
+							toneDownAdjuster(I,ADJ);
+							if(ADJ.text().equals(oldTxt))
+								illegalNums.addElement(new Integer(3));
+						}
+						break;
 					}
-					break;
+					LVLS=getItemLevels(I,ADJ,RES,CAST);
+					TLVL=totalLevels(LVLS);
 				}
-				LVLS=getItemLevels(I,ADJ,RES,CAST);
-				TLVL=totalLevels(LVLS);
+				//Log.sysOut("Reset",I.name()+"("+I.baseEnvStats().level()+") "+FTLVL+"->"+TLVL+", "+I.baseEnvStats().armor()+"/"+I.baseEnvStats().attackAdjustment()+"/"+I.baseEnvStats().damage()+"/"+((ADJ!=null)?ADJ.text():"null"));
+				fixRejuvItem(I);
+				if(CMLib.flags().isCataloged(I))
+					CMLib.catalog().updateCatalog(I);
+				reportChanges(oldI,I,changes,OTLVL,TLVL);
+				return true;
 			}
-			Log.sysOut("Reset",I.name()+"("+I.baseEnvStats().level()+") "+FTLVL+"->"+TLVL+", "+I.baseEnvStats().armor()+"/"+I.baseEnvStats().attackAdjustment()+"/"+I.baseEnvStats().damage()+"/"+((ADJ!=null)?ADJ.text():"null"));
-			fixRejuvItem(I);
+		}
+		if(fixRejuvItem(I))
+		{
+			if(CMLib.flags().isCataloged(I))
+				CMLib.catalog().updateCatalog(I);
 			return true;
 		}
-		return fixRejuvItem(I);
+		return false;
 	}
 
     public boolean toneDownValue(Item I)
@@ -320,8 +380,7 @@
         else
         if(!(I instanceof Armor))
             return false;
-        Hashtable H=timsItemAdjustments(I,I.envStats().level(),I.material(),
-                                        I.baseEnvStats().weight(),hands,weaponClass,I.maxRange(),I.rawProperLocationBitmap());
+        Hashtable H=timsItemAdjustments(I,I.envStats().level(),I.material(),hands,weaponClass,I.maxRange(),I.rawProperLocationBitmap());
         int newValue=CMath.s_int((String)H.get("VALUE"));
         if((I.baseGoldValue()>newValue)&&(newValue>0))
         {
@@ -340,8 +399,7 @@
 			hands=I.rawLogicalAnd()?2:1;
 			weaponClass=((Weapon)I).weaponClassification();
 		}
-		Hashtable H=timsItemAdjustments(I,I.envStats().level(),I.material(),
-										I.baseEnvStats().weight(),hands,weaponClass,I.maxRange(),I.rawProperLocationBitmap());
+		Hashtable H=timsItemAdjustments(I,I.envStats().level(),I.material(),hands,weaponClass,I.maxRange(),I.rawProperLocationBitmap());
 		if(I instanceof Weapon)
 		{
 			I.baseEnvStats().setDamage(CMath.s_int((String)H.get("DAMAGE")));
@@ -362,7 +420,6 @@
 	public Hashtable timsItemAdjustments(Item I,
 										 int level,
 										 int material,
-										 int weight,
 										 int hands,
 										 int wclass,
 										 int reach,
@@ -391,7 +448,7 @@
 			if(wclass==Weapon.CLASS_EDGED){ baseattack=10; basematerial=RawMaterial.MATERIAL_METAL;}
 			if(wclass==Weapon.CLASS_DAGGER){ baseattack=10; basematerial=RawMaterial.MATERIAL_METAL;}
 			if(wclass==Weapon.CLASS_SWORD){ basematerial=RawMaterial.MATERIAL_METAL;}
-			if(weight==0) weight=10;
+			int weight = 8;
 			if(basereach>maxreach) maxreach=basereach;
 			if(reach<basereach)
 			{
@@ -652,10 +709,13 @@
 			int a2=ADJ.text().toUpperCase().indexOf(" ",a+4);
 			if(a2<0) a2=ADJ.text().length();
 			int num=CMath.s_int(ADJ.text().substring(a+7,a2));
-			if(num>W.baseEnvStats().damage())
+			int newNum = (int)Math.round(CMath.mul(num,0.9));
+			if((newNum == num) && (newNum > 1))
+				newNum--;
+			if(newNum != 0)
 			{
 				fixdam=false;
-				ADJ.setMiscText(ADJ.text().substring(0,a+7)+(num/2)+ADJ.text().substring(a2));
+				ADJ.setMiscText(ADJ.text().substring(0,a+7)+newNum+ADJ.text().substring(a2));
 			}
 		}
 		if((ADJ!=null)&&(ADJ.text().toUpperCase().indexOf("ATTACK+")>=0))
@@ -664,16 +724,25 @@
 			int a2=ADJ.text().toUpperCase().indexOf(" ",a+4);
 			if(a2<0) a2=ADJ.text().length();
 			int num=CMath.s_int(ADJ.text().substring(a+7,a2));
-			if(num>W.baseEnvStats().attackAdjustment())
+			int newNum = (int)Math.round(CMath.mul(num,0.9));
+			if((newNum == num) && (newNum > 1))
+				newNum--;
+			if(newNum != 0)
 			{
 				fixatt=false;
-				ADJ.setMiscText(ADJ.text().substring(0,a+7)+(num/2)+ADJ.text().substring(a2));
+				ADJ.setMiscText(ADJ.text().substring(0,a+7)+newNum+ADJ.text().substring(a2));
 			}
 		}
-		if(fixdam&&(W.baseEnvStats().damage()>=2))
-			W.baseEnvStats().setDamage(W.baseEnvStats().damage()/2);
-		if(fixatt&&(W.baseEnvStats().attackAdjustment()>=2))
-			W.baseEnvStats().setAttackAdjustment(W.baseEnvStats().attackAdjustment()/2);
+		if(fixdam&&(W.baseEnvStats().damage()>=10))
+			W.baseEnvStats().setDamage((int)Math.round(CMath.mul(W.baseEnvStats().damage(),0.9)));
+		else
+		if(fixatt&&(W.baseEnvStats().damage()>1))
+			W.baseEnvStats().setDamage(W.baseEnvStats().damage()-1);
+		if(fixatt&&(W.baseEnvStats().attackAdjustment()>=10))
+			W.baseEnvStats().setAttackAdjustment((int)Math.round(CMath.mul(W.baseEnvStats().attackAdjustment(),0.9)));
+		else
+		if(fixatt&&(W.baseEnvStats().attackAdjustment()>1))
+			W.baseEnvStats().setAttackAdjustment(W.baseEnvStats().attackAdjustment()-1);
 		W.recoverEnvStats();
 	}
 	public void toneDownArmor(Armor A, Ability ADJ)
@@ -685,17 +754,21 @@
 			int a2=ADJ.text().toUpperCase().indexOf(" ",a+4);
 			if(a2<0) a2=ADJ.text().length();
 			int num=CMath.s_int(ADJ.text().substring(a+6,a2));
-			if(num>A.baseEnvStats().armor())
+			int newNum = (int)Math.round(CMath.mul(num,0.9));
+			if((newNum == num) && (newNum > 1))
+				newNum--;
+			if(newNum != 0)
 			{
 				fixit=false;
-				ADJ.setMiscText(ADJ.text().substring(0,a+6)+(num/2)+ADJ.text().substring(a2));
+				ADJ.setMiscText(ADJ.text().substring(0,a+6)+newNum+ADJ.text().substring(a2));
 			}
 		}
-		if(fixit&&(A.baseEnvStats().armor()>=2))
-		{
-			A.baseEnvStats().setArmor(A.baseEnvStats().armor()/2);
-			A.recoverEnvStats();
-		}
+		if(fixit&&(A.baseEnvStats().armor()>=10))
+			A.baseEnvStats().setArmor((int)Math.round(CMath.mul(A.baseEnvStats().armor(),0.9)));
+		else
+		if(fixit&&(A.baseEnvStats().armor()>1))
+			A.baseEnvStats().setArmor(A.baseEnvStats().armor()-1);
+		A.recoverEnvStats();
 	}
 
 	public void toneDownAdjuster(Item I, Ability ADJ)
@@ -744,7 +817,13 @@
 						if(proceed)
 						{
 							if((num!=1)&&(num!=-1))
-								s=s.substring(0,plusminus+1)+(num/2)+s.substring(spaceafter);
+							{
+								int newNum = (int)Math.round(CMath.mul(num,0.9));
+								if((newNum == num) && (newNum > 1))
+									newNum--;
+								if(newNum != 0)
+									s=s.substring(0,plusminus+1)+newNum+s.substring(spaceafter);
+							}
 						}
 					}
 				}
@@ -798,7 +877,7 @@
 		double curDamage=(double)(I.baseEnvStats().damage()+otherDam);
 		if(I instanceof Weapon)
 		{
-			double weight=(double)(I.baseEnvStats().weight());
+			double weight=(double)8;
 			if(weight<1.0) weight=1.0;
 			double range=(double)(I.maxRange());
 			level=(int)Math.round(Math.floor((2.0*curDamage/(2.0*(I.rawLogicalAnd()?2.0:1.0)+1.0)+(curAttack-weight)/5.0+range)*(range/weight+2.0)))+1;
@@ -862,25 +941,25 @@
 			int att=CMParms.getParmPlus(newText,"att");
 			int dam=CMParms.getParmPlus(newText,"dam");
 			if(savedI instanceof Weapon)
-				level+=(arm*2);
+				level+=arm;
 			else
 			if(savedI instanceof Armor)
 			{
-				level+=(att/2);
+				level+=att;
 				level+=(dam*3);
 			}
 			level+=ab*5;
 			int dis=CMParms.getParmPlus(newText,"dis");
-			if(dis!=0) level+=5;
+			if(dis!=0) level+=10;
 			int sen=CMParms.getParmPlus(newText,"sen");
-			if(sen!=0) level+=5;
+			if(sen!=0) level+=10;
 			level+=(int)Math.round(5.0*CMParms.getParmDoublePlus(newText,"spe"));
 			for(int i=0;i<CharStats.NUM_BASE_STATS;i++)
 			{
 				int stat=CMParms.getParmPlus(newText,CharStats.STAT_DESCS[i].substring(0,3).toLowerCase());
 				int max=CMParms.getParmPlus(newText,("max"+(CharStats.STAT_DESCS[i].substring(0,3).toLowerCase())));
-				level+=(stat*5);
-				level+=(max*5);
+				level+=(stat*10);
+				level+=(max*15);
 			}
 
 			int hit=CMParms.getParmPlus(newText,"hit");
Index: planet_ink/coffee_mud/Libraries/MUDTracker.java
===================================================================
--- planet_ink/coffee_mud/Libraries/MUDTracker.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/MUDTracker.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -47,7 +47,7 @@
                                         Room destRoom,
                                         TrackingFlags flags,
                                         int maxRadius,
-                                        Vector radiant)
+                                        Vector<Room> radiant)
    {
         if((radiant==null)||(radiant.size()==0)){
         	radiant=new Vector();
@@ -122,7 +122,7 @@
 
 
 	public Vector findBastardTheBestWay(Room location,
-									    Vector destRooms,
+									    Vector<Room> destRooms,
 									    TrackingFlags flags,
 									    int maxRadius)
 	{
@@ -158,7 +158,7 @@
 	    return finalTrail;
 	}
 
-	public int trackNextDirectionFromHere(Vector theTrail,
+	public int trackNextDirectionFromHere(Vector<Room> theTrail,
 										  Room location,
 										  boolean openOnly)
 	{
@@ -191,7 +191,7 @@
 		return winningDirection;
 	}
 
-	public int radiatesFromDir(Room room, Vector rooms)
+	public int radiatesFromDir(Room room, Vector<Room> rooms)
 	{
 	    Room R=null;
 		for(int i=0;i<rooms.size();i++)
@@ -215,11 +215,11 @@
 		return V;
 	}
 	public void getRadiantRooms(Room room,
-							    Vector rooms,
+							    Vector<Room> rooms,
 							    TrackingFlags flags,
 							    Room radiateTo,
 							    int maxDepth,
-                                HashSet ignoreRooms)
+                                HashSet<Room> ignoreRooms)
 	{
 		int depth=0;
 		if(room==null) return;
@@ -312,7 +312,7 @@
                              boolean roomobject,
                              boolean sneakIfAble,
                              long[] status,
-                            Vector rooms)
+                             Vector<Room> rooms)
 	{
         if(status!=null)status[0]=Tickable.STATUS_MISC7+0;
 
@@ -682,7 +682,7 @@
 		return dir;
 	}
 
-	public Vector findAllTrails(Room from, Room to, Vector radiantTrail)
+	public Vector findAllTrails(Room from, Room to, Vector<Room> radiantTrail)
 	{
 		Vector finalSets=new Vector();
 		if((from==null)||(to==null)||(from==to)) return finalSets;
@@ -715,7 +715,7 @@
 		return finalSets;
 	}
 
-	public Vector findAllTrails(Room from, Vector tos, Vector radiantTrail)
+	public Vector findAllTrails(Room from, Vector<Room> tos, Vector<Room> radiantTrail)
 	{
 		Vector finalSets=new Vector();
 		if(from==null) return finalSets;
@@ -727,5 +727,164 @@
 		}
 		return finalSets;
 	}
+	
+	protected int getRoomDirection(Room R, Room toRoom, Vector<Room> ignore)
+	{
+		for(int d=Directions.NUM_DIRECTIONS()-1;d>=0;d--)
+			if((R.getRoomInDir(d)==toRoom)
+			&&(R!=toRoom)
+			&&(!ignore.contains(R)))
+				return d;
+		return -1;
+	}
+	
+	public String getTrailToDescription(Room R1, Vector<Room> set, String where, boolean areaNames, boolean confirm, int radius, HashSet<Room> ignoreRooms, int maxMins)
+	{
+		Room R2=CMLib.map().getRoom(where);
+		if(R2==null)
+			for(Enumeration a=CMLib.map().sortedAreas();a.hasMoreElements();)
+			{
+				Area A=(Area)a.nextElement();
+				if(A.name().equalsIgnoreCase(where))
+				{
+					if(set.size()==0)
+					{
+						int lowest=Integer.MAX_VALUE;
+						for(Enumeration r=A.getCompleteMap();r.hasMoreElements();)
+						{
+							Room R=(Room)r.nextElement();
+							int x=R.roomID().indexOf("#");
+							if((x>=0)&&(CMath.s_int(R.roomID().substring(x+1))<lowest))
+								lowest=CMath.s_int(R.roomID().substring(x+1));
+						}
+						if(lowest<Integer.MAX_VALUE)
+							R2=CMLib.map().getRoom(A.name()+"#"+lowest);
+					}
+					else
+					{
+						for(int i=0;i<set.size();i++)
+						{
+							Room R=(Room)set.elementAt(i);
+							if(R.getArea()==A)
+							{
+								R2=R;
+								break;
+							}
+						}
+					}
+					break;
+				}
+			}
+		if(R2==null) return "Unable to determine '"+where+"'.";
+		TrackingLibrary.TrackingFlags flags = new TrackingLibrary.TrackingFlags()
+											.add(TrackingLibrary.TrackingFlag.NOEMPTYGRIDS);
+		if(set.size()==0)
+			getRadiantRooms(R1,set,flags,R2,radius,ignoreRooms);
+		int foundAt=-1;
+		for(int i=0;i<set.size();i++)
+		{
+			Room R=(Room)set.elementAt(i);
+			if(R==R2){ foundAt=i; break;}
+		}
+		if(foundAt<0) return "You can't get to '"+R2.roomID()+"' from here.";
+		Room checkR=R2;
+		Vector trailV=new Vector();
+		trailV.addElement(R2);
+        HashSet areasDone=new HashSet();
+		boolean didSomething=false;
+		long startTime = System.currentTimeMillis();
+		while(checkR!=R1)
+		{
+			long waitTime = System.currentTimeMillis() - startTime;
+			if(waitTime > (1000 * 60 * (maxMins)))
+				break;
+			didSomething=false;
+			for(int r=0;r<foundAt;r++)
+			{
+				Room R=(Room)set.elementAt(r);
+				if(getRoomDirection(R,checkR,trailV)>=0)
+				{
+					trailV.addElement(R);
+                    if(!areasDone.contains(R.getArea()))
+                        areasDone.add(R.getArea());
+					foundAt=r;
+					checkR=R;
+					didSomething=true;
+					break;
+				}
+			}
+			if(!didSomething)
+				return "You can't get there from here.";
+		}
+		Vector theDirTrail=new Vector();
+		Vector empty=new Vector();
+		for(int s=trailV.size()-1;s>=1;s--)
+		{
+			Room R=(Room)trailV.elementAt(s);
+			Room RA=(Room)trailV.elementAt(s-1);
+			theDirTrail.addElement(Character.toString(Directions.getDirectionName(getRoomDirection(R,RA,empty)).charAt(0))+" ");
+		}
+		StringBuffer theTrail=new StringBuffer("");
+		if(confirm)	theTrail.append("\n\r"+CMStrings.padRight("Trail",30)+": ");
+		char lastDir='\0';
+		int lastNum=0;
+		while(theDirTrail.size()>0)
+		{
+			String s=(String)theDirTrail.elementAt(0);
+			if(lastNum==0)
+			{
+				lastDir=s.charAt(0);
+				lastNum=1;
+			}
+			else
+			if(s.charAt(0)==lastDir)
+				lastNum++;
+			else
+			{
+				if(lastNum==1)
+					theTrail.append(Character.toString(lastDir)+" ");
+				else
+					theTrail.append(Integer.toString(lastNum)+Character.toString(lastDir)+" ");
+				lastDir=s.charAt(0);
+				lastNum=1;
+			}
+			theDirTrail.removeElementAt(0);
+		}
+		if(lastNum==1)
+			theTrail.append(Character.toString(lastDir));
+		else
+		if(lastNum>0)
+			theTrail.append(Integer.toString(lastNum)+Character.toString(lastDir));
 
+		if((confirm)&&(trailV.size()>1))
+		{
+			for(int i=0;i<trailV.size();i++)
+			{
+				Room R=(Room)trailV.elementAt(i);
+				if(R.roomID().length()==0)
+				{
+					theTrail.append("*");
+					break;
+				}
+			}
+			Room R=(Room)trailV.elementAt(1);
+			theTrail.append("\n\r"+CMStrings.padRight("From",30)+": "+Directions.getDirectionName(getRoomDirection(R,R2,empty))+" <- "+R.roomID());
+			theTrail.append("\n\r"+CMStrings.padRight("Room",30)+": "+R.displayText()+"/"+R.description());
+			theTrail.append("\n\r\n\r");
+		}
+        if((areaNames)&&(areasDone.size()>0))
+        {
+            theTrail.append("\n\r"+CMStrings.padRight("Areas",30)+":");
+            for(Iterator i=areasDone.iterator();i.hasNext();)
+            {
+                Area A=(Area)i.next();
+                theTrail.append(" \""+A.name()+"\",");
+            }
+        }
+        if(theTrail.toString().trim().length()==0)
+        	return "You can't get there from here.";
+		return theTrail.toString();
+	}
+
+
 }
Index: planet_ink/coffee_mud/Libraries/CoffeeLevels.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CoffeeLevels.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CoffeeLevels.java	(revision 2574)
@@ -18,7 +18,7 @@
 
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -86,14 +86,15 @@
 		int maxAttStat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
 					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+curClass.getAttackAttribute()));
 		if(attStat>=maxAttStat) attStat=maxAttStat;
-		int attGain=(int)Math.round(CMath.div(attStat,6.0))+curClass.getBonusAttackLevel();
+		int attGain=(int)Math.floor(CMath.div(attStat,18.0))+curClass.getBonusAttackLevel();
 		if(mvStat>=25)attGain+=2;
 		else
 		if(mvStat>=22)attGain+=1;
 		attGain=attGain*adjuster;
 		mob.baseEnvStats().setAttackAdjustment(mob.baseEnvStats().attackAdjustment()+attGain);
 		mob.envStats().setAttackAdjustment(mob.envStats().attackAdjustment()+attGain);
-		theNews.append(attGain+"^N attack " + (attGain!=1?"points":"point") + ", ^H");
+		if(attGain>0)
+			theNews.append(attGain+"^N attack " + (attGain!=1?"points":"point") + ", ^H");
 
 		int man2Stat=mob.charStats().getStat(curClass.getAttackAttribute());
 		int maxMan2Stat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
@@ -143,11 +144,11 @@
 		CharClass curClass=mob.baseCharStats().getCurrentClass();
 		int oldClassLevel=mob.baseCharStats().getClassLevel(curClass);
 		baseLevelAdjuster(mob,-1);
-		int prac2Stat=mob.charStats().getStat(curClass.getAttackAttribute());
+		int prac2Stat=mob.charStats().getStat(CharStats.STAT_WISDOM);
 		int maxPrac2Stat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
 					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_WISDOM));
 		if(prac2Stat>maxPrac2Stat) prac2Stat=maxPrac2Stat;
-		int practiceGain=(int)Math.floor(CMath.div(prac2Stat,4.0))+curClass.getBonusPracLevel();
+		int practiceGain=(int)Math.floor(CMath.div(prac2Stat,6.0))+curClass.getBonusPracLevel();
 		if(practiceGain<=0)practiceGain=1;
 		mob.setPractices(mob.getPractices()-practiceGain);
 		int trainGain=0;
@@ -305,11 +306,11 @@
 				CMLib.coffeeTables().bump(mob,CoffeeTableRow.STAT_LEVELSGAINED);
 		}
 
-		int prac2Stat=mob.charStats().getStat(curClass.getAttackAttribute());
+		int prac2Stat=mob.charStats().getStat(CharStats.STAT_WISDOM);
 		int maxPrac2Stat=(CMProps.getIntVar(CMProps.SYSTEMI_BASEMAXSTAT)
 					 +mob.charStats().getStat(CharStats.STAT_MAX_STRENGTH_ADJ+CharStats.STAT_WISDOM));
 		if(prac2Stat>maxPrac2Stat) prac2Stat=maxPrac2Stat;
-		int practiceGain=(int)Math.floor(CMath.div(prac2Stat,4.0))+curClass.getBonusPracLevel();
+		int practiceGain=(int)Math.floor(CMath.div(prac2Stat,6.0))+curClass.getBonusPracLevel();
 		if(practiceGain<=0)practiceGain=1;
 		mob.setPractices(mob.getPractices()+practiceGain);
 		theNews.append(" ^H" + practiceGain+"^N practice " +
Index: planet_ink/coffee_mud/Libraries/EnglishParser.java
===================================================================
--- planet_ink/coffee_mud/Libraries/EnglishParser.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/EnglishParser.java	(revision 2574)
@@ -22,7 +22,7 @@
 import java.util.regex.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -1583,9 +1583,14 @@
 		}
 		if(gold>0)
 		{
-			if(CMLib.beanCounter().getTotalAbsoluteValue(mob,currency)>=CMath.mul(denomination,gold))
+			double amt = CMLib.beanCounter().getTotalAbsoluteValue(mob, currency);
+			if(amt>=CMath.mul(denomination,gold))
 			{
+				double expectedAmt = amt - CMath.mul(denomination,gold);
 			    CMLib.beanCounter().subtractMoney(mob,currency,denomination,CMath.mul(denomination,gold));
+			    double newAmt = CMLib.beanCounter().getTotalAbsoluteValue(mob, currency);
+			    if(newAmt > expectedAmt)
+				    CMLib.beanCounter().subtractMoney(mob,currency,(newAmt - expectedAmt));
 			    Coins C=(Coins)CMClass.getItem("StdCoins");
 			    C.setCurrency(currency);
 			    C.setDenomination(denomination);
Index: planet_ink/coffee_mud/Libraries/Sessions.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Sessions.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Sessions.java	(revision 2574)
@@ -11,7 +11,7 @@
 import com.planet_ink.coffee_mud.core.interfaces.MudHost;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -128,8 +128,9 @@
                     &&(S.previousCMD().size()>0)
                     &&(((String)S.previousCMD().firstElement()).equalsIgnoreCase("IMPORT")
                        ||((String)S.previousCMD().firstElement()).equalsIgnoreCase("EXPORT")
+                       ||((String)S.previousCMD().firstElement()).equalsIgnoreCase("CHARGEN")
                        ||((String)S.previousCMD().firstElement()).equalsIgnoreCase("MERGE")))
-                        check=check*60;
+                        check=check*600;
                     else
                     if(CMSecurity.isAllowed(S.mob(),S.mob().location(),"CMDROOMS"))
                         check=check*15;
Index: planet_ink/coffee_mud/Libraries/MUDZapper.java
===================================================================
--- planet_ink/coffee_mud/Libraries/MUDZapper.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/MUDZapper.java	(revision 2574)
@@ -1,5 +1,6 @@
 package com.planet_ink.coffee_mud.Libraries;
 
+import com.planet_ink.coffee_mud.core.exceptions.ScriptParseException;
 import com.planet_ink.coffee_mud.core.interfaces.*;
 import com.planet_ink.coffee_mud.core.*;
 import com.planet_ink.coffee_mud.Abilities.interfaces.*;
@@ -16,7 +17,7 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -242,6 +243,9 @@
             zapCodes.put("+QUESTWIN",new Integer(114));
             zapCodes.put("-GROUPSIZE",new Integer(115));
             zapCodes.put("+GROUPSIZE",new Integer(116));
+            zapCodes.put("+BASECLASS",new Integer(117));
+            zapCodes.put("-IF",new Integer(118));
+            zapCodes.put("+IF",new Integer(119));
 		}
 		return zapCodes;
 	}
@@ -436,7 +440,7 @@
 			return new StringBuffer(append+"levels less than "+lvl.substring(2).trim()+".  ");
 		else
 		if(lvl.startsWith(c+"=")&&(CMath.isNumber(lvl.substring(2).trim())))
-			return new StringBuffer(append+"level "+lvl.substring(2).trim()+" players.  ");
+			return new StringBuffer(append+"level "+lvl.substring(2).trim()+".  ");
 		return new StringBuffer("");
 	}
 
@@ -541,12 +545,16 @@
 				case 1: // -baseclass
 					{
 						buf.append(skipFirstWord?"Only ":"Allows only ");
+						HashSet seenBase=new HashSet();
 						for(Enumeration c=CMClass.charClasses();c.hasMoreElements();)
 						{
 							CharClass C=(CharClass)c.nextElement();
-							if((C.ID().equals(C.baseClass()))
-							&&(fromHereStartsWith(V,'+',v+1,CMStrings.padRight(C.name(),4).toUpperCase().trim())))
-								buf.append(C.name()+" types, ");
+							if(!seenBase.contains(C.baseClass()))
+							{
+								seenBase.add(C.baseClass());
+								if(fromHereStartsWith(V,'+',v+1,CMStrings.padRight(C.baseClass(),4).toUpperCase().trim()))
+									buf.append(C.baseClass()+" types, ");
+							}
 						}
 						if(buf.toString().endsWith(", "))
 							buf=new StringBuffer(buf.substring(0,buf.length()-2));
@@ -1455,13 +1463,13 @@
                             String str2=(String)V.elementAt(v2);
                             if(zapCodes.containsKey(str2))
                                 break;
-                            if(str2.startsWith("-"))
+                            if(str2.startsWith("+"))
                             {
                                 Quest Q=CMLib.quests().fetchQuest(str2.substring(1));
                                 if(Q==null)
                                     buf.append(str2.substring(1)+", ");
                                 else
-                                if((Q.displayName()!=null)&&(Q.displayName().trim().length()==0))
+                                if((Q.displayName()!=null)&&(Q.displayName().trim().length()>0))
                                     buf.append(Q.displayName()+", ");
                                 else
                                     buf.append(Q.name()+", ");
@@ -1486,7 +1494,7 @@
                                 if(Q==null)
                                     buf.append(str2.substring(1)+", ");
                                 else
-                                if((Q.displayName()!=null)&&(Q.displayName().trim().length()==0))
+                                if((Q.displayName()!=null)&&(Q.displayName().trim().length()>0))
                                     buf.append(Q.displayName()+", ");
                                 else
                                     buf.append(Q.name()+", ");
@@ -1877,7 +1885,46 @@
 					val=((++v)<V.size())?CMath.s_int((String)V.elementAt(v)):0;
 					buf.append((skipFirstWord?"A":"Requires a")+" group size of at least "+val+".  ");
 					break;
+				case 118: // -if
+					buf.append((skipFirstWord?"n":"Requires n")+"ot meeting the following condition(s):");
+				    for(int v2=v+1;v2<V.size();v2++)
+				    {
+				        String str2=(String)V.elementAt(v2);
+				        if(zapCodes.containsKey(str2))
+				            break;
+				        buf.append(str2).append(" ");
+				    }
+					break;
+				case 119: // +if
+					buf.append((skipFirstWord?"m":"Requires m")+"meets the following condition(s):");
+				    for(int v2=v+1;v2<V.size();v2++)
+				    {
+				        String str2=(String)V.elementAt(v2);
+				        if(zapCodes.containsKey(str2))
+				            break;
+				        buf.append(str2).append(" ");
+				    }
+					break;
+				case 117: // +baseclass
+				{
+					buf.append("Disallows the following types(s): ");
+					HashSet seenBase=new HashSet();
+					for(Enumeration c=CMClass.charClasses();c.hasMoreElements();)
+					{
+						CharClass C=(CharClass)c.nextElement();
+						if(!seenBase.contains(C.baseClass()))
+						{
+							seenBase.add(C.baseClass());
+							if(fromHereStartsWith(V,'-',v+1,CMStrings.padRight(C.baseClass(),4).toUpperCase().trim()))
+								buf.append(C.baseClass()+" types, ");
+						}
+					}
+					if(buf.toString().endsWith(", "))
+						buf=new StringBuffer(buf.substring(0,buf.length()-2));
+					buf.append(".  ");
+					break;
 				}
+				}
 			else
 			{
 				for(Enumeration c=CMClass.charClasses();c.hasMoreElements();)
@@ -2202,6 +2249,24 @@
 						}
 					}
 					break;
+				case 117: // +baseclass
+					{
+						Vector entry=new Vector();
+						buf.addElement(entry);
+						entry.addElement(zapCodes.get(str));
+						HashSet seenBase=new HashSet();
+						for(Enumeration c=CMClass.charClasses();c.hasMoreElements();)
+						{
+							CharClass C=(CharClass)c.nextElement();
+							if(!seenBase.contains(C.baseClass()))
+							{
+								seenBase.add(C.baseClass());
+								if(fromHereStartsWith(V,'-',v+1,CMStrings.padRight(C.baseClass(),4).toUpperCase().trim()))
+									entry.addElement(C.baseClass());
+							}
+						}
+					}
+					break;
 				case 2: // -Race
 					{
 						Vector entry=new Vector();
@@ -2819,6 +2884,41 @@
 						entry.addElement(new Integer(val));
 						break;
 					}
+                case 118: // -if
+                case 119: // +if
+					{
+                        Vector entry=new Vector();
+                        buf.addElement(entry);
+                        entry.addElement(zapCodes.get(str));
+                        for(int v2=v+1;v2<V.size();v2++)
+                        {
+                            String str2=(String)V.elementAt(v2);
+                            if(zapCodes.containsKey(str2)||(str2.startsWith("+"))||(str2.startsWith("-")))
+                            {
+                                v=v2-1;
+                                break;
+                            }
+                            else
+                            {
+                                ScriptingEngine SE = (ScriptingEngine)CMClass.getCommon("DefaultScriptingEngine");
+                                SE.setSavable(false);
+                                SE.setVarScope("*");
+                                try {
+	                                String[] tt = SE.parseEval(str2);
+	                                entry.addElement(SE);
+	                                String[][] EVAL={tt};
+	                                entry.addElement(EVAL); // the compiled eval
+	                                Object[] tmp = new Object[ScriptingEngine.SPECIAL_NUM_OBJECTS];
+	                                entry.addElement(tmp);
+                                } catch(ScriptParseException spe) {
+                                	Log.errOut("MUDZapper","Script parse Exception for "+str2);
+                                	Log.errOut("MUDZapper",spe);
+                                }
+                            }
+                            v=V.size();
+                        }
+						break;
+					}
 				}
 			else
 			{
@@ -3027,6 +3127,9 @@
                 }
 			}
 		}
+		for(int b=0;b<buf.size();b++)
+			if(buf.elementAt(b) instanceof Vector)
+				((Vector)buf.elementAt(b)).trimToSize();
 		buf.trimToSize();
 		return buf;
 	}
@@ -3107,6 +3210,18 @@
 					return false;
 				break;
 			}
+			case 117: // +baseclass
+			{
+				String baseClass=mob.baseCharStats().getCurrentClass().baseClass();
+				if((!actual)&&(!baseClass.equals(mob.charStats().displayClassName())))
+				{
+					CharClass C=CMClass.getCharClass(mob.charStats().displayClassName());
+					if(C!=null) baseClass=C.baseClass();
+				}
+				if(V.contains(baseClass))
+					return false;
+				break;
+			}
 			case 2: // -race
 				if(!V.contains(actual?mob.baseCharStats().getMyRace().name():mob.charStats().raceName()))
 					return false;
@@ -3992,6 +4107,39 @@
 				if((V.size()>1)&&(mob.getGroupMembers(new HashSet(1)).size()>(((Integer)V.elementAt(1)).intValue())))
 				   return false;
 				break;
+			case 118: // -if
+				{
+					boolean oneIsOK = false;
+					for(int v=1;v<V.size();v+=3)
+					{
+						ScriptingEngine SE = (ScriptingEngine)V.elementAt(v);
+						String[][] EVAL = (String[][])V.elementAt(v+1);
+						Object[] tmp = (Object[])V.elementAt(v+2);
+						MOB M = SE.getMakeMOB(E);
+				        Item defaultItem=(E instanceof Item)?(Item)E:null;
+						if(SE.eval(E, M, null,M, defaultItem, null, "", tmp, EVAL, 0))
+						{
+							oneIsOK = true;
+							break;
+						}
+					}
+					if(!oneIsOK) return false;
+					break;
+				}
+			case 119: // +if
+		        {
+					for(int v=1;v<V.size();v+=3)
+					{
+						ScriptingEngine SE = (ScriptingEngine)V.elementAt(v);
+						String[][] EVAL = (String[][])V.elementAt(v+1);
+						Object[] tmp = (Object[])V.elementAt(v+2);
+						MOB M = SE.getMakeMOB(E);
+				        Item defaultItem=(E instanceof Item)?(Item)E:null;
+						if(SE.eval(E, M, null,M, defaultItem, null, "", tmp, EVAL, 0))
+							return true;
+					}
+					break;
+		        }
 			}
             }catch(NullPointerException n){}
 		}
Index: planet_ink/coffee_mud/Libraries/MUDFight.java
===================================================================
--- planet_ink/coffee_mud/Libraries/MUDFight.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/MUDFight.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -40,6 +40,8 @@
     public long lastRes=0;
     public String[][] hitWordIndex=null;
     public String[][] hitWordsChanged=null;
+    
+    private static final int ATTACK_ADJUSTMENT = 50;
 
 	public HashSet allPossibleCombatants(MOB mob, boolean beRuthless)
 	{
@@ -85,23 +87,69 @@
 		return h;
 	}
 
+	public int adjustedAttackBonus(MOB mob, MOB target)
+	{
+		double att=(double)ATTACK_ADJUSTMENT + (double)mob.envStats().attackAdjustment();
+		int maxStat = mob.charStats().getMaxStat(CharStats.STAT_STRENGTH);
+		int currStat = mob.charStats().getStat(CharStats.STAT_STRENGTH);
+		if(currStat > maxStat) currStat = maxStat;
+		int baseStat = mob.baseCharStats().getStat(CharStats.STAT_STRENGTH);
+		if(baseStat > maxStat) baseStat = maxStat;
+		double str=((double)currStat-9.0)/5.0;
+		double strR=((double)baseStat-9.0)/5.0;
+		att += (str * strR * strR);
+		if(mob.curState().getHunger()<1) att=att*.9;
+		if(mob.curState().getThirst()<1) att=att*.9;
+		if(mob.curState().getFatigue()>CharState.FATIGUED_MILLIS) att=att*.8;
+		return (int)Math.round(att);
+	}
+
+	public int absoluteAdjustedArmorScore(MOB mob) 
+	{ 
+		return ( -( ( adjustedArmor(mob)) - 100 ) ); 
+	}
+	
+	public int adjustedArmor(MOB mob)
+	{
+		double dex=(double)(mob.charStats().getStat(CharStats.STAT_DEXTERITY)-9.0)/5.0;
+		double dexR=(double)(mob.baseCharStats().getStat(CharStats.STAT_DEXTERITY)-9.0)/5.0;
+		double arm = 0.0;
+		if((mob.envStats().disposition()&EnvStats.IS_SLEEPING)==0)
+		{
+			if((mob.envStats().disposition()&EnvStats.IS_SITTING)==0) 
+				arm = (dex * dexR * dexR);
+			else
+				arm = (dex * dexR);
+		}
+		if(arm>0.0)
+		{
+			if(mob.curState().getHunger()<1) arm=arm*.85;
+			if(mob.curState().getThirst()<1) arm=arm*.85;
+			if(mob.curState().getFatigue()>CharState.FATIGUED_MILLIS) arm=arm*.85;
+			if((mob.envStats().disposition()&EnvStats.IS_SITTING)>0) arm=arm*.75;
+		}
+		return (int)Math.round(mob.envStats().armor()-arm);
+	}
+
     public boolean rollToHit(MOB attacker, MOB defender)
     {
         if((attacker==null)||(defender==null)) return false;
-        return rollToHit(attacker.adjustedAttackBonus(defender),defender.adjustedArmor());
+        int diff = (attacker.envStats().level()-defender.envStats().level());
+        int diffSign = diff < 0 ? -1 : 1;
+        return rollToHit(adjustedAttackBonus(attacker,defender),adjustedArmor(defender),diffSign * (diff * diff));
     }
 
-    public boolean rollToHit(int attack, int defence)
+    public boolean rollToHit(int attack, int defence, int adjustment)
     {
         double myArmor=( -( ( (double)defence) - 100.0 ) );
         if(myArmor==0) myArmor=1.0;
         else
         if(myArmor<0.0) myArmor=-CMath.div(1.0,myArmor);
-        double hisAttack=((double)attack) + 50.0;
+        double hisAttack=(double)attack;
         if(hisAttack==0.0) hisAttack=1.0;
         else
         if(hisAttack<0.0) hisAttack=-CMath.div(1.0,myArmor);
-        return CMLib.dice().normalizeAndRollLess((int)Math.round(50.0*(hisAttack/myArmor)));
+        return CMLib.dice().normalizeAndRollLess((int)Math.round(50.0*(hisAttack/myArmor)) + adjustment);
     }
 	public HashSet allCombatants(MOB mob)
 	{
@@ -230,11 +278,12 @@
 		}
 		CMMsg msg=CMClass.getMsg(attacker,target,weapon,CMMsg.MSG_WEAPONATTACK,null);
         Room R=target.location();
-		if(R.okMessage(attacker,msg))
-		{
-			R.send(attacker,msg);
-			return msg.value()>0;
-		}
+        if(R!=null)
+			if(R.okMessage(attacker,msg))
+			{
+				R.send(attacker,msg);
+				return msg.value()>0;
+			}
 		return false;
 	}
 
@@ -249,8 +298,10 @@
 		if((healer==null)||(target==null)||(target.location()==null)) return false;
 		CMMsg msg=CMClass.getMsg(healer,target,tool,messageCode,CMMsg.MSG_HEALING,messageCode,allDisplayMessage);
 		msg.setValue(healing);
-		if(target.location().okMessage(target,msg))
-		{ target.location().send(target,msg); return true;}
+        Room R=target.location();
+        if(R!=null)
+			if(R.okMessage(target,msg))
+			{ R.send(target,msg); return true;}
 		return false;
 	}
 
@@ -278,32 +329,98 @@
 	}
 
 	public void postDamage(MOB attacker,
-								  MOB target,
-								  Environmental weapon,
-								  int damage,
-								  int messageCode,
-								  int damageType,
-								  String allDisplayMessage)
+						   MOB target,
+						   Environmental weapon,
+						   int damage,
+						   int messageCode,
+						   int damageType,
+						   String allDisplayMessage)
 	{
 		if((attacker==null)||(target==null)||(target.location()==null)) return;
 		if(allDisplayMessage!=null) allDisplayMessage="^F^<FIGHT^>"+allDisplayMessage+"^</FIGHT^>^?";
+		if((weapon instanceof Ability)
+		&&(damage>0)
+		&&(attacker != target)
+		&&(attacker != null)
+		&&(attacker.isMine(weapon)))
+		{
+			int levelDiff = attacker.envStats().level() - target.envStats().level();
+			if(levelDiff > 10) levelDiff = 10;
+			int maxStat = attacker.charStats().getMaxStat(CharStats.STAT_INTELLIGENCE);
+			int currStat = attacker.charStats().getStat(CharStats.STAT_INTELLIGENCE);
+			if(currStat > maxStat) currStat = maxStat;
+			int baseStat = attacker.baseCharStats().getStat(CharStats.STAT_INTELLIGENCE);
+			if(baseStat > maxStat) baseStat = maxStat;
+			double critPct = CMath.div(currStat - 10 + levelDiff,2.5);
+			double critPctR = CMath.div(baseStat - 10 + levelDiff,2.5);
+			if((critPct>0)&&(critPctR>0))
+			{
+				critPct = critPct * critPctR * critPctR;
+				if(CMLib.dice().rollPercentage()<Math.round(critPct))
+					damage+=Math.round(CMath.mul(damage,critPct/100.0));
+			}
+		}
 		CMMsg msg=CMClass.getMsg(attacker,target,weapon,messageCode,CMMsg.MSG_DAMAGE,messageCode,allDisplayMessage);
 		msg.setValue(damage);
         CMLib.color().fixSourceFightColor(msg);
-		if(target.location().okMessage(target,msg))
+        Room R=target.location();
+        if(R!=null)
+			if(R.okMessage(target,msg))
+			{
+				if(damageType>=0)
+					msg.modify(msg.source(),
+							   msg.target(),
+							   msg.tool(),
+							   msg.sourceCode(),
+							   replaceDamageTag(msg.sourceMessage(),msg.value(),damageType),
+							   msg.targetCode(),
+							   replaceDamageTag(msg.targetMessage(),msg.value(),damageType),
+							   msg.othersCode(),
+							   replaceDamageTag(msg.othersMessage(),msg.value(),damageType));
+				R.send(target,msg);
+			}
+	}
+
+	public int adjustedDamage(MOB mob, Weapon weapon, MOB target)
+	{
+		double damageAmount=0.0;
+		int levelDiff = mob.envStats().level() - ((target==null)?0:target.envStats().level());
+		if(target!=null)
 		{
-			if(damageType>=0)
-				msg.modify(msg.source(),
-						   msg.target(),
-						   msg.tool(),
-						   msg.sourceCode(),
-						   replaceDamageTag(msg.sourceMessage(),msg.value(),damageType),
-						   msg.targetCode(),
-						   replaceDamageTag(msg.targetMessage(),msg.value(),damageType),
-						   msg.othersCode(),
-						   replaceDamageTag(msg.othersMessage(),msg.value(),damageType));
-			target.location().send(target,msg);
+			if((weapon!=null)&&((weapon.weaponClassification()==Weapon.CLASS_RANGED)||(weapon.weaponClassification()==Weapon.CLASS_THROWN)))
+				damageAmount = (double)(CMLib.dice().roll(1, weapon.envStats().damage(),1));
+			else
+				damageAmount = (double)(CMLib.dice().roll(1, mob.envStats().damage(), (mob.charStats().getStat(CharStats.STAT_STRENGTH) / 3)-2));
+			if(!CMLib.flags().canBeSeenBy(target,mob)) damageAmount *=.5;
+			if(CMLib.flags().isSleeping(target)) damageAmount *=1.5;
+			else
+			if(CMLib.flags().isSitting(target)) damageAmount *=1.2;
 		}
+		else
+		if((weapon!=null)&&((weapon.weaponClassification()==Weapon.CLASS_RANGED)||(weapon.weaponClassification()==Weapon.CLASS_THROWN)))
+			damageAmount = (double)(weapon.envStats().damage()+1);
+		else
+			damageAmount = (double)mob.envStats().damage() + CMath.div(mob.charStats().getStat(CharStats.STAT_STRENGTH)-10  + levelDiff,2.5);
+		if(levelDiff > 25) levelDiff = 25;
+		if(levelDiff > 10) levelDiff = 10;
+		int maxStat = mob.charStats().getMaxStat(CharStats.STAT_DEXTERITY);
+		int currStat = mob.charStats().getStat(CharStats.STAT_DEXTERITY);
+		if(currStat > maxStat) currStat = maxStat;
+		int baseStat = mob.baseCharStats().getStat(CharStats.STAT_DEXTERITY);
+		if(baseStat > maxStat) baseStat = maxStat;
+		double critPct = CMath.div(currStat - 10 + levelDiff,2.5);
+		double critPctR = CMath.div(baseStat - 10 + levelDiff,2.5);
+		if((critPct>0)&&(critPctR>0))
+		{
+			critPct = critPct * critPctR * critPctR;
+			if(CMLib.dice().rollPercentage()<Math.round(critPct))
+				damageAmount+=Math.round(CMath.mul(damageAmount,critPct/50.0));
+		}
+		if(mob.curState().getHunger() < 1) damageAmount *= .8;
+		if(mob.curState().getFatigue()>CharState.FATIGUED_MILLIS) damageAmount *=.8;
+		if(mob.curState().getThirst() < 1) damageAmount *= .9;
+		if(damageAmount<1.0) damageAmount=1.0;
+		return (int)Math.round(damageAmount);
 	}
 
 	public void postWeaponDamage(MOB source, MOB target, Item item, boolean success)
@@ -316,7 +433,7 @@
 		if(item instanceof Weapon)
 		{
 			weapon=(Weapon)item;
-			damageInt=source.adjustedDamage(weapon,target);
+			damageInt=CMLib.combat().adjustedDamage(source,weapon,target);
 			damageType=weapon.weaponType();
 		}
 		if(success)
@@ -370,9 +487,10 @@
 									missString);
             CMLib.color().fixSourceFightColor(msg);
 			// why was there no okaffect here?
-			if((source.location().okMessage(source,msg))
-            &&(source.location()!=null))
-				source.location().send(source,msg);
+            Room R=source.location();
+            if(R!=null)
+			if(R.okMessage(source,msg))
+				R.send(source,msg);
 		}
 	}
 
@@ -722,16 +840,23 @@
         return HIT_WORDS[HIT_WORDS.length-1];
     }
 
-    public String armorStr(int armor){
+    public String armorStr(MOB mob)
+    {
+    	int armor = absoluteAdjustedArmorScore(mob);
         int ARMOR_CEILING=CMProps.getIListVar(CMProps.SYSTEML_ARMOR_DESCS_CEILING);
         return (armor<0)?armorDescs()[0]:(
                (armor>=ARMOR_CEILING)?armorDescs()[armorDescs().length-1]+(CMStrings.repeat("!",(armor-ARMOR_CEILING)/100))+" ("+armor+")":(
-                       armorDescs()[(int)Math.round(Math.floor(CMath.mul(CMath.div(armor,ARMOR_CEILING),armorDescs().length)))]+" ("+armor+")"));}
-    public String fightingProwessStr(int prowess){
+                       armorDescs()[(int)Math.round(Math.floor(CMath.mul(CMath.div(armor,ARMOR_CEILING),armorDescs().length)))]+" ("+armor+")"));
+    }
+    
+    public String fightingProwessStr(MOB mob)
+    {
+    	int prowess = adjustedAttackBonus(mob,null) - ATTACK_ADJUSTMENT;
         int PROWESS_CEILING=CMProps.getIListVar(CMProps.SYSTEML_PROWESS_DESCS_CEILING);
         return (prowess<0)?prowessDescs()[0]:(
                (prowess>=PROWESS_CEILING)?prowessDescs()[prowessDescs().length-1]+(CMStrings.repeat("!",(prowess-PROWESS_CEILING)/100))+" ("+prowess+")":(
-                prowessDescs()[(int)Math.round(Math.floor(CMath.mul(CMath.div(prowess,PROWESS_CEILING),prowessDescs().length)))]+" ("+prowess+")"));}
+                prowessDescs()[(int)Math.round(Math.floor(CMath.mul(CMath.div(prowess,PROWESS_CEILING),prowessDescs().length)))]+" ("+prowess+")"));
+    }
 
     public String standardMissString(int weaponType, int weaponClassification, String weaponName, boolean useExtendedMissString)
     {
@@ -977,10 +1102,10 @@
 
     public void handleObserveDeath(MOB observer, MOB fighting, CMMsg msg)
     {
+        Room R=observer.location();
         MOB deadmob=msg.source();
-        if(fighting==deadmob)
+        if((fighting==deadmob)&&(R!=null))
         {
-            Room R=observer.location();
             MOB newTargetM=null;
             HashSet hisGroupH=deadmob.getGroupMembers(new HashSet());
             HashSet myGroupH=observer.getGroupMembers(new HashSet());
Index: planet_ink/coffee_mud/Libraries/CoffeeUtensils.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CoffeeUtensils.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CoffeeUtensils.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -300,6 +300,121 @@
 		}
 	}
 
+	public int processVariableEquipment(MOB mob)
+	{
+		int newLastTickedDateTime=0;
+		if(mob!=null)
+		{
+			Room R=mob.location();
+			if(R!=null)
+			{
+				for(int i=0;i<R.numInhabitants();i++)
+				{
+					MOB M=R.fetchInhabitant(i);
+					if((M!=null)&&(!M.isMonster())&&(CMSecurity.isAllowed(M,R,"CMDMOBS")))
+					{ newLastTickedDateTime=-1; break;}
+				}
+				if(newLastTickedDateTime==0)
+				{
+					Vector rivals=new Vector();
+					for(int i=0;i<mob.inventorySize();i++)
+					{
+						Item I=mob.fetchInventory(i);
+						if((I!=null)&&(I.baseEnvStats().rejuv()>0)&&(I.baseEnvStats().rejuv()<Integer.MAX_VALUE))
+						{
+							Vector V=null;
+							for(int r=0;r<rivals.size();r++)
+							{
+								Vector V2=(Vector)rivals.elementAt(r);
+								Item I2=(Item)V2.firstElement();
+								if(I2.rawWornCode()==I.rawWornCode())
+								{ V=V2; break;}
+							}
+							if(V==null){ V=new Vector(); rivals.addElement(V);}
+							V.addElement(I);
+						}
+					}
+					for(int i=0;i<rivals.size();i++)
+					{
+						Vector V=(Vector)rivals.elementAt(i);
+						if((V.size()==1)||(((Item)V.firstElement()).rawWornCode()==0))
+						{
+							for(int r=0;r<V.size();r++)
+							{
+								Item I=(Item)V.elementAt(r);
+								if(CMLib.dice().rollPercentage()<I.baseEnvStats().rejuv())
+									mob.delInventory(I);
+								else
+								{
+									I.baseEnvStats().setRejuv(0);
+									I.envStats().setRejuv(0);
+								}
+							}
+						}
+						else
+						{
+							int totalChance=0;
+							for(int r=0;r<V.size();r++)
+							{
+								Item I=(Item)V.elementAt(r);
+								totalChance+=I.baseEnvStats().rejuv();
+							}
+							int chosenChance=CMLib.dice().roll(1,totalChance,0);
+							totalChance=0;
+							Item chosenI=null;
+							for(int r=0;r<V.size();r++)
+							{
+								Item I=(Item)V.elementAt(r);
+								if(chosenChance<=(totalChance+I.baseEnvStats().rejuv()))
+								{
+									chosenI=I;
+									break;
+								}
+								totalChance+=I.baseEnvStats().rejuv();
+							}
+							for(int r=0;r<V.size();r++)
+							{
+								Item I=(Item)V.elementAt(r);
+								if(chosenI!=I)
+									mob.delInventory(I);
+								else
+								{
+									I.baseEnvStats().setRejuv(0);
+									I.envStats().setRejuv(0);
+								}
+							}
+						}
+					}
+			        if(mob instanceof ShopKeeper)
+			        {
+			            rivals=new Vector();
+			            CoffeeShop shop = ((ShopKeeper)mob).getShop();
+			            for(int v=0;v<shop.getBaseInventory().size();v++)
+			            {
+			                Environmental E=(Environmental)shop.getBaseInventory().elementAt(v);
+			                if((E.baseEnvStats().rejuv()>0)&&(E.baseEnvStats().rejuv()<Integer.MAX_VALUE))
+			                    rivals.addElement(E);
+			            }
+			            for(int r=0;r<rivals.size();r++)
+			            {
+			                Environmental E=(Environmental)rivals.elementAt(r);
+			                if(CMLib.dice().rollPercentage()>E.baseEnvStats().rejuv())
+			                    shop.delAllStoreInventory(E);
+			                else
+			                {
+			                    E.baseEnvStats().setRejuv(0);
+			                    E.envStats().setRejuv(0);
+			                }
+			            }
+			        }
+					mob.recoverEnvStats();
+					mob.recoverCharStats();
+					mob.recoverMaxState();
+				}
+			}
+		}
+		return newLastTickedDateTime;
+	}
     
     public void recursiveDropMOB(MOB mob,
                                  Room room,
@@ -463,9 +578,8 @@
     
     public int getWornCode(String name)
     {
-        int wornNum=0;
         name=name.toLowerCase().trim();
-        for(;wornNum<Item.WORN_DESCS.length-1;wornNum++)
+        for(int wornNum=0;wornNum<Item.WORN_DESCS.length;wornNum++)
             if(Item.WORN_DESCS[wornNum].endsWith(name))
                 return wornNum;
         return -1;
@@ -526,6 +640,65 @@
         return policies;
     }
     
+	public void confirmWearability(MOB mob)
+	{
+		if(mob==null) return;
+		Race R=mob.charStats().getMyRace();
+		DVector reWearSet=new DVector(2);
+		Item item=null;
+		for(int i=0;i<mob.inventorySize();i++)
+		{
+			item=mob.fetchInventory(i);
+			if((item!=null)&&(!item.amWearingAt(Item.IN_INVENTORY)))
+			{
+				Long oldCode=new Long(item.rawWornCode());
+				item.unWear();
+				if(reWearSet.size()==0)
+					reWearSet.addElement(item,oldCode);
+				else
+				{
+					short layer=(item instanceof Armor)?((Armor)item).getClothingLayer():0;
+					int d=0;
+					for(;d<reWearSet.size();d++)
+						if(reWearSet.elementAt(d,1) instanceof Armor)
+						{
+							if(((Armor)reWearSet.elementAt(d,1)).getClothingLayer()>layer)
+								break;
+						}
+						else
+						if(0>layer)
+							break;
+					if(d>=reWearSet.size())
+						reWearSet.addElement(item,oldCode);
+					else
+						reWearSet.insertElementAt(d,item,oldCode);
+				}
+
+			}
+		}
+		for(int r=0;r<reWearSet.size();r++)
+		{
+			item=(Item)reWearSet.elementAt(r,1);
+			long oldCode=((Long)reWearSet.elementAt(r,2)).longValue();
+			int msgCode=CMMsg.MSG_WEAR;
+			if((oldCode&Item.WORN_WIELD)>0)
+				msgCode=CMMsg.MSG_WIELD;
+			else
+			if((oldCode&Item.WORN_HELD)>0)
+				msgCode=CMMsg.MSG_HOLD;
+			CMMsg msg=CMClass.getMsg(mob,item,null,CMMsg.NO_EFFECT,null,msgCode,null,CMMsg.NO_EFFECT,null);
+			if((R.okMessage(mob,msg))
+			&&(item.okMessage(item,msg))
+            &&((mob.charStats().getWearableRestrictionsBitmap()&oldCode)==0)
+			&&(item.canWear(mob,oldCode)))
+			   item.wearAt(oldCode);
+		}
+		// why wasn't that here before?
+		mob.recoverEnvStats();
+		mob.recoverCharStats();
+		mob.recoverMaxState();
+	}
+
     public Item isRuinedLoot(DVector policies, Item I)
     {
         if(I==null) return null;
Index: planet_ink/coffee_mud/Libraries/Quests.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Quests.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Quests.java	(revision 2574)
@@ -21,7 +21,7 @@
 
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -1503,7 +1503,7 @@
             }
         }
         Vector allItemNames=new Vector();
-        CMClass.addAllItemClassNames(allItemNames,true,false);
+        CMClass.addAllItemClassNames(allItemNames,true,false,false);
         Vector newItems=new Vector();
         for(int a=0;a<allItemNames.size();a++)
         {
Index: planet_ink/coffee_mud/Libraries/CMAbleParms.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMAbleParms.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMAbleParms.java	(revision 2574)
@@ -23,7 +23,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -1210,6 +1210,12 @@
                         AbilityParmEditor A = (AbilityParmEditor)CMLib.ableParms().getEditors().get("RESOURCE_OR_KEYWORD");
                         return A.webField(httpReq,parms,oldVal,fieldName);
                     }
+                    public String webTableField(ExternalHTTPRequests httpReq, Hashtable parms, String oldVal) {
+                    	if(oldVal.endsWith("$"))
+                    		return oldVal.substring(0,oldVal.length()-1);
+                    	return oldVal;
+                    }
+                    
                     public String commandLinePrompt(MOB mob, String oldVal, int[] showNumber, int showFlag) throws java.io.IOException
                     {
                         ++showNumber[0];
@@ -1752,6 +1758,8 @@
             return "";
         }
         
+        public String webTableField(ExternalHTTPRequests httpReq, Hashtable parms, String oldVal) { return oldVal; }
+        
         public String webField(ExternalHTTPRequests httpReq, Hashtable parms, String oldVal, String fieldName) {
             int textSize = 50;
             String webValue = webValue(httpReq,parms,oldVal,fieldName);
Index: planet_ink/coffee_mud/Libraries/Polls.java
===================================================================
--- planet_ink/coffee_mud/Libraries/Polls.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/Polls.java	(revision 2574)
@@ -20,7 +20,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /* 
-Copyright 2000-2008 Bo Zimmerman
+Copyright 2000-2009 Bo Zimmerman
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
Index: planet_ink/coffee_mud/Libraries/CMCatalog.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMCatalog.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMCatalog.java	(revision 2574)
@@ -20,7 +20,7 @@
 import java.lang.ref.WeakReference;
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -637,11 +637,17 @@
                 	changeCatalogFlag(E,false);
                 	if(!cataE.sameAs(E))
                 	{
-                		diffs=new StringBuffer("");
+                		if(diffs==null) diffs=new StringBuffer("");
                         for(int i=0;i<cataE.getStatCodes().length;i++)
                             if((!cataE.getStat(cataE.getStatCodes()[i]).equals(E.getStat(cataE.getStatCodes()[i]))))
                                 diffs.append(cataE.getStatCodes()[i]+",");
                 	}
+                	if((E instanceof MOB)&&(cataE instanceof MOB))
+                	{
+                		if(diffs==null) diffs=new StringBuffer("");
+                		if(!((MOB)E).getClanID().equalsIgnoreCase(((MOB)cataE).getClanID()))
+                			diffs.append("CLANID,");
+                	}
                 	changeCatalogFlag(E,true);
                 	if(data!=null)
                 		data.addReference(E);
@@ -669,7 +675,7 @@
         	{
 		        for(int d=0;d<icatalog.size();d++)
 		        {
-		            data=(CatalogLibrary.CataData)icatalog.elementAt(d,3);
+		            data=(CatalogLibrary.CataData)icatalog.elementAt(d,2);
 		            if((data.getWhenLive()==live)
 		            &&(data.getRate()>0.0)
 		            &&(data.getMaskV()!= null)
Index: planet_ink/coffee_mud/Libraries/CMMap.java
===================================================================
--- planet_ink/coffee_mud/Libraries/CMMap.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/CMMap.java	(revision 2574)
@@ -15,9 +15,10 @@
 import com.planet_ink.coffee_mud.Races.interfaces.*;
 
 import java.io.IOException;
+import java.lang.ref.WeakReference;
 import java.util.*;
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -43,10 +44,11 @@
     public Vector bankList=new Vector();
 	public final int QUADRANT_WIDTH=10;
 	public Vector space=new Vector();
-    public Hashtable globalHandlers=new Hashtable();
+    public Hashtable<Integer,Vector<WeakReference>> globalHandlers=new Hashtable<Integer,Vector<WeakReference>>();
     public Vector sortedAreas=null;
     private ThreadEngine.SupportThread thread=null;
     public long lastVReset=0;
+    public static MOB deityStandIn=null;
 
     public ThreadEngine.SupportThread getSupportThread() { return thread;}
     
@@ -167,30 +169,59 @@
 
     public void addGlobalHandler(MsgListener E, int category)
     {
-        Vector V=(Vector)globalHandlers.get(new Integer(category));
+    	if(E==null) return;
+        Vector<WeakReference> V=globalHandlers.get(Integer.valueOf(category));
         if(V==null)
         {
-            V=new Vector();
+            V=new Vector<WeakReference>();
             globalHandlers.put(new Integer(category),V);
         }
         synchronized(V)
         {
-	        if(!V.contains(E))
-	            V.add(E);
+        	for(Enumeration<WeakReference> e=V.elements();e.hasMoreElements();)
+        		if(e.nextElement().get()==E)
+        			return;
+            V.add(new WeakReference(E));
         }
     }
 
     public void delGlobalHandler(MsgListener E, int category)
     {
-        Vector V=(Vector)globalHandlers.get(new Integer(category));
-        if(V==null) return;
+        Vector<WeakReference> V=globalHandlers.get(new Integer(category));
+        if((E==null)||(V==null)) return;
         synchronized(V)
         {
-	        V.removeElement(E);
+        	WeakReference foundW=null;
+        	for(Enumeration<WeakReference> e=V.elements();e.hasMoreElements();)
+        	{
+            	WeakReference W=e.nextElement();
+        		if(W.get()==E)
+        			foundW=W;
+        	}
+        	if(foundW != null)
+	        	V.remove(foundW);
         }
     }
 
-    public MOB god(Room R){
+    public MOB deity() {
+    	if(deities().hasMoreElements())
+    		return (MOB)deities().nextElement();
+    	if((deityStandIn==null)
+    	||(deityStandIn.amDestroyed())
+    	||(deityStandIn.amDead())
+    	||(deityStandIn.location()==null)
+    	||(deityStandIn.location().isInhabitant(deityStandIn)))
+    	{
+    		if(deityStandIn!=null) deityStandIn.destroy();
+            MOB everywhereMOB=CMClass.getMOB("StdMOB");
+            everywhereMOB.setName("god");
+            everywhereMOB.setLocation(this.getRandomRoom());
+            deityStandIn=everywhereMOB;
+    	}
+    	return deityStandIn;
+    }
+    public MOB mobCreated() { return mobCreated(this.getRandomRoom());};
+    public MOB mobCreated(Room R){
         MOB everywhereMOB=CMClass.getMOB("StdMOB");
         everywhereMOB.setName("somebody");
         everywhereMOB.setLocation(R);
@@ -286,17 +317,21 @@
 
     public boolean sendGlobalMessage(MOB host, int category, CMMsg msg)
     {
-        Vector V=(Vector)globalHandlers.get(new Integer(category));
+        Vector<WeakReference> V=globalHandlers.get(new Integer(category));
         if(V==null) return true;
         synchronized(V)
         {
 	        try{
+	        	Object O=null;
 	            Environmental E=null;
+	            WeakReference W=null;
 	            for(int v=V.size()-1;v>=0;v--)
 	            {
-	            	if(V.elementAt(v) instanceof Environmental)
+	            	W=V.elementAt(v);
+	            	O=W.get();
+	            	if(O instanceof Environmental)
 	            	{
-		                E=(Environmental)V.elementAt(v);
+		                E=(Environmental)O;
 		                if(!CMLib.flags().isInTheGame(E,true))
 		                {
 		                    if(!CMLib.flags().isInTheGame(E,false))
@@ -307,15 +342,22 @@
 		                    return false;
 	            	}
 	            	else
-	            	if(V.elementAt(v) instanceof MsgListener)
+	            	if(O instanceof MsgListener)
 	            	{
-	            		if(!((MsgListener)V.elementAt(v)).okMessage(host, msg))
+	            		if(!((MsgListener)O).okMessage(host, msg))
 	            			return false;
 	            	}
+	            	else
+	            	if(O==null)
+	            		V.removeElementAt(v);
 	            }
 	            for(int v=V.size()-1;v>=0;v--)
-	            	if(V.elementAt(v) instanceof MsgListener)
-		                ((MsgListener)V.elementAt(v)).executeMsg(host,msg);
+	            {
+	            	W=V.elementAt(v);
+	            	O=W.get();
+	            	if(O instanceof MsgListener)
+		                ((MsgListener)O).executeMsg(host,msg);
+	            }
 	        }
 	        catch(java.lang.ArrayIndexOutOfBoundsException xx){}
 	        catch(Exception x){Log.errOut("CMMap",x);}
@@ -487,7 +529,7 @@
 		for(;rooms.hasMoreElements();)
 		{
 			Room room=(Room)rooms.nextElement();
-			if((mob==null)||CMLib.flags().canAccess(mob,room))
+			if((room != null) && ((mob==null)||CMLib.flags().canAccess(mob,room)))
 			{
 				found.addAll(room.fetchInhabitants(srchStr));
 		    	if((returnFirst)&&(found.size()>0)) return found;
@@ -527,7 +569,7 @@
 		for(;rooms.hasMoreElements();)
 		{
 			Room room=(Room)rooms.nextElement();
-			if((mob==null)||CMLib.flags().canAccess(mob,room))
+			if((room != null) && ((mob==null)||CMLib.flags().canAccess(mob,room)))
 			{
 				for(int m=0;m<room.numInhabitants();m++)
 				{
@@ -617,7 +659,7 @@
 		for(;rooms.hasMoreElements();)
 		{
 			Room room=(Room)rooms.nextElement();
-			if((mob==null)||CMLib.flags().canAccess(mob,room))
+			if((room != null) && ((mob==null)||CMLib.flags().canAccess(mob,room)))
 			{
 				if(!areas.contains(room.getArea()))
 					areas.add(room.getArea());
@@ -712,7 +754,7 @@
 		for(;rooms.hasMoreElements();)
 		{
 			Room room=(Room)rooms.nextElement();
-			if((mob==null)||CMLib.flags().canAccess(mob,room))
+			if((room != null) && ((mob==null)||CMLib.flags().canAccess(mob,room)))
 			{
 				found.addAll(anyItems?room.fetchItems(null,srchStr):room.fetchAnyItems(srchStr));
 		    	if((returnFirst)&&(found.size()>0)) return found;
@@ -1322,25 +1364,25 @@
 		}
 	}
 
-	public Room findWorldRoomLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct)
+	public Room findWorldRoomLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct, int maxSeconds)
 	{
-		Vector rooms=findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,null,true,timePct);
+		Vector rooms=findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,null,true,timePct, maxSeconds);
 		if((rooms!=null)&&(rooms.size()!=0)) return (Room)rooms.firstElement();
 		return null;
 	}
 	
-	public Vector findWorldRoomsLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct)
-	{ return findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,null,false,timePct); }
+	public Vector findWorldRoomsLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, int timePct, int maxSeconds)
+	{ return findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,null,false,timePct,maxSeconds); }
 	
 	public Room findAreaRoomLiberally(MOB mob, Area A,String cmd, String srchWhatAERIPMVK, int timePct)
 	{
-		Vector rooms=findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,A,true,timePct);
+		Vector rooms=findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,A,true,timePct,120);
 		if((rooms!=null)&&(rooms.size()!=0)) return (Room)rooms.firstElement();
 		return null;
 	}
 	
 	public Vector findAreaRoomsLiberally(MOB mob, Area A,String cmd, String srchWhatAERIPMVK, int timePct)
-	{ return findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,A,false,timePct); }
+	{ return findWorldRoomsLiberally(mob,cmd,srchWhatAERIPMVK,A,false,timePct,120); }
 	
 	protected Room addWorldRoomsLiberally(Vector rooms, Vector choicesV)
 	{
@@ -1380,21 +1422,55 @@
 		if(A==null) return roomsFilled();
 		return A.getProperMap();
 	}
+
+	protected Vector<Room> returnResponse(Vector<Room> rooms, Room room)
+	{
+		if(rooms!=null) return rooms;
+		if(room==null) return new Vector<Room>(1);
+		return (Vector<Room>)CMParms.makeVector(room);
+	}
 	
-	protected Vector findWorldRoomsLiberally(MOB mob, String cmd, String srchWhatAERIPMVK, Area A, boolean returnFirst, int timePct)
+	protected boolean enforceTimeLimit(long startTime, int maxSeconds)
 	{
+		if(maxSeconds<=0) return false;
+		return ((System.currentTimeMillis() - startTime) / 1000) > maxSeconds;
+	}
+	
+	protected Vector<Room> findWorldRoomsLiberally(MOB mob, 
+												   String cmd, 
+												   String srchWhatAERIPMVK, 
+												   Area A, 
+												   boolean returnFirst, 
+												   int timePct, 
+												   int maxSeconds)
+	{
 		Room room=null;
-		Vector rooms=(returnFirst)?null:new Vector();
+		Vector<Room> rooms=(returnFirst)?null:new Vector<Room>();
 		
 		Room curRoom=(mob!=null)?mob.location():null;
-		boolean searchWeakAreas=srchWhatAERIPMVK.toUpperCase().indexOf('E')>=0;
-		boolean searchStrictAreas=srchWhatAERIPMVK.toUpperCase().indexOf('A')>=0;
-		boolean searchRooms=srchWhatAERIPMVK.toUpperCase().indexOf('R')>=0;
-		boolean searchPlayers=srchWhatAERIPMVK.toUpperCase().indexOf('P')>=0;
-		boolean searchItems=srchWhatAERIPMVK.toUpperCase().indexOf('I')>=0;
-		boolean searchInhabs=srchWhatAERIPMVK.toUpperCase().indexOf('M')>=0;
-		boolean searchInventories=srchWhatAERIPMVK.toUpperCase().indexOf('V')>=0;
-		boolean searchStocks=srchWhatAERIPMVK.toUpperCase().indexOf('K')>=0;
+		
+		boolean searchWeakAreas=false;
+		boolean searchStrictAreas=false;
+		boolean searchRooms=false;
+		boolean searchPlayers=false;
+		boolean searchItems=false;
+		boolean searchInhabs=false;
+		boolean searchInventories=false;
+		boolean searchStocks=false;
+		char[] flags = srchWhatAERIPMVK.toUpperCase().toCharArray();
+		for(int c=0;c<flags.length;c++)
+			switch(flags[c])
+			{
+				case 'E': searchWeakAreas=true;   break;
+				case 'A': searchStrictAreas=true; break;
+				case 'R': searchRooms=true;       break;
+				case 'P': searchPlayers=true;     break;
+				case 'I': searchItems=true;       break;
+				case 'M': searchInhabs=true;      break;
+				case 'V': searchInventories=true; break;
+				case 'K': searchStocks=true;      break;
+			}
+		long startTime = System.currentTimeMillis();
 		if(searchRooms)
 		{
 			int dirCode=Directions.getGoodDirectionCode(cmd);
@@ -1420,6 +1496,7 @@
 	                if((sess!=null) && (sess.mob()!=null) && (sess.mob()!=null))
 	                	room=addWorldRoomsLiberally(rooms,sess.mob().location());
                 }
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
                 
                 // search areas strictly
                 if(searchStrictAreas && room==null && (A==null))
@@ -1429,6 +1506,7 @@
                 		room=addWorldRoomsLiberally(rooms,A);
                 	A=null;
                 }
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
                 
 				// no good, so look for room inhabitants
 				if(searchInhabs && room==null)
@@ -1437,6 +1515,7 @@
 					if(candidates.size()>0)
                 		room=addWorldRoomsLiberally(rooms,candidates);
 				}
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
 				
 				// now check room text
 				if(searchRooms && room==null)
@@ -1445,6 +1524,7 @@
 					if(candidates.size()>0)
                 		room=addWorldRoomsLiberally(rooms,candidates);
 				}
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
 				
 				// check floor items
 				if(searchItems && room==null)
@@ -1453,6 +1533,7 @@
 					if(candidates.size()>0)
                 		room=addWorldRoomsLiberally(rooms,candidates);
 				}
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
 				
 				// check inventories
 				if(searchInventories && room==null)
@@ -1461,6 +1542,7 @@
 					if(candidates.size()>0)
                 		room=addWorldRoomsLiberally(rooms,candidates);
 				}
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
 				
 				// check stocks
 				if(searchStocks && room==null)
@@ -1469,6 +1551,7 @@
 					if(candidates.size()>0)
                 		room=addWorldRoomsLiberally(rooms,candidates);
 				}
+                if(enforceTimeLimit(startTime,maxSeconds)) return returnResponse(rooms,room);
 				
 				// search areas weakly
                 if(searchWeakAreas && room==null && (A==null))
@@ -1480,9 +1563,7 @@
                 }
 			}
 		}
-		if(rooms!=null) return rooms;
-		if(room==null) return new Vector(1);
-		return CMParms.makeVector(room);
+		return returnResponse(rooms,room);
 	}
 
     private DVector getAllPlayersHere(Area area, boolean includeLocalFollowers)
@@ -1520,6 +1601,12 @@
         int oldFlag=area.getAreaState();
         area.setAreaState(Area.STATE_FROZEN);
         DVector playersHere=getAllPlayersHere(area,true);
+        for(int p=0;p<playersHere.size();p++)
+        {
+            MOB M=(MOB)playersHere.elementAt(p,1);
+            Room R=M.location();
+            R.delInhabitant(M);
+        }
         for(Enumeration r=area.getProperMap();r.hasMoreElements();)
             resetRoom((Room)r.nextElement());
         area.fillInAreaRooms();
@@ -1527,7 +1614,10 @@
         {
             MOB M=(MOB)playersHere.elementAt(p,1);
             Room R=getRoom((String)playersHere.elementAt(p,2));
-            if(R!=null) R.bringMobHere(M,false);
+            if(R==null) R=M.getStartRoom();
+            if(R==null) R=getStartRoom(M);
+            if(R!=null) 
+            	R.bringMobHere(M,false);
         }
         area.setAreaState(oldFlag);
     }
@@ -1541,7 +1631,8 @@
 		return true;
 	}
     
-    public boolean activate() {
+    public boolean activate() 
+    {
         if(thread==null)
             thread=new ThreadEngine.SupportThread("THMap"+Thread.currentThread().getThreadGroup().getName().charAt(0), 
                     MudHost.TIME_SAVETHREAD_SLEEP, this, CMSecurity.isDebugging("SAVETHREAD"));
@@ -1570,6 +1661,7 @@
         thread.status("expiration sweep");
         long currentTime=System.currentTimeMillis();
         boolean debug=CMSecurity.isDebugging("VACUUM");
+        MOB expireM=mobCreated(null);
         try
         {
             Vector stuffToGo=new Vector();
@@ -1577,7 +1669,6 @@
             MOB M=null;
             Room R=null;
             Vector roomsToGo=new Vector();
-            MOB expireM=god(null);
             CMMsg expireMsg=CMClass.getMsg(expireM,R,null,CMMsg.MSG_EXPIRE,null);
             boolean vResetTime=false;
             if((System.currentTimeMillis()-lastVReset)>(12 * 60 * 60 * 1000))
@@ -1692,7 +1783,16 @@
                         if(!ticked)
                         {
                             if(CMLib.players().getPlayer(mob.Name())==null)
-                                Log.errOut(thread.getName(),mob.name()+" in room "+R.roomID()+" unticked (is ticking="+(ticked)+", dead="+isDead+", Home="+wasFrom+") since: "+CMLib.time().date2String(mob.lastTickedDateTime())+"."+(ticked?"":"  This mob has been destroyed. May he rest in peace."));
+                            {
+                            	if(ticked)
+                            	{
+                            		// we have a dead group.. let the group handler deal with it.
+	                                Log.errOut(thread.getName(),mob.name()+" in room "+R.roomID()+" unticked in dead group (Home="+wasFrom+") since: "+CMLib.time().date2String(mob.lastTickedDateTime())+".");
+                            		continue;
+                            	}
+                            	else
+	                                Log.errOut(thread.getName(),mob.name()+" in room "+R.roomID()+" unticked (is ticking="+(ticked)+", dead="+isDead+", Home="+wasFrom+") since: "+CMLib.time().date2String(mob.lastTickedDateTime())+"."+(ticked?"":"  This mob has been destroyed. May he rest in peace."));
+                            }
                             else
                                 Log.errOut(thread.getName(),"Player "+mob.name()+" in room "+R.roomID()+" unticked (is ticking="+(ticked)+", dead="+isDead+", Home="+wasFrom+") since: "+CMLib.time().date2String(mob.lastTickedDateTime())+"."+(ticked?"":"  This mob has been put aside."));
                             thread.status("destroying unticked mob "+mob.name());
@@ -1705,5 +1805,9 @@
             }
         }
         catch(java.util.NoSuchElementException e){}
+        finally {
+        	if(expireM!=null)
+        		expireM.destroy();
+        }
     }
 }
Index: planet_ink/coffee_mud/Libraries/MUDHelp.java
===================================================================
--- planet_ink/coffee_mud/Libraries/MUDHelp.java	(revision 2354)
+++ planet_ink/coffee_mud/Libraries/MUDHelp.java	(revision 2574)
@@ -20,7 +20,7 @@
 import com.planet_ink.coffee_mud.Libraries.interfaces.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -621,16 +621,6 @@
 				}
 			}
 			if(!found)
-				for(Enumeration e=CMLib.map().areas();e.hasMoreElements();)
-				{
-					Area A=(Area)e.nextElement();
-					if(CMLib.english().containsString(A.name(),ahelpStr))
-					{
-						helpStr=A.name();
-						break;
-					}
-				}
-			if(!found)
 			{
 			    String currency=CMLib.english().matchAnyCurrencySet(ahelpStr);
 			    if(currency!=null)
@@ -674,6 +664,33 @@
 		            found=true;
 		        }
 			}
+			
+			if(!found)
+			{
+				Deity D = CMLib.map().getDeity(helpStr);
+				if(D != null)
+				{
+					Command CMD=CMClass.getCommand("Deities");
+					Vector commands=CMParms.makeVector("DEITY",D);
+					try {
+						CMD.execute(forMOB, commands, Command.METAFLAG_FORCED);
+						helpStr = D.Name().toUpperCase();
+						if((commands.size()==1)&&(commands.firstElement() instanceof String))
+							thisTag=(String)commands.firstElement();
+					}catch(Exception e){}
+				}
+				
+			}
+			if(!found)
+				for(Enumeration e=CMLib.map().areas();e.hasMoreElements();)
+				{
+					Area A=(Area)e.nextElement();
+					if(CMLib.english().containsString(A.name(),ahelpStr))
+					{
+						helpStr=A.name();
+						break;
+					}
+				}
 		}
 		if(!areaTag)
 			while((thisTag!=null)&&(thisTag.length()>0)&&(thisTag.length()<31))
Index: planet_ink/coffee_mud/Exits/StdExit.java
===================================================================
--- planet_ink/coffee_mud/Exits/StdExit.java	(revision 2354)
+++ planet_ink/coffee_mud/Exits/StdExit.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -252,7 +252,7 @@
 		if(openWord().length()==0)
 			return "opened";
 		else
-		if(CMStrings.isVowel(closeWord().charAt(closeWord().length()-1)))
+		if(CMStrings.isVowel(openWord().charAt(openWord().length()-1)))
 			return openWord()+"d";
 		else
 			return openWord()+"ed";
@@ -359,7 +359,7 @@
 			}
 			if(isOpen())
 			{
-				mob.tell("The "+doorName()+" is already "+openWord()+"!");
+				mob.tell("The "+doorName()+" is already "+openWordPastTense()+"!");
 				return false;
 			}
 			if(isLocked()&&hasALock())
Index: planet_ink/coffee_mud/Races/StdRace.java
===================================================================
--- planet_ink/coffee_mud/Races/StdRace.java	(revision 2354)
+++ planet_ink/coffee_mud/Races/StdRace.java	(revision 2574)
@@ -19,7 +19,7 @@
 import java.util.*;
 
 /*
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -853,7 +853,11 @@
 			if(i<CharStats.NUM_BASE_STATS)
 			{
 				SETSTAT.setStat(i,(SETSTAT1.getStat(i)+SETSTAT2.getStat(i))/2);
-				ADJSTAT.setStat(i,(ADJSTAT1.getStat(i)+ADJSTAT2.getStat(i))/2);
+				int newStat=((ADJSTAT1.getStat(i)+ADJSTAT2.getStat(i))/2);
+				if(newStat>5)
+					ADJSTAT.setStat(i,5);
+				else
+					ADJSTAT.setStat(i,newStat);
 			}
 			else
 			if((i!=CharStats.STAT_GENDER)&&(i!=CharStats.STAT_AGE))
Index: planet_ink/coffee_mud/Races/Dragon.java
===================================================================
--- planet_ink/coffee_mud/Races/Dragon.java	(revision 2354)
+++ planet_ink/coffee_mud/Races/Dragon.java	(revision 2574)
@@ -18,7 +18,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -77,9 +77,10 @@
 	public void affectCharStats(MOB affectedMOB, CharStats affectableStats)
 	{
 		super.affectCharStats(affectedMOB, affectableStats);
-		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+15);
-		affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY)+15);
-		affectableStats.setStat(CharStats.STAT_INTELLIGENCE,affectableStats.getStat(CharStats.STAT_INTELLIGENCE)+15);
+		int bump = affectedMOB.isMonster()?15:5;
+		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+bump);
+		affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY)+bump);
+		affectableStats.setStat(CharStats.STAT_INTELLIGENCE,affectableStats.getStat(CharStats.STAT_INTELLIGENCE)+bump);
 	}
 	public Weapon myNaturalWeapon()
 	{
Index: planet_ink/coffee_mud/Races/WereBear.java
===================================================================
--- planet_ink/coffee_mud/Races/WereBear.java	(revision 2354)
+++ planet_ink/coffee_mud/Races/WereBear.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -54,7 +54,7 @@
 	protected static Vector resources=new Vector();
 	public void affectCharStats(MOB affectedMOB, CharStats affectableStats)
 	{
-		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+8);
+		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+5);
 		affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY)+2);
 	}
 
Index: planet_ink/coffee_mud/Races/Naga.java
===================================================================
--- planet_ink/coffee_mud/Races/Naga.java	(revision 2354)
+++ planet_ink/coffee_mud/Races/Naga.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -58,7 +58,7 @@
 	public void affectCharStats(MOB affectedMOB, CharStats affectableStats)
 	{
 		affectableStats.setStat(CharStats.STAT_SAVE_POISON,affectableStats.getStat(CharStats.STAT_SAVE_POISON)+100);
-		affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY)+7);
+		affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY)+5);
 	}
 	public Vector myResources()
 	{
Index: planet_ink/coffee_mud/Races/Ogre.java
===================================================================
--- planet_ink/coffee_mud/Races/Ogre.java	(revision 2354)
+++ planet_ink/coffee_mud/Races/Ogre.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -68,7 +68,7 @@
             affectableStats.setStat(CharStats.STAT_CHARISMA,affectableStats.getStat(CharStats.STAT_CHARISMA)-3);
             affectableStats.setStat(CharStats.STAT_DEXTERITY,affectableStats.getStat(CharStats.STAT_DEXTERITY)-3);
             affectableStats.setStat(CharStats.STAT_INTELLIGENCE,affectableStats.getStat(CharStats.STAT_INTELLIGENCE)-4);
-            affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+10);
+            affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+5);
         }
         else
         {
Index: planet_ink/coffee_mud/Races/Minotaur.java
===================================================================
--- planet_ink/coffee_mud/Races/Minotaur.java	(revision 2354)
+++ planet_ink/coffee_mud/Races/Minotaur.java	(revision 2574)
@@ -17,7 +17,7 @@
 import java.util.*;
 
 /* 
-   Copyright 2000-2008 Bo Zimmerman
+   Copyright 2000-2009 Bo Zimmerman
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
@@ -64,7 +64,7 @@
 	}
 	public void affectCharStats(MOB affectedMOB, CharStats affectableStats)
 	{
-		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+10);
+		affectableStats.setStat(CharStats.STAT_STRENGTH,affectableStats.getStat(CharStats.STAT_STRENGTH)+5);
 	}
 	public Vector myResources()
 	{
