#!QUESTMAKER_START_SCRIPT Travel #2
#The player travels at the behest of one existing mob in your world
#to another somewhere else.  A reward is optionally given upon arrival.
#
#!QUESTMAKER_PAGE Quest Name/Duration
#Enter the unique name and starting time/duration for your new quest.
#
#Quest Name:
#Enter a unique name for your quest:
#$QUEST_NAME=$UNIQUE_QUEST_NAME=travel_2
#
#Quest Frequency:
#A quest starts and stops on timed intervals.  Enter the amount of time 
#that this quest will remain unavailable between runs. This number is in 
#"ticks" (4 second periods).  You may enter math expressions, and use the 
# special ? operator to generate random numbers.  A frequency of
#5 + 3?10 would generate a frequency of 8-15 ticks.
#$FREQUENCY=$EXPRESSION=400
#
#Quest Duration:
#Enter the amount of time that this quest will run and remain available 
#after it is started.  This time is also the amount of time a player has 
#to delivery the item after they have retreived it from the deliverer mob.
#This time is expressed in "ticks" (4 second periods).  You may enter math 
#expressions, and use the special ? operator to generate random numbers.
#For instance, 5 + 3?10 would generate a duration of 8-15 ticks.
#$DURATION=$EXPRESSION=175
#
#Quest-Player Criterium:
#You may leave this entry blank, or enter a Zapper Mask to describe what
#kinds of players may participate in this quest.  You can use this to set
#race, level, or other requirements.
#$QUEST_CRITERIA=$ZAPPERMASK
#
#!QUESTMAKER_PAGE Specify the Announcer
#The Announcer is the mob who will be announcing the quest initially. This must
#be an existing mob in your world.  They will announce the quest to players
#once, and then mark whether the player says they accept the quest.
#
#Announcer Area/Room: 
#Specify below the name of the area that your Announcer mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.
#Use double-quotes around multi-word areas and room ids/names.
#  
#Announcer Area:
#$ANNOUNCER_AREA=($AREA)
#Announcer Room ID:
#$ANNOUNCER_ROOM=($ROOMID)
#
#Announcer mob name: 
#Specify the name of the mob who will act as the Announcer mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there.
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#ZAPPERMASKS for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$ANNOUNCER_NAME=$NAME
#
#!QUESTMAKER_PAGE Announcer greetings/instructions
#Here's where you specify any special text said by the announcer regarding
#your quest
#
#Announcer greeting: 
#Specify what the announcer says to people when they enter the room about their
#quest.   Use the code ${2 *} to designate the name of the mob to find.
#$QUEST_NOTIFYSTRING=$LONG_STRING=I need someone to find ${2 *} somewhere.
#
#Announcer instructions: 
#Specify what the announcer says to people who have accepted the quest.  This 
#should give some details about what is to be done.  You can leave this blank
#if you like.  Use the code ${2 *} to designate the name of the mob to find.
#$QUEST_INSTRUCTIONSSTRING=($LONG_STRING)=Find ${2 *} at that one place.  Be careful!
#
#Announcer announcement:
#Select what type of annoucement the Announcer will make when the quest starts.
#Use the code ${2 *} to designate the name of the mob to find.
#$QUEST_ANNOUNCEMENT_TYPE=$CHOOSE=QUESTCHAT,MPECHO,SAY,YELL
#This is what the announcement says.  Leave it blank if you only want him to talk to people who enter the room with him.
#$QUEST_ANNOUNCEMENT=($STRING)
#
#!QUESTMAKER_PAGE Specify the Destination Mob
#The Destination Mob is the mob to which the item will be delivered. 
#
#Destination Mob Area/Room: 
#Specify below the name of the area that your destination mob will be located
#in and/or the room in which the mob can be found.  You may leave both blank
#to force the quest manager to find the mob somewhere in the world, but this
#will hurt the performance of your mud, so use with care.  
#Use double-quotes around multi-word areas and room ids/names.
#
#Destination Area:
#$DESTINATION_AREA=($AREA)
#Destination Room:
#$DESTINATION_ROOM=($ROOMID)
#
#Destination mob name: 
#Specify the name of the mob who will act as the destination mob.  
#Use double-quotes around multi-word names.
#If you specified an area or room above, then the mob must be located there. 
#You may optionally have the quest manager select a 'random' mob by entering
#a mob name of ANY MASK= followed by a Zapper Mask (see help on 
#Prop_HaveZapper for information on zapper mask syntax).
#Remember, if the quest manager can not find your mob, the quest will not
#be started.
#$DESTINATION_NAME=$NAME
#
#Destination response: 
#You may optionally specify some additional bit of speech the destination 
#mob will say to the players after they arrive.
#$DESTINATION_RESPONSE=($LONG_STRING)=Glad you made it!
#
#!QUESTMAKER_PAGE Quest Completion
#Select some rewards for delivering the item:
#
#Quest Point?
#$QUEST_POINT=$CHOOSE=YES,NO
#Amount of money (an amount, or leave blank):
#$GOLD=($EXPRESSION)
#Amount of experience points, blank for none, or a number% for percent of exp to next level:
#$EXP=($STRING)=10%
#
#Select whether a player may complete this quest multiple times:
#$MULTIPLE=$CHOOSE=YES,NO
#
#If you choose, you may have completion of this quest automatically start another.
#If this is what you want, enter the next quests name here:
#$NEXT_QUEST=($EXISTING_QUEST_NAME)
#
#!QUESTMAKER_END_SCRIPT Travel #2

set name $QUEST_NAME

set wait $FREQUENCY
set interval 1
#quiet

set minplayers 1
set playermask $QUEST_CRITERIA

set area $ANNOUNCER_AREA
set room $ANNOUNCER_ROOM
set mobgroup
set mob $ANNOUNCER_NAME
give behavior Scriptable LOAD=$QUEST_NAME_announcer.script

set area $DESTINATION_AREA
set room $DESTINATION_ROOM
set mobgroup
set mob $DESTINATION_NAME
give behavior Scriptable LOAD=$QUEST_NAME_destination.script

set duration $DURATION

<?xml version="1.0"?>
<FILE><NAME>$QUEST_NAME_announcer.script</NAME>
<DATA>
ONCE_PROG 100
	MPSETVAR * $QUEST_NAME_ALREADY_TOLD ''
	MPSETVAR * $QUEST_NAME_REWARDED ''
	MPSETVAR * $QUEST_NAME_ACCEPTED ''
	$QUEST_ANNOUNCEMENT_TYPE $QUEST_ANNOUNCEMENT
~

QUEST_TIME_PROG -1 *
	MPSETVAR * $QUEST_NAME_ALREADY_TOLD ''
	MPSETVAR * $QUEST_NAME_ACCEPTED ''
	MPSETVAR * $QUEST_NAME_REWARDED ''
~

GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n)
		if EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if !STRIN('$<$i $QUEST_NAME_ALREADY_TOLD>' '$n')
				if VAR($i $QUEST_NAME_ACCEPTED == '')
					sayto "$n" $QUEST_NOTIFYSTRING -- just say 'i accept' to take on this quest.
					MPSETVAR $i $QUEST_NAME_ALREADY_TOLD '$<$i $QUEST_NAME_ALREADY_TOLD> "$n"'
				endif
			endif
		endif
	endif
~

SPEECH_PROG p i accept
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n)
		if  EVAL('$MULTIPLE' == 'YES') OR !QUESTWINNER($n *)
			if VAR($i $QUEST_NAME_ACCEPTED == '')
				sayto "$n" $QUEST_INSTRUCTIONSSTRING
				mpqset * REMAINING $DURATION
				mpsetvar $i $QUEST_NAME_ACCEPTED $n
				mpsetvar $n $QUEST_NAME_ACCEPTED 'YES'
			else
				if VAR($i $QUEST_NAME_ACCEPTED == $n)
					sayto "$n" Yes, yes, I know .. now off with you.
				else
				endif
			endif
		endif
	endif
~
QUEST_TIME_PROG * 1
	if VAR($i $QUEST_NAME_ACCEPTED != '')
		tell '$<$i $QUEST_NAME_ACCEPTED>' You have less than a minute left to find ${2 *} and complete your quest.
	endif
~
</DATA></FILE>
<FILE><NAME>$QUEST_NAME_destination.script</NAME>
<DATA>
GREET_PROG 100
	if ISLIKE($n '$QUEST_CRITERIA') and ISPC($n) AND VAR($n $QUEST_NAME_ACCEPTED == 'YES')
		if  EVAL('$MULTIPLE' != 'YES') AND QUESTWINNER($n *)
		else
			if EVAL('$EXP' != '')
				mpexp $n $EXP
			endif
			if EVAL('$QUEST_POINT' == 'YES')
				mpoload QuestPoint
				give "a quest point" "$n"
			endif
			if EVAL('$GOLD' != '') AND EVAL('$GOLD' > 0)
				mpoload $GOLD
				give $GOLD "$n"
			endif
			mpquestwin $n *
			sayto $n $DESTINATION_RESPONSE
			mpendquest *
			IF EVAL('$NEXT_QUEST' != '')
				mpstartquest $NEXT_QUEST
			ENDIF
		endif
	endif
~
</DATA></FILE>