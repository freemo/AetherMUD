AHELP=\
Command : AHELP\n\r\
Usage   : AHELP [TOPICNAME]\n\r\
Example : ahelp ahelp\n\r\
Short(s): \n\r\
An Archon command to view the Archon help commands.

ATOPICS=\
Command : ATOPICS\n\r\
Usage   : ATOPICS [TOPICNAME]\n\r\
Example : atopics\n\r\
Short(s): \n\r\
An Archon command to view the Archon help topics.

COPY=\
Command : COPY\n\r\
Usage   : COPY ([NUMBER]) [ITEM TYPE]/[DIRECTION] \n\r\
Example : copy joe\n\r\
        : copy beast sword\n\r\
        : copy east\n\r\
Short(s): \n\r\
An Archon command for the creation of items, mobs, and rooms. \
Enter COPY for more information on command usage.
	
CREATE=\
Command : CREATE\n\r\
Usage   : CREATE [ITEM TYPE] ... \n\r\
Example : create room e new StdRoom\n\r\
        : create item Longsword\n\r\
        : create StdExit east\n\r\
Short(s): \n\r\
An Archon command for the creation of items, mobs, rooms, and exits. \
Enter CREATE for more information on command usage.
	
DESTROY=\
Command : DESTROY\n\r\
Usage   : DESTROY [ITEM TYPE] ... \n\r\
Example : destroy room e\n\r\
Short(s): \n\r\
An Archon command for the destruction of items, mobs, rooms, exits, \
and listed bugs, typos, and ideas. \
Enter DESTROY for more information on command usage.
	
I3_CHANNELS=\
Command  : I3 CHANNELS\n\r\
Usage    : I3 CHANNELS\n\r\
Example  : i3 channels\n\r\
Short(s) : \n\r\
Lists all the channels available on the InterMud3 network, even those \
which your mud does not subscribe to.

RESET_ROOM=RESET
RESET=\
Command  : RESET ROOM\n\r\
Usage    : RESET ROOM\n\r\
Example  : reset room\n\r\
Short(s) : \n\r\
This command will revive any wandered or dead mobs whose home \
is the same as the invokers room.  Any removed items which \
are resettable will also return.

LIST=\
Command : LIST\n\r\
Usage   : LIST ([SHOPKEEPER])\n\r\
Example : list\n\r\
Short(s): \n\r\
The normal player version of this commannd will display the items \
which a particular shopkeeper MOB may be selling, along with the \
prices being offered to your characters. \n\r\
\n\r\
The Archon version can also be qualified with MOBS, ITEMS, WEAPONS, \
ARMOR, ROOMS, LOCALES, RACES, CLASSES, MAGIC, THREADS, BUGS, TYPOS, \
IDEAS, REPORTS and EXITS.

LINK=\
Command : LINK\n\r\
Usage   : LINK [ROOMID] [DIRECTION]\n\r\
Example : link midgaard#3001 north\n\r\
Short(s): \n\r\
An Archon command for the linking of rooms to each other.
	
MODIFY=\
Command : MODIFY\n\r\
Usage   : MODIFY [ITEM TYPE] ... \n\r\
Example : modify room name The Grassy Knole\n\r\
Short(s): \n\r\
An Archon command for the modification of items, mobs, rooms, and exits. \
Enter MODIFY for more information on command usage.
	
I3=\
This refers to the InterMud3 system, which may or may not be \
available on your system.  Enter I3 by itself for a list of \
available commands.  For more help, enter HELP I3 LIST, HELP I3 CHANNELS, \
HELP I3 ADD, HELP I3 DELETE, HELP I3 LISTEN, or HELP I3 INFO.

I3_LIST=\
Command : I3 LIST\n\r\
Usage   : I3 LIST\n\r\
Example : i3 list\n\r\
Short(s): \n\r\
Lists all the muds available on the InterMud3 channels.

I3_ADD=\
Command : I3 ADD\n\r\
Usage   : I3 ADD [REMOTE CHANNEL NAME]\n\r\
Example : i3 add BADCHAN\n\r\
Short(s): \n\r\
Sends an add-channel message to the InterMud3 router.  The channel \
listed must already appear in your coffeemud.ini file.

I3_LISTEN=\
Command : I3 LISTEN\n\r\
Usage   : I3 LISTEN [REMOTE CHANNEL NAME]\n\r\
Example : i3 listen BADCHAN\n\r\
Short(s): \n\r\
Sends a listen-channel message to the InterMud3 router.  The channel \
listed must already appear in your coffeemud.ini file.

I3_DELETE=\
Command : I3 DELETE\n\r\
Usage   : I3 DELETE [LOCAL CHANNEL NAME]\n\r\
Example : i3 delete BADCHAN\n\r\
Short(s): \n\r\
Sends a remove-channel message to the InterMud3 router.  The channel \
listed must already appear in your coffeemud.ini file.

I3_INFO=\
Command : I3 INFO\n\r\
Usage   : I3 INFO [MUD NAME]\n\r\
Example : i3 info coffeemud\n\r\
Short(s): \n\r\
Give some special information about the InterMud3 mud listed.

IMPORT=\
Command  : IMPORT\n\r\
Usage    : IMPORT (NOPROMPT) [COMPLETE PATH AND FILE NAME(S)] \n\r\
Example  : import c:\areas\myarea.cmare\n\r\
         : import noprompt c:\areas\midgaard.are\n\r\
         : import c:\areas\midgaard.are c:\areas\school.are\n\r\
         : import noprompt c:\areas\areas.lst\n\r\
         : import noprompt c:\areas\\n\r\
Short(s) : \n\r\
The import command will allow you to import official coffeemud \
area files, whose extension is "*.cmare"\n\r\
CoffeeMud may also import, with varying levels of success, the "*.are" \
files used by other muds.  Some formats are better supported \
than others, so be sure to carefully examine the imported \
area afterwards.\n\r\
The import command will auto detect, based on the file given, \
whether the file refers to a coffeemud area file, room file, \
a "*.are" from another mud, or a "*.lst" list of other area \
files.

EXPORT=\
Command : EXPORT\n\r\
Usage   : EXPORT (AREA/ROOM) ([FILE NAME]/SCREEN)\n\r\
Example : export room myroom\n\r\
        : export area /home/users/myarea\n\r\
        : export area screen\n\r\
Short(s): \n\r\
The export command will generate the official coffeemud area files, \
whose extension is "*.cmare".  This command may also be used to export \
individual rooms as well.  The results will be written to the file \
given in the argument, or to the screen if "screen" is given as the \
file name.  The extension need not be included, as coffeemud will add \
it if not present.

ORDER=\
Command : ORDER\n\r\
Usage   : ORDER [TARGET NAME] [COMMAND(S)]\n\r\
Example : order dog flee\n\r\
Short(s): \n\r\
This command will allow you to force a mob to perform any command \
listed in the COMMANDS or SOCIALS list.
	
SNOOP=\
Command : SNOOP\n\r\
Usage   : SNOOP [TARGET NAME]\n\r\
Example : snoop player\n\r\
Short(s): \n\r\
This command will allow you to watch a player play -- seeing everything \
they type in, and everything they read on their screen.
	
SAVE=\
Command : SAVE\n\r\
Usage   : SAVE [ROOM, MOBS, ITEMS, USERS]\n\r\
Example : save room\n\r\
Short(s): \n\r\
An Archon command to permanently save the contents of a room, the mobs \
in the room, or the users who are logged in.  The command will apply \
to the room in which your Character is located.

SYSMSGS=\
Command : SYSMSGS\n\r\
Usage   : SYSMSGS\n\r\
Example : sysmsgs\n\r\
Short(s): \n\r\
An Archon command to toggle debug mode, or extended messages.

TAKE=\
Command : TAKE\n\r\
Usage   : TAKE (ALL) [ITEM NAME] ([MOB NAME])\n\r\
Example : take all dagger Horice\n\r\
Example : take all Horice\n\r\
Example : take pie Horice\n\r\
Short(s): \n\r\
This is an Archon command that forces the specified mob or character \
to give item that is in his or her inventory or equipment to \
you.  If the item is inside a specified container, it will \
be retreived from the container.

SHUTDOWN=\
Command : SHUTDOWN\n\r\
Usage   : SHUTDOWN (RESTART)\n\r\
Example : shutdown\n\r\
Short(s): \n\r\
With no argument, this command will bring down the CoffeeMud server. \
With the restart argument, it will "bounce" (restart) the server.

UNLINK=\
Command : UNLINK\n\r\
Usage   : UNLINK [DIRECTION]\n\r\
Example : unlink north\n\r\
Short(s): \n\r\
An Archon command for the unlinking of rooms from each other.

NOWIZINV=VISIBLE
VISIBLE=\
Command  : WIZARD INVISIBILITY\n\r\
Usage    : VISIBLE\n\r\
Available: Archon\n\r\
Example  : visible\n\r\
Short(s) : nowizinv\n\r\
Wizard Invisibility, available only to Archons, makes the invoker \
completely undetectable by other mobs or players.  This command \
turns wizard invisibility off.  See WIZINV for more information.

GENCHAR=\
Skill    : GENCHAR\n\r\
Usage    : GENCHAR\n\r\
Available: Archon\n\r\
Example  : genchar\n\r\
Short(s) : \n\r\
A little Archon utility designed to give example characters \
of various levels, for comparison with MOBs of similar \
level.
	
GOTO=\
Skill    : GOTO\n\r\
Usage    : GOTO [ROOM ID/DESC/MOB/AREA] (!)\n\r\
Available: Archon\n\r\
Example  : goto Midgaard#3001\n\r\
         : goto #3001\n\r\
         : goto north\n\r\
         : goto hassan\n\r\
         : goto temple of mota\n\r\
         : goto midgaard\n\r\
Short(s) : \n\r\
The invoker and his or her followers will be transported, \
with very little fanfare, to the destination listed.  This \
ability is not magical in nature, and is thus not affected \
by no-teleport areas and rooms.  Appending an exclaimation \
point to the room will ADD fanfare to the entrance.

POSSESS=\
Skill    : POSSESS\n\r\
Usage    : POSSESS [MOB NAME]\n\r\
Available: Archon\n\r\
Example  : possess dragon\n\r\
Short(s) : \n\r\
This Archon command will allow your character to possess and control \
any given mob.  That mob will be controlled \
as if it were your own character.  Use the QUIT command to return \
to your own characters body.  Should the mob die, you will be \
returned automatically.
	
WHERE=\
Command : WHERE\n\r\
Usage   : WHERE ([MOB OR PLAYER])\n\r\
Example : where\n\r\
        : where dog\n\r\
Short(s): \n\r\
Without an argument, this command displays the names and locations of \
all players online.  With an argument, it will show all mobs with \
that name, and their room location.
	
WIZINVISIBLE=WIZINV
WIZINV=\
Skill    : WIZARD INVISIBILITY\n\r\
Usage    : WIZINV (OFF)\n\r\
Available: Archon\n\r\
Example  : wizinv\n\r\
Short(s) : \n\r\
Wizard Invisibility, available only to Archons, makes the invoker \
completely undetectable by other mobs or players.  In addition, \
the invoker will not hunger or thirst, may pass through any \
terrain unhindered (except doors), and is invulnerable to sleep \
spells.

XML=\
Command  : \n\r\
Usage    : By MUDGrinder only\n\r\
Example  : \n\r\
Short(s) : \n\r\
This command exist to fascillitate the transfer of information \
between MUDGrinder and CoffeeMud.  Do not use this command for \
any reason.

UNLOADHELP=\
Command  : UNLOADHELP\n\r\
Usage    : UNLOADHELP\n\r\
Example  : unloadhelp\n\r\
Short(s) : \n\r\
Unloads most resource text and help files for easy refreshing.

DUMPFILE=\
Command  : DUMPFILE\n\r\
Usage    : DUMPFILE (RAW) [USER/ALL] [FILENAME]\n\r\
Example  : dumpfile all classes.txt\n\r\
Short(s) : \n\r\
Unloads most resource text and help files for easy refreshing.

PROP_CRAWLSPACE=\
Property   : Prop_Crawlspace\n\r\
Targets    : Exits, Rooms, Areas\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Forces players to crawl through the exit or room with this property.

PROP_ENTERADJUSTER=\
Property   : Prop_EnterAdjuster\n\r\
Targets    : Rooms, Exits\n\r\
Parameters : statistic names followed by a +, -, or = and a value\n\r\
           : and/or spells seperated by semicolons\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F;Prayer_Bless;\n\r\
Description: \n\r\
Upon entering this room or exit, the listed effects or spells will be \
PERMANENTLY ADDED to the mob.  All parameters use the + or - adjuster, except the \
class, race, and gender parameters noted above. \
Valid parameters are as follows: \n\r\
strength dexterity constitution charisma wisdom intelligence \n\r\
ability armor attacks damage disposition level rejuv senses \n\r\
speed height weight gender class race hitpoints hunger mana movement \n\r\
thirst experience height practices trains questpoints coins. 

PROP_FAMILIAR=\
Property   : Prop_Familiar\n\r\
Targets    : MOB\n\r\
Parameters : The familiar code number or name\n\r\
Example    : rat\n\r\
Description: \n\r\
This property is a special MOB property created for the find familiar spell. \
It handles all the special benefits of the familiar type, along with the \
benefits to the owner.  It will also destroy the familiar when no longer \
following the owner.

PROP_FIGHTSPELLCAST=\
Property   : Prop_FightSpellCast\n\r\
Targets    : Weapon (Item)\n\r\
Parameters : Proper spell names seperated by semicolons\n\r\
Example    : Spell_Sleep;Spell_Disintegrate\n\r\
Description: \n\r\
Causes a spell to be cast upon the target being struck during melee combat. 

PROP_HAVEADJUSTER=\
Property   : Prop_HaveAdjuster\n\r\
Targets    : Items\n\r\
Parameters : statistic names followed by a +, -, or = and a value\n\r\
Example    : str+2 dex-2 move+100 class=thief race=elf gender=F\n\r\
Description: \n\r\
So long as the item with this property is owned, the listed effects will be \
given to the owner.  All parameters use the + or - adjuster, except the \
class, race, and gender parameters noted above. \
Valid parameters are as follows: \n\r\
strength dexterity constitution charisma wisdom intelligence \n\r\
ability armor attacks damage disposition level rejuv senses \n\r\
speed height weight gender class race hitpoints hunger mana movement \n\r\
thirst experience. 

PROP_HAVERESISTER=\
Property   : Prop_HaveResister\n\r\
Targets    : Items\n\r\
Parameters : resistance names followed by percentages\n\r\
Example    : magic 50% poison -10%\n\r\
Description: \n\r\
So long as the item with this property is owned, the owner will gain certain \
resistances and immunities in the parameters.  A percentage of resistance \
must be included, or the default will be 100% (complete immunity to listed \
effects).  The effects which may be included are: \n\r\
Resistances: gas fire electrical mind magic cold acid water evil (undead) \n\r\
Resistances: justice (as per many thief abilities) \n\r\
Resistances: weapons blunt pierce slash (reduced damage) \n\r\
Immunities : teleport (includes gate, summon) holy disease poison

PROP_HAVESPELLCAST=\
Property   : Prop_HaveSpellCast\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells seperated by semicolons\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Description: \n\r\
So long as the item with this property is owned, the owner will be under the \
effect of the listed spells. 

PROP_PRACTICEDUMMY=\
Property   : Prop_PracticeDummy\n\r\
Targets    : Mobs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Gives a mob unlimited hit points, and prevents them from fighting back.

PROP_HAVEZAPPER=\
Property   : Prop_HaveZapper\n\r\
Targets    : Items\n\r\
Parameters : a list of masking parameters described below\n\r\
Example    : -class +mage -race +elf -evil\n\r\
Description: \n\r\
Whenever this item is picked up by a mob, the item will be \
zapped out of the mobs hands if they meet the parameters.  Valid parameters \
include:  \n\r\
-class  (disallow all classes)  \n\r\
-baseclass  (disallow all base classes)  \n\r\
+thief +fighter +mage +paladin +bard +ranger (create exceptions to -class and -baseclass)\n\r\
-thief -fighter -mage -paladin -bard -ranger (disallow only listed classes)\n\r\
-race (disallow all racial categories)  \n\r\
+elf +dwarf +human +half +gnome (create exceptions to -race)  \n\r\
-elf -dward -human -half -gnome (disallow only listed races)  \n\r\
-alignment (disallow all alignments)  \n\r\
+evil +good +neutral (create exceptions to -alignment)  \n\r\
-evil -good -neutral (disallow only listed alignments)  

PROP_HIDDEN=\
Property   : Prop_Hidden\n\r\
Targets    : MOB\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An alternative to setting a mob permanently hidden, this will keep the MOB hidden until the mob \
performs some act which would normally un-hide the mob.  After that, a period of time must \
elapse before the property reengages and makes the mob hidden again.

PROP_INVISIBILITY=\
Property   : Prop_Invisibility\n\r\
Targets    : MOB\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An alternative to setting a mob permanently invisible, this will keep the MOB invisible until the mob \
performs some act which would normally dispel the invisibility.  After that, a period of time must \
elapse before the property reengages and makes the mob invisible again.

PROP_ITEMTRANSPORTER=\
Property   : Prop_ItemTransporter\n\r\
Targets    : Rooms, MOBs, Items (Containers)\n\r\
Parameters : The transporter KEY\n\r\
Example    : KEYX123\n\r\
Description: \n\r\
Any room, items, or mob with this property becomes a medium for transportation to \
another mob, room, or item with the Prop_ItemTransReceiver property with the \
same key.  Any items dropped in the room, picked up or give to the mob, or placed \
inside the containers with this property will be instantly transported to another \
room/item/mob with the Prop_ItemTransReceiver property which has the exact same \
KEY parameter.  If there is more than one Prop_ItemTransReceiver found with the \
proper key, the destination will go randomly to one of the choices.

PROP_ITEMTRANSRECEIVER=\
Property   : Prop_ItemTransReceiver\n\r\
Targets    : Rooms, MOBs, Items (Containers)\n\r\
Parameters : The transporter KEY\n\r\
Example    : KEYX123\n\r\
Description: \n\r\
See Prop_ItemTransporter above.

PROP_MAGICFREEDOM=\
Property   : Prop_MagicFreedom\n\r\
Targets    : Room\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels all magical effects in the room.  If placed on a mob, will cancel magical \
effects in the same room as the mob. 

PROP_NOCHANNEL=\
Property   : Prop_NoChannel\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels all channel message sending in the room. 

PROP_NOPKILL=\
Property   : Prop_NoPKill\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels all player killing in the room or area. 

PROP_NOPURGE=\
Property   : Prop_NoPurge\n\r\
Targets    : Rooms\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Prevents items in the room from being destroyed as refuse over time.

PROP_NOTELEPORT=\
Property   : Prop_NoTeleport\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows the casting of gate, teleport, portal, plantpass, and other \
spells INTO this area.

PROP_NOCHARM=\
Property   : Prop_NoCharm\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows the casting of charm like affects in the area.

PROP_NOSUMMON=\
Property   : Prop_NoSummon\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows summoning of creatures or people INTO the affected place.

PROP_NORECALL=\
Property   : Prop_NoRecall\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Disallows recalling in the room.

PROP_PEACEMAKER=\
Property   : Prop_PeaceMaker\n\r\
Targets    : Room, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Cancels any fighting in the room.

PROP_REQALIGNMENTS=\
Property   : Prop_ReqAlignments\n\r\
Targets    : Rooms, Areas, Exits\n\r\
Parameters : alignment masks listed below\n\r\
Example    : -all +good\n\r\
Description: \n\r\
Creates alignment restrictions for entering a room.  Followers will be allowed \
unless explicitly disallowed.  Valid parameters include:  \n\r\
nosneak (disallow sneaking past the requirement)\n\r 
-all (disallow all alignments)  \n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
+evil +good +neutral (create exceptions to -all)  \n\r\
-evil -good -neutral (disallow only listed alignments)  

PROP_REQCAPACITY=\
Property   : Prop_ReqCapacity\n\r\
Targets    : Areas, Room\n\r\
Parameters : the maximum number of occupants\n\r\
Example    : 2\n\r\
Description: \n\r\
Creates a capacity limit for the room with this affect.

PROP_REQCLASSES=\
Property   : Prop_ReqClasses\n\r\
Targets    : Rooms, Areas, Exits\n\r\
Parameters : class masks listed below\n\r\
Example    : -all +thief\n\r\
Description: \n\r\
Creates class restrictions for entering a room.  Followers will be allowed unless \
explicitly disallowed.  Valid parameters include: \n\r\
nosneak (disallow sneaking past the requirement)\n\r 
-all (disallow all classes)  \n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
+thief +mage +bard (create exceptions to -all)  \n\r\
-thief -mage -bard (disallow only listed classes)  

PROP_REQHEIGHT=\
Property   : Prop_ReqHeight\n\r\
Targets    : Areas, Room, Exit\n\r\
Parameters : a maximum height to enter\n\r\
Example    : 12\n\r\
Description: \n\r\
Creates a maximum height in order to enter a room.  Similar to Prop_Crawlspace.

PROP_REQLEVELS=\
Property   : Prop_ReqLevels\n\r\
Targets    : Room, Areas, Exits\n\r\
Parameters : ==, <=, >=, >, or < followed by a level number\n\r\
Example    : <=10 >=5\n\r\
Description: \n\r\
Creates level restrictions for entering a room.  Followers will be allowed unless \
the NOFOL parameter appears.  The parameter should describe only the allowed levels. \
Multiple criteria are allowed. The term "NOSNEAK" may be added to the parameter \
to disallow sneaking past your criteria.

PROP_REQNOMOB=\
Property   : Prop_ReqNoMOB\n\r\
Targets    : Room, Areas, Exit\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Prevents non-player mobs without followers from entering the room.

PROP_REQPKILL=\
Property   : Prop_ReqPKill\n\r\
Targets    : Room, Exit, Area\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Allows access only to those players who have their playerkill flag set.

PROP_REQRACES=\
Property   : Prop_ReqRaces\n\r\
Targets    : Rooms, Areas, Exits\n\r\
Parameters : room masks listed below\n\r\
Example    : -all +elf\n\r\
Description: \n\r\
Creates race restrictions for entering a room.  Followers will be allowed unless \
explicitly disallowed.  Valid parameters include: \n\r\
nosneak (disallow sneaking past the requirement)\n\r 
-all (disallow all races)  \n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
+elf +half +human (create exceptions to -all)  \n\r\
-elf -half -human (disallow only listed races)  

PROP_REQTATTOO=\
Property   : Prop_ReqTattoo\n\r\
Targets    : Rooms, Areas, Exits, Items\n\r\
Parameters : tattoo masks listed below\n\r\
Example    : -all +manlymen\n\r\
Description: \n\r\
Creates tattoo restrictions for entering a roomor possessing an item.  Followers \
will be allowed unless explicitly disallowed.  See the Prop_Tattoo property for \
more information on Tattoos.  Understood masks include:\n\r\
nosneak (disallow sneaking past the requirement)\n\r 
-all (disallow all tattos) \n\r\
nofol (disallow followers of appropriate alignment)  \n\r\
+none (allow mobs without ANY tattoos, creates an exception to -all) \n\r\
+TATTOONAME (create exceptions to -all) \n\r\
-TATTOONAME (disallow only the listed tattoos) 

PROP_RESISTANCE=\
Property   : Prop_Resistance\n\r\
Targets    : MOB\n\r\
Parameters : see Prop_HaveResister\n\r\
Example    : see Prop_HaveResister\n\r\
Description: \n\r\
Gives a mob natural resistances and immunities. See Prop_HaveResister for more \
information. 

PROP_RESTRICTSPELLS=\
Property   : Prop_RestrictSpells\n\r\
Targets    : Room, Area\n\r\
Parameters : proper spell names seperated by semicolons\n\r\
Example    : Spell_Sleep;Skill_Recall;\n\r\
Description: \n\r\
Cancels the effects of the listed spells when cast on or in the room. 

PROP_ROOMDARK=\
Property   : Prop_RoomDark\n\r\
Targets    : Areas, Room\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes a room dark, so that you need a light to see it. 

PROP_LOTSFORSALE=\
Property   : Prop_LotsForSale\n\r\
Targets    : Room\n\r\
Parameters : Price of each room on the lot\n\r\
Example    : 1000000\n\r\
Description: \n\r\
Makes this room and future adjacent rooms available for purchase.  \
This property is an extension of the Prop_RoomForSale property, and \
includes all of its capabilities, PLUS, when this room is sold, \
adjacent lots will automatically be created and put up for sale, \
allowing the player to expand his or her property.  When the properties \
are sold, or fall back out of any players possession, the system will \
automatically retract the created rooms.

PROP_ROOMFORSALE=\
Property   : Prop_RoomForSale\n\r\
Targets    : Room\n\r\
Parameters : Price of the room\n\r\
Example    : 1000000\n\r\
Description: \n\r\
Makes this room available for purchase by a player.  The room will be \
automatically listed in the stock of any ShopKeeper in the SAME AREA who \
is designated a LandSeller, or any shopkeeper who has the proper StdTitle \
item in its selling inventory.  The system will automatically maintain the \
integrity of any items left in the room, including restoring them on reboot.  \
After a room is sold, the player need only enter "LOOK ID" to see the rooms \
ID for the purposes of identifying his or her lot in the future.  The title received \
for purchasing a room may be GIVEn or SELLed to change possession of the property.

PROP_ENLARGEROOM=\
Property   : Prop_EnlargeRoom\n\r\
Targets    : Room\n\r\
Parameters : number or adjustment of movement points\n\r\
Example    : 2\n\r\
           : +2\n\r\
           : -2\n\r\
           : /2\n\r\
           : *2\n\r\
Description: \n\r\
Change the number of movement points required to cross the room, the +-/* signs may be \
used to adjust the amount for a given room, or an absolute value may be given.

PROP_SAFEPET=\
Property   : Prop_SafePet\n\r\
Targets    : MOB\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes the mob with this property completely unattackable.

PROP_SPELLADDER=\
Property   : Prop_SpellAdder\n\r\
Targets    : MOB\n\r\
Parameters : A percentage, and proper spell names seperated by semicolons\n\r\
Example    : 50% Spell_Invisible;Prayer_Sanctuary\n\r\
Description: \n\r\
Puts a mob under certain spell effects.  Easier to just add them directly. \
I don't know why I made this... 

PROP_STATTRAINER=\
Property   : Prop_StatTrainer\n\r\
Targets    : MOB\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes a mob suitable for training character statistics, by setting all \
statistics to 25.

PROP_TATTOO=\
Property   : Prop_Tattoo\n\r\
Targets    : MOB\n\r\
Parameters : tattoo names delimited by semicolons\n\r\
Example    : ;UNDEADKILLER;MANLYMEN;\n\r\
Description: \n\r\
This property is used to give MOBs tattoos.  They are stored as abilities \
instead of affects, unlike the other Properties! Tattoo's are intended to \
act as miscellaneous flags which players may obtain, not unlike a quest point.  \
These tattoo's can then be checked for as requirements to enter rooms or exits, \
or to possess certain items. \
\n\r\
An example would be like this:  The completion of a specific quest occurs when \
Gunther defeats the evil sorcerer Nunder and enters his inner chamber (where all \
the treasure is hidden).  Entering this inner chamber automatically grants Gunther \
a Tatto called "NUNDERKILLER".  Now, elsewhere in the realm is the second quest \
where Nunder's apprentice has escaped with an ancient artifact and is up to \
no good.  However, to even ENTER the area where Nunder's apprentice is operating, \
the system (via the Prop_ReqTattoo property on this other Area) requires that \
Gunther already have the "NUNDERKILLER" Tattoo.  If Gunther had not defeated \
Nunder and obtained the "NUNDERKILLER" Tattoo, he would not be allowed into \
the realm of Nunder's apprentice.

PROP_TATTOOADDER=\
Property   : Prop_TattooAdder\n\r\
Targets    : MOBs, Items, Exits, Rooms, Areas, Weapons, Food, Drink, Armor\n\r\
Parameters : tattoo name to grant\n\r\
Example    : MANLYMEN\n\r\
Description: \n\r\
This property is used to give MOBs tattoos based on an action taken.  The tattoo is \
given by the object with this property, based on an action which depends on the type of \
object with this property.  The actions which trigger the tattoo include:\n\r\
MOB - speak \n\r\
Item - get \n\r\
Exit - enter \n\r\
Room - enter \n\r\
Area - enter \n\r\
Weapon - use in battle \n\r\
Food - eat \n\r\
Drink - drink \n\r\
Armor - wear 

PROP_TRANSPORTER=\
Property   : Prop_Transporter\n\r\
Targets    : MOBs, Items, Exits, Rooms, Areas, Weapons, Food, Drink, Armor\n\r\
Parameters : Room ID\n\r\
Example    : Midgaard#3001\n\r\
Description: \n\r\
This property is used to transport mobs to a particular place based on an action taken.  \
The actions which trigger the transport include:\n\r\
MOB - speak \n\r\
Item - get \n\r\
Exit - enter \n\r\
Room - enter \n\r\
Area - enter \n\r\
Weapon - use in battle \n\r\
Food - eat \n\r\
Drink - drink \n\r\
Armor - wear 

PROP_USESPELLCAST=\
Property   : Prop_UseSpellCast\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells seperated by semicolons\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Description: \n\r\
When the item with this property is worn or wielded, the owner \
will be affected by one of the listed spells. 

PROP_WEARADJUSTER=\
Property   : Prop_WearAdjuster\n\r\
Targets    : Items (armor and weapons principally)\n\r\
Parameters : see Prop_HaveAdjuster\n\r\
Example    : see Prop_HaveAdjuster\n\r\
Description: \n\r\
Whenever the item having this property is wielded or worn, the statistics of \
the owner will be adjusted as described in the parameters.  Removing the \
item will remove the effects. See Prop_HaveAdjuster for more information \
on the valid parameters for this property. 

PROP_WEARRESISTER=\
Property   : Prop_WearResister\n\r\
Targets    : Items (armor and weapons principally)\n\r\
Parameters : see Prop_HaveResister\n\r\
Example    : see Prop_HaveResister\n\r\
Description: \n\r\
Whenever the item having this property is wielded or worn, the owner gains \
certain resistances and immunities described in the parameters.  When removed, \
the resistances and immunities are also cancelled.  See Prop_HaveResister for \
more information on valid parameters for this property. 

PROP_WEARSPELLCAST=\
Property   : Prop_WearSpellCast\n\r\
Targets    : Items\n\r\
Parameters : a list of properly named spells seperated by semicolons\n\r\
Example    : Spell_MageArmor;Spell_Shield\n\r\
Description: \n\r\
So long as the item with this property is being worn or wielded, the owner \
will be under the effect of the listed spells. 

PROP_WEARZAPPER=\
Property   : Prop_WearZapper\n\r\
Targets    : Items\n\r\
Parameters : see Prop_HaveZapper\n\r\
Example    : see Prop_HaveZapper\n\r\
Description: \n\r\
Whenever the owner of the item with this property tries to wear or wield the \
item, they will be zapped unless it is allowed by the listed parameters.  \
See Prop_HaveZapper for more information on valid parameters. 

PROP_CLOSEDDAYNIGHT=\
Property   : Prop_ClosedDayNight\n\r\
Targets    : Items, Mobs, Rooms, Exits\n\r\
Parameters : (DAY/NIGHT) defaults NIGHT\n\r\
Example    : DAY\n\r\
Description: \n\r\
Affects the thing with this property depending on the time of day. \
Rooms will go dark, exits will close, mobs will become unseeable and \
inactive, and items will become unseeable.


PROP_WIZINVIS=\
Property   : Prop_WizInvis\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Grants the MOB unlimited sensory knowledge as well as complete undetectibility.

TRAP_ENTER=\
Ability    : Trap_Enter\n\r\
Targets    : Rooms, Exits\n\r
Parameters : Set ability to trap type (0-3)\n\r\
Parameters : 0=needle, 1=pit/blade, 2=gas, 3=spell\n\r\
Description: \n\r\
A trap triggered when entering one of the above.

TRAP_ENTERBLADE=\
Ability    : Trap_EnterBlade\n\r\
Targets    : Rooms\n\r
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A blade trap triggered when entering one of the above.

TRAP_ENTERGAS=\
Ability    : Trap_EnterGas\n\r\
Targets    : Rooms, Exits\n\r
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A gas trap triggered when entering one of the above.

TRAP_ENTERNEEDLE=\
Ability    : Trap_EnterNeedle\n\r\
Targets    : Rooms, Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A needle trap triggered when entering one of the above.

TRAP_ENTERPIT=\
Ability    : Trap_EnterPit\n\r\
Targets    : Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A pit trap triggered when entering one of the above.

TRAP_ENTERSPELL=\
Ability    : Trap_EnterSpell\n\r\
Targets    : Rooms, Exits\n\r\
Parameters : Name of the spell; parameters\n\r\
Example    : Spell_Fireball\n\r\
Example    : Spell_FakeWeapon; sword\n\r\
Description: \n\r\
A spell casting pit trap triggered when entering one of the above.

TRAP_GET=\
Ability    : Trap_Get\n\r\
Targets    : Items\n\r\
Parameters : Set ability to trap type (0-3)\n\r\
Parameters : 0=needle, 1=pit/blade, 2=gas, 3=spell\n\r\
Description: \n\r\
A trap triggered when getting an item.

TRAP_GETBLADE=\
Ability    : Trap_GetBlade\n\r\
Targets    : Items\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A blade trap triggered when getting an item.

TRAP_GETGAS=\
Ability    : Trap_GetGas\n\r\
Targets    : Items\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A gas trap triggered when getting an item.

TRAP_GETNEEDLE=\
Ability    : Trap_GetNeedle\n\r\
Targets    : Items\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A needle trap triggered when getting an item.


TRAP_GETSPELL=\
Ability    : Trap_GetSpell\n\r\
Targets    : Items\n\r\
Parameters : Name of the spell; parameters\n\r\
Example    : Spell_Fireball\n\r\
Example    : Spell_FakeWeapon; sword\n\r\
Description: \n\r\
A spell casting pit trap triggered when getting one of the above.

TRAP_OPEN=\
Ability    : Trap_Open\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : Set ability to trap type (0-3)\n\r\
Parameters : 0=needle, 1=pit/blade, 2=gas, 3=spell\n\r\
Description: \n\r\
A trap triggered when opening one of the above.

TRAP_OPENBLADE=\
Ability    : Trap_OpenBlade\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A blade trap triggered when opening one of the above.

TRAP_OPENGAS=\
Ability    : Trap_OpenGas\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A gas trap triggered when opening one of the above.

TRAP_OPENNEEDLE=\
Ability    : Trap_OpenNeedle\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A needle trap triggered when opening one of the above.


TRAP_OPENSPELL=\
Ability    : Trap_OpenSpell\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : Name of the spell; parameters\n\r\
Example    : Spell_Fireball\n\r\
Example    : Spell_FakeWeapon; sword\n\r\
Description: \n\r\
A spell casting pit trap triggered when opening one of the above.

TRAP_UNLOCK=\
Ability    : Trap_Unlock\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : Set ability to trap type (0-3)\n\r\
Parameters : 0=needle, 1=pit/blade, 2=gas, 3=spell\n\r\
Description: \n\r\
A trap triggered when unlocking one of the above.

TRAP_UNLOCKBLADE=\
Ability    : Trap_UnlockBlade\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A blade trap triggered when unlocking one of the above.

TRAP_UNLOCKGAS=\
Ability    : Trap_UnlockGas\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A gas trap triggered when unlocking one of the above.

TRAP_UNLOCKNEEDLE=\
Ability    : Trap_UnlockNeedle\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A needle trap triggered when unlocking one of the above.

TRAP_UNLOCKSPELL=\
Ability    : Trap_UnlockSpell\n\r\
Targets    : Items (Containers), Exits\n\r\
Parameters : Name of the spell; parameters\n\r\
Example    : Spell_Fireball\n\r\
Example    : Spell_FakeWeapon; sword\n\r\
Description: \n\r\
A spell casting pit trap triggered when unlocking one of the above.

TRAP_TRAP=\
Ability    : Trap_Trap\n\r\
Targets    : Items, Exits, Rooms\n\r\
Parameters : Set ability to trap type (0-3)\n\r\
Parameters : 0=needle, 1=pit/blade, 2=gas, 3=spell\n\r\
Description: \n\r\
A trap triggered when doing something to one of the above.  This is \
a base class for other traps.  Do not use!

SKILL_ALLBREATHING=\
Ability    : Skill_AllBreathing\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Allows the mob to breath in any conditions or environments.  Great for golems \
and other non-breathing creatures. 

SKILL_HANDCUFF=\
Ability    : Skill_Handcuff\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Allows the mob to bind another mob that is sitting or lying down, and force them \
to follow them around.  This skill also makes the prisoner temporarily not-assist \
in combat.

SKILL_RESISTANCE=\
Ability    : Skill_Resistance\n\r\
Parameters : see Prop_HaveResister\n\r\
Example    : see Prop_HaveResister\n\r\
Description: \n\r\
Gives the mob skill-based resistances and immunities. 

SKILL_REGENERATION=\
Ability    : Skill_Regeneration\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Gives the mob the ability to regenerate some of its hit points every \
round that it is damaged. 

ACIDBREATH=\
Ability    : Acidbreath\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Duh!

DRAGONBREATH=\
Ability    : Dragonbreath\n\r\
Parameters : acid, fire, cold, lightning, or gas\n\r\
Example    : acid\n\r\
Description: \n\r\
Gives the mob the ability to use a breath weapon. 

FIREBREATH=\
Ability    : Firebreath\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Duh!

FROSTBREATH=\
Ability    : Frostbreath\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Duh!

GASBREATH=\
Ability    : Gasbreath\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Duh!

LIGHTNINGBREATH=\
Ability    : Lightningbreath\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Duh!

PARALYSIS=\
Ability    : Paralysis\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The ability to paralyze.

PRISONER=\
Ability    : Prisoner\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This mob property makes them unable to recall or magically leave their present location. \
It also prevents fleeing from combat.

POISON=\
Ability    : Poison\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The ability to poison.  Almost identical to Thief_Poison skill of thieves.

TICKTOCK=\
Ability    : TickTock\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Advance the time by one hour.

UNDEAD_COLDTOUCH=\
Ability    : Undead_ColdTouch\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An attack which, if successful, gives the target a strength and constitution of 3.

UNDEAD_LIFEDRAIN=\
Ability    : Undead_LifeDrain\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An attack that is almost identical to the mage Drain spell, without the magical \
nature.

BEHAVIOR_ACTIVETICKER=\
Behavior   : ActiveTicker\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A base class for mobile type behaviors.  Do not use.

BEHAVIOR_FASTERROOM=\
Behavior   : FasterRoom\n\r\
Targets    : Rooms, Areas\n\r\
Parameters : (HEALTH=[NUM BURST TICKS]) (BURST=[NUM BURST TICKS])\n\r\
Example    : burst=2\n\r\
           : health=5\n\r\
           : burst=2 health=5\n\r\
Description: \n\r\
This allows a room to give an extra burst of speed to all the mobs in the \
room or rooms with this behavior. The two parameters are each optional.  \
If the "health" parameter is given, then the mob will get a number of regen \
ticks equal to the number given.  For instance, if the value is 2, then the \
mob will regen twice per tick, a value of 3 means 3 times per tick, etc.  \
Values of 1 or less mean no extra regen ticks.  The "burst" parameter refers \
to bursts of extra speed to the mobs in the room equal to the number given. \
For instance, if the value is 2, the mob will move twice as fast per tick, \
a value of 3 means 3 times as fast, etc.  Values of 1 or less mean normal \
ticking applies.

BEHAVIOR_AGGRESSIVE=\
Behavior   : Aggressive\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes the mob attack any player mob it can detect in the same room, from \
the moment the new mob enters.  Horribly wounded mobs are not aggressive. 

BEHAVIOR_ALIGNHELPER=\
Behavior   : AlignHelper\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Joins a fight on the side of anyone who is the same alignment as the mob. 

BEHAVIOR_ANTIVAGRANT=\
Behavior   : AntiVagrant\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Wakes up any MOB that is sleeping on a CityStreet type locale.  Will also stand up \
anyone sitting on a city street.

BEHAVIOR_ARREST=\
Behavior   : Arrest\n\r\
Targets    : Areas\n\r\
Parameters : blank, or the name of a formatted INI file in resources\n\r\
Example    : laws_mycity.ini\n\r\
Description: \n\r\
This powerful behavior allows you to set up the enforcement of laws inside of a city. \
The only parameter is the name of an ini file in the resources directory.  If left \
blank, the default laws.ini file will be used.  The ini file specifies the judges, \
enforcement mobs, the laws and their punishments, and the location of jails.  The \
messages seen by the criminals is also contained therein.

BEHAVIOR_BEGGAR=\
Behavior   : Beggar\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob with this behavior will beg for money from players, and say thank you when rewarded.

BEHAVIOR_BRIBEGATEGUARD=\
Behavior   : BribeGateGuard\n\r\
Targets    : MOBs\n\r\
Parameters : Price of entry, Gate System\n\r\
Example    : price=5 gates=Avalon\n\r\
Description: \n\r\
The mob will work akin to a gate guard, but you have to have at least the \
price on your tab for the guard to open it (or let you open it from that side) \
Any payment made over the price is retained, in a manner akin to a bank chain, \
so if any other guards are in the same Gate System, they will all use the same \
tab.  DO NOT put one on each side - unlike Gate Guards, these guys don't play \
well with others. If you want players to be able to sneak by them, merely make \
sure they can't see sneaking or invis - whichever.  The hiding player will have \
to wait for another player to get the door open to sneak through.

BEHAVIOR_BROTHERHELPER=\
Behavior   : BrotherHelper\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Joins a fight on the side of an identical mob, or a mob from the same starting room.

BEHAVIOR_CLANHELPER=\
Behavior   : ClanHelper\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Joins a fight on the side of an identical mob, or one of the same race.

BEHAVIOR_CLERICNESS=\
Behavior   : Clericness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An extension of CombatAbilities, this behavior makes the mob a Cleric by class, \
and gives the mob clerical prayers appropriate to its alignment and level.  After \
this behavior has triggered, it will often require a reset for any alignment or \
level changes to the mob to take over. 

BEHAVIOR_COMBATABILITIES=\
Behavior   : CombatAbilities\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Gives the mob the urge to use their skills, spells, prayers, songs, and other \
abilities during combat. 

BEHAVIOR_CORPSEEATER=\
Behavior   : CorpseEater\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob will appear to eat any corpse it comes across.

BEHAVIOR_DECAY=\
Behavior   : Decay\n\r\
Targets    : MOBs, Items\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
According to the timing and percent chance described by the parameters, the \
mob or item with this behavior will vanish at the expired time.  MOBs do not \
begin their countdown until attacked, items when they are picked up, \
weapons when they are first wielded, or armor when it is first worn.

BEHAVIOR_DOORWAYGUARDIAN=\
Behavior   : DoorwayGuardian\n\r\
Targets    : MOBs\n\r\
Parameters : a doorway direction, followed by an optional list \n\r\
           : of masking parameters described below\n\r\
Example    : north\n\r\
           : east -class +mage -race +elf -evil\n\r\
Description: \n\r\
The mob will not allow any other mob or player to open or move through a doored \
exit.  The mob must be killed to get by!  If a direction is not specified, the \
mob will protect all exits, otherwise only the one in the direction specified. \
The guard will also behave according to whether the player trying to move meets \
the other parameter requirements.  If no other parameters are given, the guard \
will always block the players. Valid parameters include:  \n\r\
-class  (disallow all classes)  \n\r\
-baseclass  (disallow all base classes)  \n\r\
+thief +fighter +mage +paladin +bard +ranger (create exceptions to -class and -baseclass)\n\r\
-thief -fighter -mage -paladin -bard -ranger (disallow only listed classes)\n\r\
-race (disallow all racial categories)  \n\r\
+elf +dwarf +human +half +gnome (create exceptions to -race)  \n\r\
-elf -dward -human -half -gnome (disallow only listed races)  \n\r\
-alignment (disallow all alignments)  \n\r\
+evil +good +neutral (create exceptions to -alignment)  \n\r\
-evil -good -neutral (disallow only listed alignments)  

BEHAVIOR_DROWNESS=\
Behavior   : Drowness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The behavior of the drow differs slightly between males and females.  This behavior is \
therefore an entire kit, including weapons, armor, spells, and combat behavior.  DO NOT \
(I repeat) DO NOT use this behavior with any CombatAbilities derivitive, unless you want \
an unfair and utterly deadly opponent.  Also, do NOT add any equipment to the mob with this \
behavior.  The kit will supply the mob with weapons and armor.

BEHAVIOR_EMOTER=\
Behavior   : Emoter\n\r\
Targets    : Room, MOBs, Items, Exits\n\r\
Parameters : Max and min ticks, pct chance, emote strings seperated by ';'.\n\r\
Example    : min=10 max=20 chance=25;wiggles his bottom.;smiles evilly.;burps!\n\r\
Description: \n\r\
This behavior defines a serious of random emotes.  All parameters are seperated \
by the semicolons shown above.  The first parameter can me empty for defaults, \
or may contain a setting for minimum ticks, maximum ticks, and the percept chance \
of occurrence after the random number of ticks has expired.  In the above example \
every 10-20 ticks, there is a 25% chance that the object with this property will \
select one of the emotes randomly and perform it.

BEHAVIOR_FIGHTERNESS=\
Behavior   : Fighterness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An extension of CombatAbilities, this behavior makes the mob a Fighter by class, \
and gives the mob fighter skills appropriate to its level.  After \
this behavior has triggered, it will often require a reset for any \
level changes to the mob to take over. 

BEHAVIOR_DRUIDNESS=\
Behavior   : Druidness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An extension of CombatAbilities, this behavior makes the mob a Druid by class, \
and gives the mob druid skills appropriate to its level.  After \
this behavior has triggered, it will often require a reset for any \
level changes to the mob to take over. 

BEHAVIOR_BARDNESS=\
Behavior   : Bardness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An extension of CombatAbilities, this behavior makes the mob a Bard by class, \
and gives the mob bard songs appropriate to its level.  After \
this behavior has triggered, it will often require a reset for any \
level changes to the mob to take over. 

BEHAVIOR_COMMONSPEAKER=\
Behavior   : CommonSpeaker\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This behavior makes sure that a mob is always speaking Common, even if it should \
be a race other than Human, or it should be polymorphed.

BEHAVIOR_FIGHTFLEE=\
Behavior   : FightFlee\n\r\
Targets    : MOBs\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
According to the timing and percent chance described by the parameters, the \
mob or item with this behavior will flee during combat.

BEHAVIOR_FOLLOWER=\
Behavior   : Follower\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob with this behavior will follow any other mob that leaves the room.

BEHAVIOR_GATEGUARD=\
Behavior   : GateGuard\n\r\
Targets    : MOBs\n\r\
Parameters : a list of masking parameters described below\n\r\
Example    : -class +mage -race +elf -evil\n\r\
Description: \n\r\
When this mob is standing next to a doorway and a player enters, the mob will open \
the door for the player, and close it after them.  The guard will also lock the door \
at night, if the door has a lock.  The guard will behave according to whether \
any players in the room meet the parameters.  If no parameter is given, the \
guard will always follow the behavior. Valid parameters include:  \n\r\
-class  (disallow all classes)  \n\r\
-baseclass  (disallow all base classes)  \n\r\
+thief +fighter +mage +paladin +bard +ranger (create exceptions to -class and -baseclass)\n\r\
-thief -fighter -mage -paladin -bard -ranger (disallow only listed classes)\n\r\
-race (disallow all racial categories)  \n\r\
+elf +dwarf +human +half +gnome (create exceptions to -race)  \n\r\
-elf -dward -human -half -gnome (disallow only listed races)  \n\r\
-alignment (disallow all alignments)  \n\r\
+evil +good +neutral (create exceptions to -alignment)  \n\r\
-evil -good -neutral (disallow only listed alignments)  

BEHAVIOR_GETSALLEQUIPPED=\
Behavior   : GetsAllEquipped\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This is a deprecated behavior, but listed here in case someone can think of \
a new use for it.  This behavior causes the mob, on reset, to grab everything \
in its default room, and attempt to wear it. 

BEHAVIOR_GOODEXECUTIONER=\
Behavior   : GoodExecutioner\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob with this behavior will attack any evil or thief non-player mob it \
detects.

BEHAVIOR_GOODGUARDIAN=\
Behavior   : GoodGuardian\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This is a very active behavior.  If the mob detects any evil mob attacking \
a good mob in the same room, or an adjacent room, it will attack the evil \
mob.  If evil mobs are fighting, it will do nothing.  If two good or neutral \
mobs are fighting, it will stop the fight.

BEHAVIOR_GUARD=\
Behavior   : Guard\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
If ANY mob, player or non-player, is attacked in the same room as the mob with \
this behavior, this mob will come to the victim's defense.

BEHAVIOR_HEALER=\
Behavior   : Healer\n\r\
Targets    : MOBs\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
The mob with this behavior gains Cure Disease, Cure Light Wounds, Cure \
Serious Wounds, Bless, and Sanctuary.  At random, the mob will cast these \
spells on any player-mobs in the room.

BEHAVIOR_HIRELING=\
Behavior   : Hireling\n\r\
Targets    : MOBs\n\r\
Parameters : price to hire;minutes of service\n\r\
Example    : 10000;30\n\r\
Description: \n\r\
Allows a mob to hire him or herself out for a given amount of time. \
The first parameter is the price to hire the mob, followed by a semicolon \
and the number of minutes that amount of money purchases.  Additional money \
may be given by the player to extend the time.  When the time expires, the \
mob returns to his or her start room.

BEHAVIOR_ITEMMENDER=\
Behavior   : ItemMender\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
For a price, this mob will repair damaged weapons and armor.  The mender will NOT work for Archons, however.

BEHAVIOR_ITEMMENDER=\
Behavior   : ItemMender\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
For a price, this mob will resize armor to fit the mob.  The mender will NOT work for Archons, however.

BEHAVIOR_ITEMIDENTIFIER=\
Behavior   : ItemIdentifier\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
For a price, this mob will identify items.  They will NOT work for Archons, however.

BEHAVIOR_MAGENESS=\
Behavior   : Mageness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An extension of CombatAbilities, this behavior makes the mob a Mage by class, \
and gives the mob mage spells appropriate to its level.  After \
this behavior has triggered, it will often require a reset for any \
level changes to the mob to take over.

BEHAVIOR_MOBEATER=\
Behavior   : MOBEater\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This behavior allows a mob to eat other mobs or players, and digest them!  The chance runs \
at about 5% every two ticks during combat.  Great for dragons!

BEHAVIOR_MOBHELPER=\
Behavior   : MOBHelper\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob with this behavior will come to the defense of any non-player mob \
which is attacked in its presence.

BEHAVIOR_MOBILE=\
Behavior   : Mobile\n\r\
Targets    : MOBs\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
According to the timing and percent chance described by the parameters, the \
mob with this behavior will travel in a random available direction.

BEHAVIOR_MOBILEAGGRESSIVE=\
Behavior   : MobileAggressive\n\r\
Targets    : MOBs\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
According to the timing and percent chance described by the parameters, the \
mob with this behavior will travel in a random available direction. The mob \
will attack any player mob it comes across.

BEHAVIOR_MOBILEGOODGUARDIAN=\
Behavior   : MobileGoodGuardian\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This is a very active behavior.  If the mob detects any evil mob attacking \
a good mob in the same room, or an adjacent room, it will attack the evil \
mob.  If evil mobs are fighting, it will do nothing.  If two good or neutral \
mobs are fighting, it will stop the fight. This mob is also mobile.

BEHAVIOR_MOBTEACHER=\
Behavior   : MOBTeacher\n\r\
Targets    : MOBs\n\r\
Parameters : A char class name, an ability name, or empty to teach all classes.\n\r\
Example    : mage\n\r\
Description: \n\r\
This behavior makes the mob suitable to teach skills, spells, prayers, or \
songs, as specified in the parameters.  If the parameter is empty, the \
mob will be able to teach all abilities.  If the parameter contains the \
name of a character class, the mob will only teach abilities of that class. \
*Any* class may always practice with a MOBTeacher, but the mob may only \
teach those abilities for the character class the parameters describe.

BEHAVIOR_MONEYCHANGER=\
Behavior   : MoneyChanger\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Whenever a player gives the money changer coins, the money changer will give back to \
the player a bag containing a number of high-denomination notes.  The notes are \
considerably lighter than the gold would be.

BEHAVIOR_MUDCHAT=\
Behavior   : MudChat\n\r\
Targets    : MOBs\n\r\
Parameters : optional chat-mob-type\n\r\
Example    : smurf\n\r\
Description: \n\r\
Allows the mobs to speak and respond to speech.  The chat.dat file, from which \
speech behavior is derived, contains many "templates" for different speech \
behaviors.  MudChat will attempt to choose the correct speech behavior for \
the mob based on the mobs name.  This may be overridden by specifying a \
speech behavior in the parameters.  Speech patterns in the chat.dat at \
present include:\n\r\
default\n\r\
dog fido beastly fido_dog\n\r\
cat kitten lion\n\r\
pig boar\n\r\
doll toy\n\r\
papa_smurf smurf\n\r\
monster\n\r\
smurfette\n\r\
healer cleric doctor

BEHAVIOR_MOVING=\
Behavior   : Mover\n\r\
Targets    : Rooms\n\r\
Parameters : min=3 max=3 chance=100;[xmlsection];[ticks at stops];[ticks between stops] \n\r\
Example    : min=3 max=3 chance=100;SUBWAY;3;10\n\r\
Description: \n\r\
The above example would set the room's parameters to the ones listed in the SUBWAY \
section of the file resources/moving.xml.  There is a subway example already there. \n\r\
NOTE!      : The follow conditions -must- be met before setting the room to this behaviour. \n\r\
1. \n\r\
The rooms that you want this room to open out to -must- already be defined before \
you make the XML section. \n\r\
2. \n\r\
The XML document -must- be writen before you set this behaviour. \n\r\
3. \n\r\
You -cannot- have the moving room override an exit, ie. if room A links south to Room B \n\r\
you cannot have the mover link north to room A.\n\r
******************* \n\r\
XML DOCUMENT NOTES: \n\r\
******************* \n\r\
You can use the following strings in the XML document to be translated on the fly \n\r\
$disproom  : if mover is at a stop this is the room it is opened to otherwise \n\r\
.          : this is the next room that this room will open too. \n\r\
$inopendir : this is the direction the door on the inside (the mover) opens. \n\r\
$outopendir: this is the direction the door on the outside (where the mover stoped) opens. \n\r\
$traveldir : this is the current direction that the room is moving in. \n\r\
 \n\r\
<STOPS> here you would list the ROOMID of each room the mover will stop at example.\n\r\
<STOP1>[first stop]</STOP1>n\r\
 \n\r\
<NORMALDIRECTION> and <REVERSEDIRECTION> \n\r\
-in these tags you define the parameters for the mover while is is going back and forth. \n\r\
-normal is stop1 to stopwhatever and reverse is stopwhatever to stop1. \n\r\
-TRAVELDIRECTION = the direction it is traveling from point a to point b. \n\r\
-DOORSDIRECTION = the direction the doors open out of the mover. \n\r\
--<INSIDE> and <OUTSIDE> \n\r\
---in these tags you define what is echoed to the client in the mover and outside. \n\r\
---ARRIVALINFO = what is echoed when the room gets to the stop \n\r\
---DEPARTINFO = what is echoed when the room leaves the stop \n\r\
<ROOMDESCRIPTIONS> \n\r\
-here you define what is appended to the end of the room descriptions. \n\r\
-<NORMALDIRECTION> and <REVERSEDIRECTION> \n\r\
--<INSIDE> and <OUTSIDE> \n\r\
---DOOROPENED = if the door is opened append this.\n\r\
---DOORCLOSED = if the door is closed append this.\n\r\
 \n\r\
There are two examples in the XML document you can look at for further info. \n\r\
 \n\r\
Ideas for this would be, subways, busses, wagon trains (caravans) spaceships, \
stargates, everchanging paths in mazes, elevators, ect.

BEHAVIOR_NICEABILITIES=\
Behavior   : NiceAbilities\n\r\
Targets    : MOBs\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
According to the timing and percent chance described by the parameters, the \
mob with this behavior will use any of its benevolent abilities, including \
spells, prayers, songs, or others, for the benefit of player mobs in the \
same room.

BEHAVIOR_NOCOMBATASSIST=\
Behavior   : NoCombatAssist\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This behavior makes sure that a mob does not assist in combat when following \
a player or another mob.

BEHAVIOR_OBJECTGUARDIAN=\
Behavior   : ObjectGuardian\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
This will cause a mob to explicitly prevent any other mob from taking or \
removing any object in the same room as the mob. You have to kill him!

BEHAVIOR_PLAYERHELPER=\
Behavior   : PlayerHelper\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob with this behavior will come to the defense of any player mob \
against any non-player mob.

BEHAVIOR_ROMGANGMEMBER=\
Behavior   : ROMGangMember\n\r\
Targets    : MOBs\n\r\
Parameters : The name of the gang\n\r\
Example    : Troll\n\r\
Description: \n\r\
A silly behavior to better support ROM area files.  The mob with this behavior will attack any other \
mob which also has this behavior, but is in a different gang.  This behavior is not active when \
a mob with the ROMPatrolman is in the room.

BEHAVIOR_ROMPATROLMAN=\
Behavior   : ROMPatrolman\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
A silly behavior to better support ROM area files.  The mob with this behavior will complain whenever \
there is a fight going on in the same room.  The mob may do nothing, join the fight, or break it up.

BEHAVIOR_SCAVENGER=\
Behavior   : Scavenger\n\r\
Targets    : MOBs\n\r\
Parameters : min, max ticks, and a percent chance\n\r\
Example    : min=10 max=20 chance=75\n\r\
Description: \n\r\
According to the timing and percent chance described by the parameters, the \
mob with this behavior will attempt to pick up and take away random objects \
in the same room as the mob.

BEHAVIOR_SCRIPTABLE=\
Behavior   : Scriptable\n\r\
Targets    : MOBs\n\r\
Parameters : You don't want to know\n\r\
Example    : Not in your lifetime\n\r\
Description: \n\r\
This incomplete behavior allows the reactions and behaviors of the mob to be scripted. \
Even if this scripting capability were completely tested, there is no way \
I am including all of the scripting commands in this help file.  No way. They \
would have to be in the Programmers manual.  Look online.

BEHAVIOR_THIEFNESS=\
Behavior   : Thiefness\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
An extension of CombatAbilities, this behavior makes the mob a Thief by class, \
and gives the mob thief skills appropriate to its level.  After \
this behavior has triggered, it will often require a reset for any \
level changes to the mob to take over. The Thiefness behavior also \
includes many non-combat abilities, including sneaking and hiding, \
backstabbing, picking pockets, and even stealing at high levels!

BEHAVIOR_DELAYEDTRANSPORTER=\
Behavior   : Delayed Transporter\n\r\
Targets    : Room\n\r\
Parameters : Max and min ticks, pct chance, room ids seperated by ';'.\n\r\
Example    : min=10 max=20 chance=25;Midgaard#3001;Sewers#6020;Midgaard#3020\n\r\
Description: \n\r\
This behavior defines a serious of random rooms.  All rooms are seperated \
by the semicolons shown above.  The first parameter can me empty for defaults, \
or may contain a setting for minimum ticks, maximum ticks, and the percept chance \
of occurrence after the random number of ticks has expired.  In the above example \
every 10-20 ticks, there is a 25% chance that the mob in the room will \
be teleported to one of the three listed rooms (at random).

BEHAVIOR_VAGRANT=\
Behavior   : Vagrant\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
The mob will spontaneously decide to go to sleep whereever the mob is currently at.  After awhile \
the mob will wake up.

BEHAVIOR_VERYAGGRESSIVE=\
Behavior   : VeryAggressive\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes the mob attack any player mob it can detect in the same room, from \
the moment the new mob enters.  In addition, this behavior will detect any \
mobs in adjacent rooms, and move to attack those as well. \
Horribly wounded mobs are not aggressive.

BEHAVIOR_WIMPYAGGRESSIVE=\
Behavior   : WimpyAggressive\n\r\
Targets    : MOBs\n\r\
Parameters : \n\r\
Example    : \n\r\
Description: \n\r\
Makes the mob attack any sleeping player mob it can detect in the same room.

